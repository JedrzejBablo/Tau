2019-05-03 17:45:43,780 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:45:43,780 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:45:43,780 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:45:43,780 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:45:43,780 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:45:43,781 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:45:43,781 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:45:43,781 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:45:43,781 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:45:43,781 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:45:43,781 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:45:43,781 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61d01788]
2019-05-03 17:45:43,781 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,781 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,781 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,781 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,782 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,782 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,782 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@264c5d07]
2019-05-03 17:45:43,782 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,782 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,782 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,782 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,782 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,782 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,782 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69cac930]
2019-05-03 17:45:43,782 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,782 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,782 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,782 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,782 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,782 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,782 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d39f2d8]
2019-05-03 17:45:43,782 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,782 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,782 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,782 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,782 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,782 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,782 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55ea2d70]
2019-05-03 17:45:43,782 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,782 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,782 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,782 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,782 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,782 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,782 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@175acfb2]
2019-05-03 17:45:43,783 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,783 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,783 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,783 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,783 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,783 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,783 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e868ef5]
2019-05-03 17:45:43,783 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,783 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,783 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,783 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,783 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,783 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,783 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30af7377]
2019-05-03 17:45:43,783 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,783 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,783 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,783 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,783 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,783 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,783 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dab9dd6]
2019-05-03 17:45:43,783 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,783 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,783 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,783 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,783 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,783 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,783 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f099cef]
2019-05-03 17:45:43,783 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,783 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,783 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,784 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,784 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,784 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,784 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bff2185]
2019-05-03 17:45:43,784 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,784 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,784 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,784 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,784 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,784 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,784 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,784 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,784 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:45:43,784 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:45:43,906 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:45:43,906 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:45:43,906 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:45:43,907 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:45:43,907 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:45:43,907 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:45:43,907 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:45:43,907 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:45:43,907 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:45:43,908 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:45:43,908 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:43,908 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:45:43,908 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:45:43,908 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:45:43,909 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:45:43,909 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:43,909 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:45:43,909 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:43,909 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:45:43,909 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:43,910 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:45:43,910 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:45:43,910 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:45:43,910 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:45:43,910 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:45:43,910 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:45:43,910 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:45:43,910 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:45:43,910 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:43,910 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:45:43,911 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:45:43,911 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:45:43,911 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:45:43,911 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:45:43,911 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:45:43,911 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:45:43,911 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:45:43,911 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:43,911 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:45:43,911 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:45:43,911 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:43,911 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:45:43,911 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:43,911 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:45:43,911 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@7ed9ae94]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:45:43,913 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:47:06,495 DEBUG [SpringJUnit4ClassRunner]  - SpringJUnit4ClassRunner constructor called with [class pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:06,504 DEBUG [BootstrapUtils]  - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2019-05-03 17:47:06,510 DEBUG [BootstrapUtils]  - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2019-05-03 17:47:06,520 DEBUG [BootstrapUtils]  - Instantiating TestContextBootstrapper for test class [pl.tau.library.service.LibraryManagerTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2019-05-03 17:47:06,544 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@55f3ddb1 declaringClass = 'pl.tau.library.service.LibraryManagerTest', classes = '{}', locations = '{classpath:/beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2019-05-03 17:47:06,565 DEBUG [ActiveProfilesUtils]  - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:06,566 DEBUG [DefaultTestContextBootstrapper]  - @TestExecutionListeners is not present for class [pl.tau.library.service.LibraryManagerTest]: using defaults.
2019-05-03 17:47:06,566 INFO  [DefaultTestContextBootstrapper]  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-05-03 17:47:06,570 DEBUG [DefaultTestContextBootstrapper]  - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
2019-05-03 17:47:06,576 INFO  [DefaultTestContextBootstrapper]  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c]
2019-05-03 17:47:06,577 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:06,578 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:06,589 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:06,590 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:06,591 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:06,591 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:06,591 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:06,591 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:06,593 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:47:06,593 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:06,593 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:06,595 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:47:06,596 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:47:06,596 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:47:06,631 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:47:06,783 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:47:06,805 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:47:06,805 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@711f39f9
2019-05-03 17:47:06,831 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:47:06,895 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:47:06,929 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:06,929 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:06,929 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:06,929 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:06,930 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:47:06,931 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:47:06,931 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:47:06,933 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:47:06,933 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:47:06,936 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:47:06,936 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:47:06,989 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:47:07,045 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:47:07,050 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:47:07,064 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:47:07,064 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:47:07,065 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:47:07,109 DEBUG [logging]  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-05-03 17:47:07,120 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:47:07,122 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:47:07,124 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:47:07,191 INFO  [Version]  - HHH000412: Hibernate Core {5.1.6.Final}
2019-05-03 17:47:07,192 INFO  [Environment]  - HHH000206: hibernate.properties not found
2019-05-03 17:47:07,194 INFO  [Environment]  - HHH000021: Bytecode provider name : javassist
2019-05-03 17:47:07,224 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:47:07,234 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:47:07,234 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:47:07,244 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:47:07,249 INFO  [Version]  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-05-03 17:47:07,263 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:07,263 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:07,263 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:07,264 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:47:07,265 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:47:07,265 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:47:07,266 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:07,266 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:07,266 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:07,266 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:07,266 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:07,266 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:07,267 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:07,267 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:07,267 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:07,268 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:07,268 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:07,268 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:07,269 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:07,269 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:07,269 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:07,270 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:07,270 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:07,270 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:07,271 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:07,271 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:07,271 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:07,271 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:07,272 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:07,272 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:07,272 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:07,273 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:07,273 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:07,273 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:47:07,274 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:47:07,274 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:07,274 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:07,275 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:07,275 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:07,276 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:07,276 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:07,277 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:07,277 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:07,278 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:07,279 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:47:07,279 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:07,279 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:07,279 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:07,280 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:47:07,280 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:07,280 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:07,281 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:07,281 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:07,281 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:07,281 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:07,282 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:07,282 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:07,283 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:07,283 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:07,283 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:47:07,283 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:07,284 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:07,284 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:07,284 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:07,284 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:07,284 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:07,285 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:47:07,285 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:47:07,286 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:07,286 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:07,286 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:07,287 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:07,287 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:07,287 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:07,287 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:47:07,287 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:47:07,290 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:07,290 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:07,290 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:47:07,292 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:07,292 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:07,294 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:07,294 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:07,294 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:47:07,295 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:47:07,295 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:47:07,297 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:07,297 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:07,297 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bec854f
2019-05-03 17:47:07,297 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31edaa7d
2019-05-03 17:47:07,298 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26adfd2d
2019-05-03 17:47:07,298 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336e6b6
2019-05-03 17:47:07,298 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c3fdb62
2019-05-03 17:47:07,298 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205d38da
2019-05-03 17:47:07,298 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6950ed69
2019-05-03 17:47:07,298 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dd7b5a3
2019-05-03 17:47:07,306 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:07,451 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : invalid authorization specification - not found: 
2019-05-03 17:47:07,460 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:47:07,473 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:47:07,477 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:47:07,557 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:47:07,557 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:47:07,558 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:07,558 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:07,558 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:47:07,559 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:47:07,559 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:47:07,560 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:07,560 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:47:07,561 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:47:07,561 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:47:07,561 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:47:07,561 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:07,562 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:47:07,583 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:47:07,631 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:47:07,643 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:47:07,643 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:47:07,649 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:47:07,655 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:47:07,657 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:47:07,672 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:07,674 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:47:07,675 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:47:07,676 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:47:07,678 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:47:07,680 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:07,680 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:47:07,680 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:47:07,680 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:47:07,680 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:47:07,680 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:07,680 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:47:07,680 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:47:07,680 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:47:07,681 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:47:07,681 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:47:07,681 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:47:07,682 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:47:07,682 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:47:07,705 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:47:07,706 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:47:07,706 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:47:07,706 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:47:07,706 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:47:07,706 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:47:07,706 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:47:07,706 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:47:07,706 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:47:07,706 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:47:07,706 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:47:07,706 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:47:07,706 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:47:07,706 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:47:07,706 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:47:07,706 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:47:07,706 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:47:07,706 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:47:07,706 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:47:07,706 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:47:07,707 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:47:07,707 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:47:07,707 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c6804cd
2019-05-03 17:47:07,707 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:47:07,707 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:47:07,707 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:47:07,707 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:47:07,707 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:47:07,707 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:47:07,707 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:47:07,707 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:47:07,707 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:47:07,707 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:47:07,707 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:47:07,707 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:47:07,707 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:47:07,737 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:47:07,737 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e63ec0b, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:47:07,745 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:47:07,768 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:07,768 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:07,778 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:07,778 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:07,822 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:47:07,822 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:47:07,822 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:47:07,822 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:47:07,822 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:47:07,822 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:47:07,843 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70fab835]
2019-05-03 17:47:07,843 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:07,843 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:07,843 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:07,854 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:07,857 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:07,859 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:07,860 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7555b920]
2019-05-03 17:47:07,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:07,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:07,860 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:07,860 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:07,860 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:07,860 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:07,860 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3591009c]
2019-05-03 17:47:07,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:07,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:07,860 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:07,860 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:07,860 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:07,860 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:07,860 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5cc23a]
2019-05-03 17:47:07,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:07,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:07,860 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:07,860 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:07,861 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:07,861 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:07,861 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61edc883]
2019-05-03 17:47:07,861 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:07,861 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:07,861 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:07,861 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:07,861 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:07,861 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:07,861 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@182f1e9a]
2019-05-03 17:47:07,861 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:07,861 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:07,861 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:07,861 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:07,861 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:07,861 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:07,861 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@660e9100]
2019-05-03 17:47:07,861 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:07,861 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:07,861 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:07,862 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:07,862 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:07,862 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:07,862 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9cd25ff]
2019-05-03 17:47:07,862 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:07,862 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:07,862 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:07,862 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:07,862 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:07,862 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:07,862 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3574e198]
2019-05-03 17:47:07,862 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:07,862 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:07,862 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:07,862 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:07,862 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:07,862 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:07,862 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@db44aa2]
2019-05-03 17:47:07,862 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:07,863 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:07,863 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:07,863 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:07,863 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:07,863 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:07,863 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f093abe]
2019-05-03 17:47:07,863 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:07,863 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:07,863 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:07,864 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:07,864 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:07,864 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:07,875 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:07,875 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:07,875 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:47:07,889 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:07,992 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:07,994 WARN  [SqlExceptionHelper]  - SQL Error: -4001, SQLState: 28501
2019-05-03 17:47:07,994 ERROR [SqlExceptionHelper]  - invalid authorization specification - not found: 
2019-05-03 17:47:07,994 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:47:07,996 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@5b87ed94]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:08,002 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:08,002 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:08,002 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@173b9122, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:47:08,002 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:47:08,002 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:47:08,002 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:47:08,027 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:47:08,029 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:47:08,029 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@7c18432b
2019-05-03 17:47:08,029 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:47:08,034 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:47:08,036 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,037 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,037 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,037 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,037 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:47:08,037 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:47:08,037 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:47:08,037 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:47:08,038 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:47:08,038 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:47:08,038 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:47:08,040 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:47:08,040 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:47:08,041 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:47:08,042 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:47:08,042 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:47:08,042 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:47:08,045 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:47:08,045 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:47:08,045 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:47:08,052 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:47:08,052 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:47:08,052 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:47:08,052 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:08,053 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52eacb4b
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5528a42c
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2a551a63
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1a6f5124
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1edb61b1
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ec2bf82
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@cc62a3b
2019-05-03 17:47:08,054 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6cc0bcf6
2019-05-03 17:47:08,054 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:08,160 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : invalid authorization specification - not found: 
2019-05-03 17:47:08,160 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:47:08,160 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:47:08,161 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:08,161 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:47:08,161 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:47:08,161 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:47:08,161 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:47:08,161 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:47:08,161 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:47:08,161 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:47:08,162 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:47:08,162 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:08,162 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:47:08,162 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:47:08,162 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:47:08,162 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:47:08,162 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:08,162 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:47:08,162 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:47:08,162 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:47:08,162 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:47:08,163 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:08,163 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:47:08,163 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:47:08,163 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:47:08,163 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:47:08,163 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:47:08,163 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:47:08,163 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:47:08,163 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:47:08,163 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:47:08,164 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:47:08,164 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:47:08,164 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:47:08,164 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:47:08,164 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:47:08,164 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:47:08,164 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:47:08,164 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:47:08,164 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c6804cd
2019-05-03 17:47:08,164 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:47:08,164 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:47:08,164 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:47:08,164 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:47:08,164 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:47:08,164 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:47:08,164 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:47:08,164 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1d572e62, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@20312893, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:47:08,165 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:47:08,165 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:08,165 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:08,165 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:08,165 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:08,166 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:47:08,166 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:47:08,166 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:47:08,166 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:47:08,166 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:47:08,166 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:47:08,166 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5851bd4f]
2019-05-03 17:47:08,166 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,166 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,166 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,166 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,166 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,166 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,166 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f40a43]
2019-05-03 17:47:08,166 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,166 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,166 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,166 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,167 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,167 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,167 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c43e48]
2019-05-03 17:47:08,167 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,167 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,167 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,167 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,167 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,167 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,167 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a80515c]
2019-05-03 17:47:08,167 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,167 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,167 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,167 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,167 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,167 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,167 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c807b1d]
2019-05-03 17:47:08,167 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,167 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,167 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,167 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,167 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,167 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,167 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b39fd82]
2019-05-03 17:47:08,167 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,167 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,167 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,168 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,168 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,168 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,168 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21680803]
2019-05-03 17:47:08,168 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,168 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,168 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,168 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,168 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,168 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,168 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c8b96ec]
2019-05-03 17:47:08,168 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,168 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,168 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,168 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,169 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,169 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,169 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d8f2f3a]
2019-05-03 17:47:08,169 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,169 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,169 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,169 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,169 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,169 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,169 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7048f722]
2019-05-03 17:47:08,169 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,169 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,169 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,169 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,169 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,169 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,169 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58a55449]
2019-05-03 17:47:08,169 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,169 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,169 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,169 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,169 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,169 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,170 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,170 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,170 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:47:08,170 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:08,272 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:08,272 WARN  [SqlExceptionHelper]  - SQL Error: -4001, SQLState: 28501
2019-05-03 17:47:08,272 ERROR [SqlExceptionHelper]  - invalid authorization specification - not found: 
2019-05-03 17:47:08,273 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:47:08,273 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@173b9122]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:08,277 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:08,277 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:08,277 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7728643a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:47:08,278 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:47:08,278 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:47:08,278 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:47:08,309 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:47:08,311 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:47:08,311 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@320e400
2019-05-03 17:47:08,311 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:47:08,316 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:47:08,317 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,317 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,317 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,317 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,317 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:47:08,320 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:47:08,320 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:47:08,320 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:47:08,321 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:47:08,321 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:47:08,322 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:47:08,323 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:47:08,324 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:47:08,324 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:47:08,333 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:47:08,333 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:47:08,333 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:47:08,337 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:47:08,337 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:47:08,337 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:47:08,340 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:47:08,340 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:47:08,340 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:47:08,341 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:08,341 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@70f43b45
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@26d10f2e
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10ad20cb
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7dd712e8
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2c282004
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@22ee2d0
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7bfc3126
2019-05-03 17:47:08,342 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e792ce3
2019-05-03 17:47:08,342 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:08,444 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : invalid authorization specification - not found: 
2019-05-03 17:47:08,444 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:47:08,444 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:47:08,444 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:08,445 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:47:08,445 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:47:08,445 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:47:08,445 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:47:08,445 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:47:08,445 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:47:08,445 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:47:08,445 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:47:08,446 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:08,446 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:47:08,446 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:47:08,446 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:47:08,446 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:47:08,446 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:08,446 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:47:08,446 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:47:08,446 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:47:08,446 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:47:08,446 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:08,446 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:47:08,446 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:47:08,446 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:47:08,446 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:47:08,446 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:47:08,446 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:47:08,446 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:47:08,446 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:47:08,447 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:47:08,447 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:47:08,447 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:47:08,447 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:47:08,447 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:47:08,447 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:47:08,447 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:47:08,447 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:47:08,447 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:47:08,447 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c6804cd
2019-05-03 17:47:08,447 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:47:08,447 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:47:08,447 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:47:08,447 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:47:08,447 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:47:08,448 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:47:08,449 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:47:08,449 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@eadb475, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@27a0a5a2, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:47:08,449 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:47:08,449 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:08,449 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:08,449 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:08,449 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:08,450 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:47:08,450 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:47:08,450 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:47:08,450 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:47:08,450 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:47:08,450 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:47:08,450 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fc08eec]
2019-05-03 17:47:08,450 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,450 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,450 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,450 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,450 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,450 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,450 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b02e036]
2019-05-03 17:47:08,450 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,450 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,450 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,450 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,450 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,451 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,451 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e287667]
2019-05-03 17:47:08,451 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,451 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,451 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,451 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,451 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,451 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,451 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4201a617]
2019-05-03 17:47:08,451 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,451 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,451 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,451 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,451 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,451 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,451 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb9aa43]
2019-05-03 17:47:08,451 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,451 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,451 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,451 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,451 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,451 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,451 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@df5f5c0]
2019-05-03 17:47:08,451 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,451 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,451 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,451 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,452 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,452 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,452 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b72664]
2019-05-03 17:47:08,452 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,452 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,452 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,452 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,452 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,452 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,452 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58cd06cb]
2019-05-03 17:47:08,452 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,452 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,452 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,452 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,452 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,452 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,452 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b31700]
2019-05-03 17:47:08,452 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,452 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,452 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,452 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,452 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,452 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,452 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bae47a0]
2019-05-03 17:47:08,452 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,452 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,452 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,452 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,452 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,452 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,453 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@85ec632]
2019-05-03 17:47:08,453 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,453 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,453 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,453 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,453 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,453 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,453 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,453 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,453 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:47:08,453 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:08,555 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:08,556 WARN  [SqlExceptionHelper]  - SQL Error: -4001, SQLState: 28501
2019-05-03 17:47:08,556 ERROR [SqlExceptionHelper]  - invalid authorization specification - not found: 
2019-05-03 17:47:08,556 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:47:08,556 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@7728643a]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:08,559 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:08,559 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:08,559 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@79c4715d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:47:08,559 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:47:08,560 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:47:08,560 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:47:08,579 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:47:08,580 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:47:08,580 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@5aa360ea
2019-05-03 17:47:08,581 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:47:08,585 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:47:08,587 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,587 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,587 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,587 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,587 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:47:08,587 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:47:08,587 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:47:08,587 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:47:08,588 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:47:08,588 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:47:08,588 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:47:08,589 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:47:08,590 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:47:08,590 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:47:08,592 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:47:08,592 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:47:08,592 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:47:08,595 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:47:08,595 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:47:08,595 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:47:08,597 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:47:08,597 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:47:08,597 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:47:08,598 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:08,598 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@77e2a6e2
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5710768a
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@199e4c2b
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6e0d4a8
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@64d7b720
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@30272916
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5bb3d42d
2019-05-03 17:47:08,599 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5bf61e67
2019-05-03 17:47:08,599 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:08,703 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : invalid authorization specification - not found: 
2019-05-03 17:47:08,703 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:47:08,704 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:47:08,704 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:08,704 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:47:08,704 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:47:08,705 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:47:08,705 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:47:08,705 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:47:08,705 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:47:08,705 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:47:08,705 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:47:08,705 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:08,705 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:47:08,705 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:47:08,705 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:47:08,705 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:47:08,706 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:08,706 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:47:08,706 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:47:08,706 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:47:08,706 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:47:08,706 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:08,706 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:47:08,706 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:47:08,706 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:47:08,706 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:47:08,706 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:47:08,706 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:47:08,706 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:47:08,706 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:47:08,707 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:47:08,707 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:47:08,707 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:47:08,707 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:47:08,707 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:47:08,707 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:47:08,707 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:47:08,707 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:47:08,707 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:47:08,707 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c6804cd
2019-05-03 17:47:08,707 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:47:08,707 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:47:08,707 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:47:08,707 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:47:08,707 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:47:08,707 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:47:08,708 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:47:08,708 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2a415aa9, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@130a0f66, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:47:08,708 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:47:08,708 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:08,708 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:08,709 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:08,709 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:08,709 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:47:08,709 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:47:08,709 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:47:08,709 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:47:08,709 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:47:08,709 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:47:08,709 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b3df3a]
2019-05-03 17:47:08,709 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,709 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,709 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,709 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,709 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,709 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,709 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e11ab3d]
2019-05-03 17:47:08,710 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,710 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,710 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,710 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,710 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,710 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,710 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2392212b]
2019-05-03 17:47:08,710 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,710 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,710 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,710 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,710 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,710 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,710 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28f8e165]
2019-05-03 17:47:08,710 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,710 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,710 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,710 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,710 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,710 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,710 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66f66866]
2019-05-03 17:47:08,710 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,710 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,710 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,710 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,711 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,711 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,711 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d666b41]
2019-05-03 17:47:08,711 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,711 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,711 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,711 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,711 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,711 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,711 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30f4b1a6]
2019-05-03 17:47:08,711 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,711 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,711 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,711 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,711 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,711 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,711 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e1162e7]
2019-05-03 17:47:08,711 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,711 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,711 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,711 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,711 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,711 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,711 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c2f1700]
2019-05-03 17:47:08,711 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,711 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,712 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,712 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,712 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,712 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,712 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38600b]
2019-05-03 17:47:08,712 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,712 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,712 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,712 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,712 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,712 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,712 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@721eb7df]
2019-05-03 17:47:08,712 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,712 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,712 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,712 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,712 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,712 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,712 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,712 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,712 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:47:08,713 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:08,815 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:08,816 WARN  [SqlExceptionHelper]  - SQL Error: -4001, SQLState: 28501
2019-05-03 17:47:08,816 ERROR [SqlExceptionHelper]  - invalid authorization specification - not found: 
2019-05-03 17:47:08,816 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:47:08,816 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@79c4715d]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:08,826 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:08,826 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:08,826 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@76f10035, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:47:08,826 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:47:08,826 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:47:08,827 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:47:08,843 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:47:08,844 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:47:08,845 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@4f8caaf3
2019-05-03 17:47:08,845 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:47:08,849 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:47:08,850 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,850 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,850 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,850 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:08,850 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:47:08,850 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:47:08,850 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:47:08,851 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:47:08,851 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:47:08,851 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:47:08,851 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:47:08,853 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:47:08,853 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:47:08,854 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:47:08,854 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:47:08,854 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:47:08,855 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:47:08,858 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:47:08,858 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:47:08,858 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:47:08,859 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:47:08,860 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:47:08,860 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:47:08,860 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:08,860 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@456abb66
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2a3a299
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7da10b5b
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@219f4597
2019-05-03 17:47:08,861 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@31be6b49
2019-05-03 17:47:08,862 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e16b08d
2019-05-03 17:47:08,862 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b989dc7
2019-05-03 17:47:08,862 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@70d8de
2019-05-03 17:47:08,862 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:08,964 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : invalid authorization specification - not found: 
2019-05-03 17:47:08,964 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:47:08,965 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:47:08,965 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:08,965 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:47:08,965 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:47:08,965 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:47:08,965 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:47:08,965 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:47:08,965 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:47:08,965 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:47:08,965 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:47:08,966 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:08,966 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:47:08,966 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:47:08,966 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:47:08,966 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:47:08,966 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:08,966 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:47:08,966 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:47:08,966 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:47:08,966 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:47:08,966 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:08,966 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:47:08,966 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:47:08,966 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:47:08,966 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:47:08,966 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:47:08,967 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:47:08,967 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:47:08,967 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:47:08,967 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:47:08,967 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:47:08,967 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:47:08,967 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:47:08,967 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:47:08,967 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:47:08,967 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:47:08,967 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:47:08,967 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:47:08,967 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c6804cd
2019-05-03 17:47:08,967 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:47:08,967 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:47:08,967 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:47:08,967 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:47:08,967 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:47:08,967 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:47:08,968 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:47:08,968 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2aa27288, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@654b72c0, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:47:08,968 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:47:08,968 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:08,968 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:08,969 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:08,969 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:08,969 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:47:08,969 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:47:08,969 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:47:08,969 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:47:08,969 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:47:08,969 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:47:08,969 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8e2eea]
2019-05-03 17:47:08,969 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,969 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,969 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,969 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,969 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,969 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,969 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea4d397]
2019-05-03 17:47:08,970 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,970 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,970 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,970 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,970 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,970 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,970 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@253c1256]
2019-05-03 17:47:08,970 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,970 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,970 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,970 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,970 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,970 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,970 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@503fbbc6]
2019-05-03 17:47:08,970 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,970 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,970 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,970 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,970 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,970 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,970 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@109f5dd8]
2019-05-03 17:47:08,970 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,970 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,970 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,970 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,970 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,970 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,970 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a325eb9]
2019-05-03 17:47:08,970 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,970 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,970 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,971 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,971 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,971 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,971 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f64f5e]
2019-05-03 17:47:08,971 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,971 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,971 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,971 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,971 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,971 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,971 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@194152cf]
2019-05-03 17:47:08,971 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,971 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,971 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,971 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,971 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,971 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,971 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c30b71f]
2019-05-03 17:47:08,971 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,971 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,971 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,971 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,971 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,971 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:08,971 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ec50f54]
2019-05-03 17:47:08,971 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,971 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,971 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,972 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,972 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,972 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,972 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d6cac2]
2019-05-03 17:47:08,972 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:08,972 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:08,972 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:08,972 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:08,972 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:08,972 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,972 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,972 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:08,972 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:47:08,972 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:09,073 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:09,074 WARN  [SqlExceptionHelper]  - SQL Error: -4001, SQLState: 28501
2019-05-03 17:47:09,074 ERROR [SqlExceptionHelper]  - invalid authorization specification - not found: 
2019-05-03 17:47:09,074 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:47:09,074 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@76f10035]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:09,076 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:47:55,736 DEBUG [SpringJUnit4ClassRunner]  - SpringJUnit4ClassRunner constructor called with [class pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:55,744 DEBUG [BootstrapUtils]  - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2019-05-03 17:47:55,751 DEBUG [BootstrapUtils]  - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2019-05-03 17:47:55,759 DEBUG [BootstrapUtils]  - Instantiating TestContextBootstrapper for test class [pl.tau.library.service.LibraryManagerTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2019-05-03 17:47:55,783 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@55f3ddb1 declaringClass = 'pl.tau.library.service.LibraryManagerTest', classes = '{}', locations = '{classpath:/beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2019-05-03 17:47:55,803 DEBUG [ActiveProfilesUtils]  - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:55,804 DEBUG [DefaultTestContextBootstrapper]  - @TestExecutionListeners is not present for class [pl.tau.library.service.LibraryManagerTest]: using defaults.
2019-05-03 17:47:55,804 INFO  [DefaultTestContextBootstrapper]  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-05-03 17:47:55,808 DEBUG [DefaultTestContextBootstrapper]  - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
2019-05-03 17:47:55,815 INFO  [DefaultTestContextBootstrapper]  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c]
2019-05-03 17:47:55,816 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:55,816 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:55,827 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:55,827 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:55,828 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:55,828 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:55,829 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:55,829 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:55,830 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:47:55,831 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:55,831 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:55,832 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:47:55,832 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:47:55,833 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:47:55,868 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:47:56,023 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:47:56,048 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:47:56,048 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@711f39f9
2019-05-03 17:47:56,079 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:47:56,137 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:47:56,162 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:56,162 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:56,162 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:56,162 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:56,163 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:47:56,164 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:47:56,164 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:47:56,167 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:47:56,167 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:47:56,171 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:47:56,171 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:47:56,211 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:47:56,252 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:47:56,258 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:47:56,268 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:47:56,268 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:47:56,270 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:47:56,313 DEBUG [logging]  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-05-03 17:47:56,321 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:47:56,323 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:47:56,327 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:47:56,410 INFO  [Version]  - HHH000412: Hibernate Core {5.1.6.Final}
2019-05-03 17:47:56,412 INFO  [Environment]  - HHH000206: hibernate.properties not found
2019-05-03 17:47:56,413 INFO  [Environment]  - HHH000021: Bytecode provider name : javassist
2019-05-03 17:47:56,426 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:47:56,431 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:47:56,431 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:47:56,440 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:47:56,447 INFO  [Version]  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-05-03 17:47:56,464 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:56,464 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:56,464 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:56,464 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:47:56,465 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:47:56,465 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:47:56,467 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:56,467 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:56,468 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:56,468 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:56,469 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:56,469 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:56,470 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:56,470 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:56,470 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:56,471 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:56,471 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:56,471 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:56,472 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:56,472 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:56,472 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:56,473 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:56,474 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:56,474 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:56,475 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:56,475 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:56,475 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:56,476 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:56,476 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:56,477 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:56,477 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:56,478 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:56,478 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:56,479 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:47:56,479 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:47:56,480 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:56,480 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:56,481 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:56,481 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:56,482 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:56,483 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:56,484 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:56,484 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:56,484 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:56,485 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:47:56,486 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:56,486 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:56,486 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:56,486 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:47:56,487 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:56,487 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:56,487 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:56,488 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:56,488 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:56,488 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:56,489 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:56,489 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:56,489 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:56,490 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:56,490 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:47:56,491 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:56,491 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:56,491 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:56,491 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:56,491 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:56,492 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:56,492 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:47:56,493 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:47:56,493 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:56,493 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:56,493 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:56,494 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:56,494 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:56,494 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:56,494 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:47:56,495 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:47:56,498 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:56,498 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:56,498 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:47:56,500 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:56,500 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:56,502 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:56,502 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:56,503 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:47:56,503 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:47:56,504 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:47:56,506 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:56,506 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:56,506 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bec854f
2019-05-03 17:47:56,506 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31edaa7d
2019-05-03 17:47:56,506 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26adfd2d
2019-05-03 17:47:56,506 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336e6b6
2019-05-03 17:47:56,506 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c3fdb62
2019-05-03 17:47:56,506 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205d38da
2019-05-03 17:47:56,506 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6950ed69
2019-05-03 17:47:56,506 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dd7b5a3
2019-05-03 17:47:56,514 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:56,656 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : invalid authorization specification - not found: 
2019-05-03 17:47:56,665 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:47:56,679 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:47:56,683 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:47:56,767 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:47:56,767 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:47:56,768 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:56,768 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:56,768 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:47:56,769 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:47:56,769 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:47:56,770 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:56,771 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:47:56,771 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:47:56,771 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:47:56,774 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:47:56,775 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:56,775 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:47:56,794 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:47:56,841 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:47:56,852 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:47:56,852 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:47:56,858 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:47:56,862 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:47:56,864 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:47:56,879 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:56,881 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:47:56,883 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:47:56,884 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:47:56,885 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:47:56,888 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:56,888 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:47:56,888 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:47:56,888 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:47:56,888 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:47:56,888 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:56,888 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:47:56,888 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:47:56,888 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:47:56,888 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:47:56,890 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:47:56,890 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:47:56,890 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:47:56,891 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:47:56,913 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:47:56,913 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:47:56,914 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:47:56,914 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:47:56,914 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:47:56,914 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:47:56,914 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:47:56,914 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:47:56,914 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:47:56,914 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c6804cd
2019-05-03 17:47:56,914 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:47:56,914 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:47:56,914 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:47:56,915 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:47:56,915 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:47:56,915 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:47:56,915 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:47:56,915 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:47:56,915 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:47:56,915 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:47:56,915 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:47:56,915 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:47:56,943 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:47:56,943 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e63ec0b, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:47:56,950 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:47:56,970 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:56,970 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:56,979 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:56,979 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:57,020 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:47:57,020 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:47:57,020 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:47:57,020 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:47:57,020 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:47:57,020 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:47:57,038 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70fab835]
2019-05-03 17:47:57,039 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,039 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,039 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,049 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,053 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,054 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,054 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7555b920]
2019-05-03 17:47:57,054 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,054 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,054 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,054 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,055 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,055 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,055 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3591009c]
2019-05-03 17:47:57,055 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,055 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,055 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,055 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,055 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,055 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,055 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5cc23a]
2019-05-03 17:47:57,055 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,055 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,055 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,055 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,055 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,055 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,056 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61edc883]
2019-05-03 17:47:57,056 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,056 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,056 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,056 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,056 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,056 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,056 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@182f1e9a]
2019-05-03 17:47:57,056 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,056 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,056 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,056 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,056 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,056 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,056 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@660e9100]
2019-05-03 17:47:57,056 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,056 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,057 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,057 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,057 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,057 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,057 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9cd25ff]
2019-05-03 17:47:57,057 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,057 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,057 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,057 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,057 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,057 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,057 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3574e198]
2019-05-03 17:47:57,057 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,057 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,057 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,057 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,058 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,058 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,058 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@db44aa2]
2019-05-03 17:47:57,058 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,058 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,058 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,058 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,058 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,058 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,058 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f093abe]
2019-05-03 17:47:57,058 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,058 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,058 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,058 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,058 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,058 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,069 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,069 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,069 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:47:57,085 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:57,186 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:57,189 WARN  [SqlExceptionHelper]  - SQL Error: -4001, SQLState: 28501
2019-05-03 17:47:57,189 ERROR [SqlExceptionHelper]  - invalid authorization specification - not found: 
2019-05-03 17:47:57,189 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:47:57,191 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@5b87ed94]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:57,197 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:57,197 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:57,198 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@173b9122, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:47:57,198 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:47:57,198 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:47:57,198 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:47:57,226 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:47:57,227 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:47:57,227 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@7c18432b
2019-05-03 17:47:57,228 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:47:57,233 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:47:57,234 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:57,234 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:57,234 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:57,234 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:57,234 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:47:57,235 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:47:57,235 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:47:57,235 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:47:57,236 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:47:57,236 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:47:57,236 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:47:57,237 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:47:57,238 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:47:57,239 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:47:57,240 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:47:57,240 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:47:57,241 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:47:57,245 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:47:57,245 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:47:57,246 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:47:57,249 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:47:57,250 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:47:57,250 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:47:57,250 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:57,251 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:57,252 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52eacb4b
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5528a42c
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2a551a63
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1a6f5124
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1edb61b1
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ec2bf82
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@cc62a3b
2019-05-03 17:47:57,253 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6cc0bcf6
2019-05-03 17:47:57,253 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:57,354 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : invalid authorization specification - not found: 
2019-05-03 17:47:57,354 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:47:57,355 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:47:57,355 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:57,355 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:47:57,356 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:47:57,356 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:47:57,356 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:47:57,356 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:47:57,356 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:47:57,356 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:47:57,356 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:47:57,356 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:57,356 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:47:57,356 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:47:57,356 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:47:57,356 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:47:57,356 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:57,357 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:47:57,357 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:47:57,357 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:47:57,357 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:47:57,357 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:57,357 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:47:57,357 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:47:57,357 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:47:57,357 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:47:57,357 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:47:57,357 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:47:57,357 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:47:57,357 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:47:57,358 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:47:57,358 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:47:57,358 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:47:57,358 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:47:57,358 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:47:57,358 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:47:57,358 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:47:57,358 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:47:57,358 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:47:57,358 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c6804cd
2019-05-03 17:47:57,358 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:47:57,358 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:47:57,358 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:47:57,358 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:47:57,358 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:47:57,359 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:47:57,359 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:47:57,359 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1d572e62, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@20312893, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:47:57,359 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:47:57,359 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:57,359 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:57,360 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:57,360 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:57,360 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:47:57,360 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:47:57,360 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:47:57,360 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:47:57,360 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:47:57,360 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:47:57,360 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5851bd4f]
2019-05-03 17:47:57,360 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,360 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,360 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,360 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,360 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,360 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,360 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f40a43]
2019-05-03 17:47:57,361 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,361 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,361 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,361 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,361 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,361 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,361 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c43e48]
2019-05-03 17:47:57,361 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,361 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,361 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,361 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,361 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,361 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,361 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a80515c]
2019-05-03 17:47:57,361 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,361 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,361 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,361 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,361 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,361 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,361 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c807b1d]
2019-05-03 17:47:57,361 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,361 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,361 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,361 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,362 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,362 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,362 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b39fd82]
2019-05-03 17:47:57,362 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,362 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,362 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,362 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,362 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,362 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,362 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21680803]
2019-05-03 17:47:57,362 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,362 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,362 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,362 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,362 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,362 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,362 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c8b96ec]
2019-05-03 17:47:57,362 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,362 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,362 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,362 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,362 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,362 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,362 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d8f2f3a]
2019-05-03 17:47:57,362 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,362 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,362 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,363 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,363 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,363 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,363 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7048f722]
2019-05-03 17:47:57,363 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,363 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,363 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,363 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,363 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,363 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,363 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58a55449]
2019-05-03 17:47:57,363 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,363 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,363 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,363 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,363 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,363 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,363 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,363 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,363 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:47:57,364 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:57,465 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:57,466 WARN  [SqlExceptionHelper]  - SQL Error: -4001, SQLState: 28501
2019-05-03 17:47:57,466 ERROR [SqlExceptionHelper]  - invalid authorization specification - not found: 
2019-05-03 17:47:57,466 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:47:57,467 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@173b9122]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:57,469 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:57,469 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:57,470 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7728643a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:47:57,470 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:47:57,470 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:47:57,470 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:47:57,495 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:47:57,498 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:47:57,498 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@320e400
2019-05-03 17:47:57,499 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:47:57,504 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:47:57,505 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:57,506 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:57,506 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:57,506 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:57,506 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:47:57,506 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:47:57,506 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:47:57,506 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:47:57,507 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:47:57,507 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:47:57,507 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:47:57,513 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:47:57,513 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:47:57,515 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:47:57,516 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:47:57,516 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:47:57,516 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:47:57,522 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:47:57,522 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:47:57,522 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:47:57,526 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:47:57,526 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:47:57,526 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:47:57,526 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:57,527 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:47:57,528 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:57,529 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:57,529 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:57,529 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:57,529 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:57,529 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:57,529 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:47:57,529 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:47:57,529 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:57,529 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:57,529 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:57,529 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@70f43b45
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@26d10f2e
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10ad20cb
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7dd712e8
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2c282004
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@22ee2d0
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7bfc3126
2019-05-03 17:47:57,530 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e792ce3
2019-05-03 17:47:57,530 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:57,632 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : invalid authorization specification - not found: 
2019-05-03 17:47:57,632 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:47:57,633 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:47:57,633 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:57,633 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:47:57,633 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:47:57,633 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:47:57,634 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:47:57,634 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:47:57,634 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:47:57,634 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:47:57,634 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:47:57,634 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:57,634 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:47:57,634 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:47:57,634 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:47:57,634 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:47:57,635 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:57,635 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:47:57,635 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:47:57,635 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:47:57,635 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:47:57,635 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:57,635 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:47:57,635 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:47:57,635 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:47:57,635 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:47:57,635 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:47:57,635 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:47:57,635 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:47:57,635 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:47:57,636 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:47:57,636 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:47:57,636 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:47:57,636 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:47:57,636 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:47:57,636 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:47:57,636 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:47:57,636 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:47:57,636 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:47:57,636 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c6804cd
2019-05-03 17:47:57,636 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:47:57,636 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:47:57,636 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:47:57,636 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:47:57,636 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:47:57,636 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:47:57,636 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:47:57,636 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@eadb475, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@27a0a5a2, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:47:57,637 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:47:57,637 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:57,637 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:57,637 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:57,637 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:57,638 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:47:57,638 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:47:57,638 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:47:57,638 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:47:57,638 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:47:57,638 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:47:57,638 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fc08eec]
2019-05-03 17:47:57,638 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,638 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,638 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,638 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,638 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,638 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,638 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b02e036]
2019-05-03 17:47:57,638 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,638 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,638 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,638 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,638 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,638 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,638 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e287667]
2019-05-03 17:47:57,638 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,638 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,638 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,638 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,639 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,639 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,639 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4201a617]
2019-05-03 17:47:57,639 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,639 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,639 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,639 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,639 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,639 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,639 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb9aa43]
2019-05-03 17:47:57,639 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,639 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,639 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,639 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,639 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,639 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,639 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@df5f5c0]
2019-05-03 17:47:57,639 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,639 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,639 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,639 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,639 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,639 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,639 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b72664]
2019-05-03 17:47:57,639 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,639 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,639 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,639 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,640 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,640 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,640 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58cd06cb]
2019-05-03 17:47:57,640 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,640 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,640 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,640 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,640 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,640 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,640 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b31700]
2019-05-03 17:47:57,640 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,640 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,640 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,640 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,640 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,640 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,640 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bae47a0]
2019-05-03 17:47:57,640 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,640 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,640 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,640 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,640 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,640 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,640 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@85ec632]
2019-05-03 17:47:57,640 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,640 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,640 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,640 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,640 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,640 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,641 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,641 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,641 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:47:57,641 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:57,743 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:57,743 WARN  [SqlExceptionHelper]  - SQL Error: -4001, SQLState: 28501
2019-05-03 17:47:57,743 ERROR [SqlExceptionHelper]  - invalid authorization specification - not found: 
2019-05-03 17:47:57,744 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:47:57,744 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@7728643a]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:57,751 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:57,751 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:57,751 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@79c4715d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:47:57,752 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:47:57,752 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:47:57,752 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:47:57,797 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:47:57,798 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:47:57,798 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@5aa360ea
2019-05-03 17:47:57,799 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:47:57,803 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:47:57,804 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:57,804 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:57,804 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:57,804 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:57,804 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:47:57,805 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:47:57,805 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:47:57,805 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:47:57,805 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:47:57,805 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:47:57,805 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:47:57,825 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:47:57,826 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:47:57,827 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:47:57,829 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:47:57,829 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:47:57,830 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:47:57,840 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:47:57,840 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:47:57,840 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:47:57,842 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:47:57,843 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:47:57,843 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:47:57,843 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:57,843 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@77e2a6e2
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5710768a
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@199e4c2b
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6e0d4a8
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@64d7b720
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@30272916
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5bb3d42d
2019-05-03 17:47:57,844 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5bf61e67
2019-05-03 17:47:57,844 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:57,955 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : invalid authorization specification - not found: 
2019-05-03 17:47:57,955 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:47:57,956 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:47:57,956 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:57,956 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:47:57,956 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:47:57,957 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:47:57,957 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:47:57,957 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:47:57,957 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:47:57,957 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:47:57,957 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:47:57,957 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:57,957 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:47:57,957 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:47:57,958 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:47:57,958 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:47:57,958 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:57,958 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:47:57,958 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:47:57,958 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:47:57,958 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:47:57,958 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:57,958 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:47:57,958 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:47:57,958 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:47:57,958 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:47:57,958 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:47:57,958 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:47:57,958 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:47:57,958 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:47:57,960 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:47:57,960 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:47:57,960 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:47:57,960 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:47:57,960 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:47:57,960 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:47:57,960 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:47:57,960 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:47:57,960 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:47:57,960 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c6804cd
2019-05-03 17:47:57,960 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:47:57,960 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:47:57,960 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:47:57,960 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:47:57,960 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:47:57,960 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:47:57,961 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:47:57,961 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2a415aa9, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@130a0f66, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:47:57,961 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:47:57,961 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:57,961 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:57,961 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:57,961 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:57,962 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:47:57,962 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:47:57,962 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:47:57,962 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:47:57,962 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:47:57,962 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:47:57,962 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b3df3a]
2019-05-03 17:47:57,962 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,962 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,962 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,962 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,962 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,962 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,962 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e11ab3d]
2019-05-03 17:47:57,962 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,962 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,962 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,962 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,962 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,962 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,962 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2392212b]
2019-05-03 17:47:57,962 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,962 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,963 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,963 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,963 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,963 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,963 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28f8e165]
2019-05-03 17:47:57,963 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,963 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,963 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,963 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,963 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,963 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,963 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66f66866]
2019-05-03 17:47:57,963 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,963 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,963 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,963 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,963 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,963 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,963 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d666b41]
2019-05-03 17:47:57,963 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,963 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,963 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,963 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,963 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,964 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,964 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30f4b1a6]
2019-05-03 17:47:57,964 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,964 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,964 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,964 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,964 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,964 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,964 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e1162e7]
2019-05-03 17:47:57,964 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,964 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,964 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,964 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,964 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,964 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,964 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c2f1700]
2019-05-03 17:47:57,964 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,964 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,964 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,964 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,964 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,964 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:57,964 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38600b]
2019-05-03 17:47:57,964 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,964 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,964 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,964 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,965 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,965 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,965 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@721eb7df]
2019-05-03 17:47:57,965 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:57,965 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:57,965 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:57,965 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:57,965 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:57,965 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,965 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,965 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:57,965 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:47:57,966 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:58,067 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:58,068 WARN  [SqlExceptionHelper]  - SQL Error: -4001, SQLState: 28501
2019-05-03 17:47:58,068 ERROR [SqlExceptionHelper]  - invalid authorization specification - not found: 
2019-05-03 17:47:58,068 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:47:58,068 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@79c4715d]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:58,070 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:58,070 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:47:58,070 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@76f10035, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:47:58,070 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:47:58,070 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:47:58,070 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:47:58,089 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:47:58,090 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:47:58,090 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@4f8caaf3
2019-05-03 17:47:58,090 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:47:58,094 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:47:58,095 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:58,096 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:58,096 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:58,097 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:47:58,097 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:47:58,097 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:47:58,097 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:47:58,097 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:47:58,097 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:47:58,098 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:47:58,098 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:47:58,099 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:47:58,099 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:47:58,100 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:47:58,101 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:47:58,101 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:47:58,102 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:47:58,104 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:47:58,104 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:47:58,104 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:47:58,106 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:47:58,107 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:47:58,107 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:47:58,107 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:47:58,107 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@456abb66
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2a3a299
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7da10b5b
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@219f4597
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@31be6b49
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e16b08d
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b989dc7
2019-05-03 17:47:58,108 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@70d8de
2019-05-03 17:47:58,108 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:58,211 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : invalid authorization specification - not found: 
2019-05-03 17:47:58,211 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:47:58,212 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:47:58,212 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:47:58,212 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:47:58,212 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:47:58,212 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:47:58,212 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:47:58,212 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:47:58,212 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:47:58,212 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:47:58,212 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:47:58,213 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:58,213 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:47:58,213 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:47:58,213 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:47:58,213 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:47:58,213 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:58,213 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:47:58,213 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:47:58,213 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:47:58,213 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:47:58,213 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:47:58,213 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:47:58,213 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:47:58,213 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:47:58,213 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:47:58,213 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:47:58,213 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:47:58,213 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:47:58,213 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:47:58,214 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:47:58,214 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:47:58,214 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:47:58,214 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:47:58,214 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:47:58,214 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:47:58,214 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:47:58,214 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:47:58,214 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:47:58,214 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c6804cd
2019-05-03 17:47:58,214 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:47:58,214 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:47:58,214 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:47:58,214 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:47:58,214 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:47:58,214 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:47:58,214 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:47:58,215 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2aa27288, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@654b72c0, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:47:58,215 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:47:58,215 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:58,215 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:58,215 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:47:58,215 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:47:58,216 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:47:58,216 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:47:58,216 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:47:58,216 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:47:58,216 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:47:58,216 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:47:58,216 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8e2eea]
2019-05-03 17:47:58,216 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:58,216 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:58,216 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:58,216 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:58,216 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:58,216 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:58,216 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea4d397]
2019-05-03 17:47:58,216 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:58,216 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:58,216 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:58,216 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:58,216 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:58,216 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:58,216 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@253c1256]
2019-05-03 17:47:58,216 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:58,216 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:58,216 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:58,216 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:58,216 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:58,216 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:58,216 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@503fbbc6]
2019-05-03 17:47:58,216 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:58,216 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:58,217 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:58,217 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:58,217 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:58,217 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:58,217 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@109f5dd8]
2019-05-03 17:47:58,217 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:58,217 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:58,217 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:58,217 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:58,217 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:58,217 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:58,217 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a325eb9]
2019-05-03 17:47:58,217 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:58,217 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:58,217 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:58,217 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:58,218 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:58,218 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:58,218 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f64f5e]
2019-05-03 17:47:58,218 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:58,218 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:58,218 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:58,218 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:58,218 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:58,218 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:58,218 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@194152cf]
2019-05-03 17:47:58,218 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:58,218 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:58,218 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:58,218 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:58,219 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:58,219 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:58,219 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c30b71f]
2019-05-03 17:47:58,219 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:58,219 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:58,219 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:58,219 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:58,219 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:58,219 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:47:58,219 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ec50f54]
2019-05-03 17:47:58,219 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:58,219 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:58,219 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:58,219 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:58,219 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:58,219 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:58,219 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d6cac2]
2019-05-03 17:47:58,219 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:47:58,219 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:47:58,219 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:47:58,219 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:47:58,219 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:47:58,219 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:58,220 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:58,220 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:47:58,220 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:47:58,220 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:47:58,321 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:58,322 WARN  [SqlExceptionHelper]  - SQL Error: -4001, SQLState: 28501
2019-05-03 17:47:58,322 ERROR [SqlExceptionHelper]  - invalid authorization specification - not found: 
2019-05-03 17:47:58,322 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:47:58,322 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@76f10035]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLInvalidAuthorizationSpecException: invalid authorization specification - not found: 
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: invalid authorization specification - not found: 
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
2019-05-03 17:47:58,326 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:49:06,008 DEBUG [SpringJUnit4ClassRunner]  - SpringJUnit4ClassRunner constructor called with [class pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:06,017 DEBUG [BootstrapUtils]  - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2019-05-03 17:49:06,026 DEBUG [BootstrapUtils]  - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2019-05-03 17:49:06,040 DEBUG [BootstrapUtils]  - Instantiating TestContextBootstrapper for test class [pl.tau.library.service.LibraryManagerTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2019-05-03 17:49:06,065 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@55f3ddb1 declaringClass = 'pl.tau.library.service.LibraryManagerTest', classes = '{}', locations = '{classpath:/beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2019-05-03 17:49:06,085 DEBUG [ActiveProfilesUtils]  - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:06,086 DEBUG [DefaultTestContextBootstrapper]  - @TestExecutionListeners is not present for class [pl.tau.library.service.LibraryManagerTest]: using defaults.
2019-05-03 17:49:06,086 INFO  [DefaultTestContextBootstrapper]  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-05-03 17:49:06,091 DEBUG [DefaultTestContextBootstrapper]  - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
2019-05-03 17:49:06,098 INFO  [DefaultTestContextBootstrapper]  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c]
2019-05-03 17:49:06,100 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:06,100 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:06,111 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:06,111 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:06,112 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:06,113 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:06,113 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:06,113 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:06,115 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:49:06,115 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:06,115 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:06,118 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:49:06,119 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:49:06,119 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:49:06,153 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:49:06,300 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:49:06,321 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:49:06,322 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@711f39f9
2019-05-03 17:49:06,349 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:49:06,416 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:49:06,443 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:06,444 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:06,444 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:06,444 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:06,446 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:49:06,450 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:49:06,452 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:49:06,455 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:49:06,475 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:49:06,488 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:49:06,488 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:49:06,526 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:49:06,552 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:49:06,559 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:49:06,575 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:49:06,576 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:49:06,577 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:49:06,617 DEBUG [logging]  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-05-03 17:49:06,625 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:49:06,626 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:49:06,629 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:49:06,727 INFO  [Version]  - HHH000412: Hibernate Core {5.1.6.Final}
2019-05-03 17:49:06,729 INFO  [Environment]  - HHH000206: hibernate.properties not found
2019-05-03 17:49:06,730 INFO  [Environment]  - HHH000021: Bytecode provider name : javassist
2019-05-03 17:49:06,740 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:49:06,744 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:49:06,744 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:49:06,753 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:49:06,758 INFO  [Version]  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-05-03 17:49:06,771 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:06,772 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:06,772 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:06,772 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:49:06,773 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:49:06,773 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:49:06,774 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:06,774 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:06,774 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:06,774 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:06,775 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:06,775 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:06,775 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:06,775 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:06,775 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:06,776 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:06,776 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:06,776 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:06,777 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:06,777 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:06,777 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:06,778 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:06,778 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:06,778 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:06,779 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:06,779 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:06,779 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:06,780 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:49:06,780 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:49:06,780 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:49:06,780 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:49:06,781 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:49:06,781 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:49:06,781 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:49:06,782 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:49:06,782 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:49:06,783 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:49:06,784 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:49:06,784 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:49:06,785 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:49:06,785 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:49:06,786 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:06,786 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:06,786 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:06,787 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:49:06,787 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:06,787 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:06,787 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:06,787 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:49:06,788 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:49:06,788 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:49:06,788 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:49:06,788 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:49:06,789 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:49:06,789 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:49:06,789 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:49:06,789 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:49:06,790 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:49:06,790 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:49:06,791 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:49:06,791 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:06,791 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:06,791 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:06,792 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:06,792 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:06,792 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:06,793 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:49:06,793 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:49:06,794 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:06,794 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:06,794 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:06,794 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:06,794 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:06,795 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:06,795 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:49:06,795 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:49:06,798 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:49:06,798 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:49:06,798 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:49:06,800 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:49:06,800 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:49:06,802 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:49:06,802 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:49:06,802 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:49:06,803 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:49:06,803 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:49:06,805 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:49:06,805 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:49:06,805 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bec854f
2019-05-03 17:49:06,806 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31edaa7d
2019-05-03 17:49:06,806 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26adfd2d
2019-05-03 17:49:06,806 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336e6b6
2019-05-03 17:49:06,806 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c3fdb62
2019-05-03 17:49:06,806 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205d38da
2019-05-03 17:49:06,806 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6950ed69
2019-05-03 17:49:06,806 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dd7b5a3
2019-05-03 17:49:06,813 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:49:06,961 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:49:06,961 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:49:06,961 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:49:06,969 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:49:06,990 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:49:07,077 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:49:07,077 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:49:07,078 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:49:07,078 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:49:07,078 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:49:07,079 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:49:07,079 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:49:07,080 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:49:07,081 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:49:07,082 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:49:07,082 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:49:07,082 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:49:07,082 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:49:07,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:49:07,129 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:49:07,147 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:49:07,158 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:49:07,158 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:49:07,165 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:49:07,168 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:49:07,171 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:49:07,186 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:07,188 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:49:07,189 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:49:07,190 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:49:07,191 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:49:07,193 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:07,193 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:49:07,193 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:49:07,194 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:49:07,194 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:49:07,194 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:07,194 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:49:07,194 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:49:07,194 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:49:07,194 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:49:07,195 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:49:07,195 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:49:07,195 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:49:07,196 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:49:07,217 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:49:07,218 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:49:07,218 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:49:07,218 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:49:07,218 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:49:07,218 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:49:07,218 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:49:07,218 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:49:07,218 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:49:07,218 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:49:07,218 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:49:07,218 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:49:07,218 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:49:07,218 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:49:07,218 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:49:07,218 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:49:07,218 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:49:07,218 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:49:07,218 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:49:07,218 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:49:07,218 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:49:07,218 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:49:07,218 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:49:07,218 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:49:07,218 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:49:07,219 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:49:07,219 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:49:07,219 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:49:07,219 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:49:07,219 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:49:07,219 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:49:07,219 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:49:07,219 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:49:07,219 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:49:07,219 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:49:07,219 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:49:07,250 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:49:07,250 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4264b240, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:49:07,258 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:49:07,276 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:49:07,276 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:49:07,285 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:49:07,285 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:49:07,327 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:49:07,327 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:49:07,327 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:49:07,327 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:49:07,327 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:49:07,327 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:49:07,345 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ed0ff3]
2019-05-03 17:49:07,347 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,347 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,347 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,359 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,362 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,363 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:07,364 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7f2382]
2019-05-03 17:49:07,364 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,364 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,364 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,364 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,364 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,364 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:07,364 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6815c5f2]
2019-05-03 17:49:07,364 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,364 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,364 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,364 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,364 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,364 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,365 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60094a13]
2019-05-03 17:49:07,365 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,365 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,365 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,365 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,365 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,365 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,365 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c32886a]
2019-05-03 17:49:07,365 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,365 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,365 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,365 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,365 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,365 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,365 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b892d5]
2019-05-03 17:49:07,365 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,365 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,365 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,365 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,366 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,366 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,366 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3546d80f]
2019-05-03 17:49:07,366 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,366 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,366 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,366 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,366 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,366 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,366 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3670f00]
2019-05-03 17:49:07,366 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,366 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,366 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,366 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,367 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,367 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,367 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ab18da]
2019-05-03 17:49:07,367 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,367 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,367 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,367 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,367 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,367 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,367 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42257bdd]
2019-05-03 17:49:07,367 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,367 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,367 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,367 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,367 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,367 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:07,367 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687a762c]
2019-05-03 17:49:07,367 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,367 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,367 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,368 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,368 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,368 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:07,379 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:07,379 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:07,379 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:49:07,393 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:49:07,506 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:49:07,508 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:49:07,508 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:49:07,510 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:49:07,511 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:49:07,511 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:49:07,514 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:49:07,514 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:49:07,535 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:49:07,540 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:49:07,540 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:07,557 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:49:07,566 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:49:07,567 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:49:07,571 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:49:07,571 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:07,573 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:49:07,573 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:07,574 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:49:07,574 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:07,574 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:49:07,575 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:49:07,580 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:49:07,580 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:49:07,580 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:49:07,581 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:49:07,581 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:49:07,581 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:49:07,581 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:07,581 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:49:07,582 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:49:07,582 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:49:07,582 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:49:07,582 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:49:07,582 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:49:07,582 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:49:07,582 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:49:07,582 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:07,587 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:49:07,587 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:49:07,587 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:07,590 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:49:07,591 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:07,592 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:49:07,593 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@5b87ed94]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:49:07,601 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:07,601 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:07,601 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@632aa1a3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:49:07,601 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:49:07,602 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:49:07,602 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:49:07,632 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:49:07,634 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:49:07,634 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@20765ed5
2019-05-03 17:49:07,634 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:49:07,641 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:49:07,643 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:07,643 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:07,643 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:07,643 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:07,643 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:49:07,643 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:49:07,643 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:49:07,643 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:49:07,644 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:49:07,644 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:49:07,644 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:49:07,655 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:49:07,656 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:49:07,656 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:49:07,657 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:49:07,657 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:49:07,658 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:49:07,660 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:49:07,660 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:49:07,660 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:49:07,663 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:49:07,664 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:49:07,664 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:49:07,664 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:49:07,665 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:49:07,666 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:49:07,667 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:49:07,667 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:49:07,667 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:49:07,667 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:49:07,667 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44d70181
2019-05-03 17:49:07,667 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6aa648b9
2019-05-03 17:49:07,667 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@23c650a3
2019-05-03 17:49:07,667 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@742d4e15
2019-05-03 17:49:07,667 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@88a8218
2019-05-03 17:49:07,667 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50b1f030
2019-05-03 17:49:07,667 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4163f1cd
2019-05-03 17:49:07,667 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5fa05212
2019-05-03 17:49:07,667 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:49:07,769 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:49:07,769 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:49:07,769 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:49:07,769 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:49:07,772 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:49:07,773 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:49:07,773 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:49:07,773 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:49:07,774 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:49:07,774 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:49:07,774 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:49:07,774 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:49:07,774 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:49:07,774 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:49:07,774 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:49:07,774 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:49:07,774 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:49:07,774 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:49:07,774 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:49:07,774 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:49:07,774 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:49:07,774 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:49:07,774 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:49:07,774 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:49:07,774 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:49:07,774 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:49:07,774 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:07,775 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:49:07,775 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:49:07,775 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:49:07,775 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:49:07,775 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:07,775 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:49:07,775 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:49:07,775 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:49:07,775 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:49:07,775 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:07,775 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:49:07,775 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:49:07,775 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:49:07,775 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:49:07,776 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:49:07,776 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:49:07,776 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:49:07,776 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:49:07,776 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:49:07,776 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:49:07,776 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:49:07,776 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:49:07,777 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:49:07,777 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:49:07,777 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:49:07,777 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:49:07,777 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:49:07,777 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:49:07,777 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:49:07,777 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:49:07,777 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:49:07,777 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:49:07,777 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:49:07,777 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:49:07,777 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:49:07,777 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:49:07,777 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@219f4597, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@17f460bb, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:49:07,778 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:49:07,778 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:49:07,778 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:49:07,778 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:49:07,778 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:49:07,778 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:49:07,778 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:49:07,779 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:49:07,779 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:49:07,779 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:49:07,779 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:49:07,779 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b989dc7]
2019-05-03 17:49:07,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,779 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,779 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,779 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,779 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:07,779 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42561fba]
2019-05-03 17:49:07,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,779 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,779 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,779 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,779 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:07,779 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46b695ec]
2019-05-03 17:49:07,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,779 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,779 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,779 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,780 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,780 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@325f7fa9]
2019-05-03 17:49:07,780 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,780 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,780 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,780 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,780 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,780 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,780 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a5d002]
2019-05-03 17:49:07,780 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,780 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,780 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,780 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,780 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,780 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,780 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aa6202e]
2019-05-03 17:49:07,780 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,780 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,780 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,780 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,780 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,780 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,780 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@771158fb]
2019-05-03 17:49:07,780 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,780 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,780 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,780 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,781 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,781 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,781 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62d0ac62]
2019-05-03 17:49:07,781 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,781 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,781 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,781 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,781 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,781 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,781 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6826c41e]
2019-05-03 17:49:07,781 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,781 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,781 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,781 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,781 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,781 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:07,781 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64d43929]
2019-05-03 17:49:07,781 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,781 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,781 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,781 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,781 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,781 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:07,781 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@437ebf59]
2019-05-03 17:49:07,781 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:07,781 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:07,781 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:07,781 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:07,782 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:07,782 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:07,782 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:07,782 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:07,782 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:49:07,782 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:49:07,890 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:49:07,890 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:49:07,890 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:49:07,891 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:49:07,891 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:49:07,891 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:49:07,891 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:49:07,892 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:49:07,892 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:49:07,892 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:49:07,892 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:07,893 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:49:07,893 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:49:07,893 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:49:07,894 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:49:07,894 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:07,894 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:49:07,894 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:07,894 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:49:07,894 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:07,895 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:49:07,895 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:49:07,895 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:49:07,895 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:49:07,895 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:49:07,895 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:49:07,895 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:49:07,895 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:49:07,895 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:07,896 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:49:07,896 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:49:07,896 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:49:07,896 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:49:07,896 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:49:07,896 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:49:07,896 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:49:07,896 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:49:07,896 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:07,896 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:49:07,896 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:49:07,897 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:07,897 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:49:07,897 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:07,897 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:49:07,897 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@632aa1a3]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:49:07,900 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:07,901 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:07,901 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6bfdb014, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:49:07,901 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:49:07,901 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:49:07,901 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:49:07,923 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:49:07,925 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:49:07,925 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@72889280
2019-05-03 17:49:07,925 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:49:07,936 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:49:07,937 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:07,937 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:07,937 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:07,937 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:07,937 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:49:07,937 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:49:07,937 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:49:07,938 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:49:07,938 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:49:07,938 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:49:07,938 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:49:07,940 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:49:07,940 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:49:07,941 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:49:07,942 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:49:07,942 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:49:07,943 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:49:07,946 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:49:07,946 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:49:07,946 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:49:07,955 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:49:07,956 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:49:07,956 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:49:07,956 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:49:07,956 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:07,956 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@46044faa
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1358b28e
2019-05-03 17:49:07,957 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a78dacd
2019-05-03 17:49:07,958 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19f9d595
2019-05-03 17:49:07,958 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7de4a01f
2019-05-03 17:49:07,958 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bfeb1ef
2019-05-03 17:49:07,958 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@778ca8ef
2019-05-03 17:49:07,958 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@208e9ef6
2019-05-03 17:49:07,958 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:49:08,061 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:49:08,061 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:49:08,061 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:49:08,061 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:49:08,063 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:49:08,065 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:49:08,065 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:49:08,065 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:49:08,065 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:49:08,065 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:49:08,065 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:49:08,065 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:49:08,065 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:49:08,065 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:08,065 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:49:08,065 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:49:08,066 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:49:08,066 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:49:08,066 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:08,066 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:49:08,066 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:49:08,066 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:49:08,066 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:49:08,066 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:08,066 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:49:08,066 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:49:08,066 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:49:08,066 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:49:08,066 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:49:08,066 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:49:08,066 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:49:08,066 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:49:08,067 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:49:08,067 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:49:08,067 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:49:08,067 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:49:08,067 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:49:08,067 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:49:08,067 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:49:08,067 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:49:08,067 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:49:08,067 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:49:08,067 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:49:08,067 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:49:08,067 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:49:08,067 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:49:08,067 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:49:08,067 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:49:08,067 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:49:08,068 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@111610e6, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@5bdaf2ce, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:49:08,068 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:49:08,068 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:49:08,068 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:49:08,068 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:49:08,068 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:49:08,069 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:49:08,069 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:49:08,069 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:49:08,069 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:49:08,069 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:49:08,069 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:49:08,069 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fcc529]
2019-05-03 17:49:08,069 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,069 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,069 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,069 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,069 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,069 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,069 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4beddc56]
2019-05-03 17:49:08,069 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,069 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,069 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,069 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,069 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,069 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,069 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b812421]
2019-05-03 17:49:08,069 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,069 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,070 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,070 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,070 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,070 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,070 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7882c44a]
2019-05-03 17:49:08,070 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,070 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,070 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,070 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,070 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,070 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,070 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20d11153]
2019-05-03 17:49:08,070 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,070 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,070 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,070 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,070 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,070 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,070 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5649ec46]
2019-05-03 17:49:08,070 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,070 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,070 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,070 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,070 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,070 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,070 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502f8b57]
2019-05-03 17:49:08,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,071 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,071 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,071 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,071 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,071 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fe01805]
2019-05-03 17:49:08,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,071 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,071 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,071 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,071 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,071 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@794b435f]
2019-05-03 17:49:08,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,071 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,071 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,071 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,071 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,071 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@779dfe55]
2019-05-03 17:49:08,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,071 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,071 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,071 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,071 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,071 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1144a55a]
2019-05-03 17:49:08,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,072 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,072 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,072 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,072 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,072 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,072 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,072 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,072 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:49:08,072 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:49:08,179 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:49:08,180 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:49:08,180 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:49:08,181 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:49:08,181 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:49:08,181 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:49:08,181 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:49:08,181 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:49:08,181 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:49:08,182 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:49:08,182 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:08,182 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:49:08,183 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:49:08,183 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:49:08,183 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:49:08,183 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:08,184 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:49:08,184 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:08,184 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:49:08,184 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:08,184 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:49:08,184 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:49:08,184 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:49:08,184 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:49:08,184 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:49:08,184 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:49:08,185 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:49:08,185 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:49:08,185 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:08,185 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:49:08,185 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:49:08,186 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:49:08,186 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:49:08,186 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:49:08,187 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:49:08,187 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:49:08,187 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:49:08,187 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:08,187 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:49:08,187 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:49:08,187 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:08,187 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:49:08,187 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:08,187 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:49:08,187 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@6bfdb014]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:49:08,189 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:08,190 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:08,190 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@547c04c4, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:49:08,190 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:49:08,190 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:49:08,190 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:49:08,210 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:49:08,211 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:49:08,211 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@30e92cb9
2019-05-03 17:49:08,211 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:49:08,218 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:49:08,219 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:08,219 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:08,219 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:08,219 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:08,219 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:49:08,220 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:49:08,220 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:49:08,220 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:49:08,220 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:49:08,220 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:49:08,220 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:49:08,222 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:49:08,222 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:49:08,222 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:49:08,223 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:49:08,223 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:49:08,223 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:49:08,228 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:49:08,228 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:49:08,228 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:49:08,231 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:49:08,231 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:49:08,231 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:49:08,231 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:49:08,232 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3c5a54b7
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61f2c3f0
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@291120f4
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@417ad4f3
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f6bcf87
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@58f174d9
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@78c7f9b3
2019-05-03 17:49:08,233 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6f8d7714
2019-05-03 17:49:08,234 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:49:08,337 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:49:08,337 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:49:08,337 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:49:08,337 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:49:08,339 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:49:08,341 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:49:08,341 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:49:08,341 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:49:08,341 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:49:08,341 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:49:08,341 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:49:08,341 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:49:08,341 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:49:08,342 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:08,342 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:49:08,342 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:49:08,342 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:49:08,342 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:49:08,342 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:08,342 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:49:08,342 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:49:08,342 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:49:08,342 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:49:08,342 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:08,342 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:49:08,342 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:49:08,342 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:49:08,342 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:49:08,343 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:49:08,343 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:49:08,343 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:49:08,343 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:49:08,343 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:49:08,343 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:49:08,343 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:49:08,343 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:49:08,343 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:49:08,343 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:49:08,343 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:49:08,343 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:49:08,343 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:49:08,343 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:49:08,343 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:49:08,343 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:49:08,343 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:49:08,344 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:49:08,344 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:49:08,344 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:49:08,344 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:49:08,344 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:49:08,344 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:49:08,344 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:49:08,344 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:49:08,344 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:49:08,344 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:49:08,344 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@e8fadb0, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@89c65d5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:49:08,344 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:49:08,344 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:49:08,344 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:49:08,344 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:49:08,344 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:49:08,345 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:49:08,345 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:49:08,345 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:49:08,345 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:49:08,345 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:49:08,345 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:49:08,345 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d3e6d34]
2019-05-03 17:49:08,345 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,345 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,345 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,345 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,345 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,345 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,345 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a94fa5]
2019-05-03 17:49:08,345 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,345 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,345 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,345 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,345 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,345 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,345 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2873d672]
2019-05-03 17:49:08,346 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,346 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,346 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,346 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,346 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,346 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,346 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@577f9109]
2019-05-03 17:49:08,346 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,346 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,346 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,346 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,346 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,346 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,346 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757529a4]
2019-05-03 17:49:08,346 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,346 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,346 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,346 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,346 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,346 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,346 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
2019-05-03 17:49:08,347 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,347 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,347 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,347 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,347 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,347 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,347 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec77191]
2019-05-03 17:49:08,347 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,347 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,347 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,347 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,347 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,347 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,347 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450078a]
2019-05-03 17:49:08,347 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,347 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,347 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,347 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,347 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,347 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,347 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
2019-05-03 17:49:08,347 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,347 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,347 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,347 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,347 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,347 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,347 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1792e7]
2019-05-03 17:49:08,347 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,347 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,348 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,348 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,348 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,348 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,348 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eb631b8]
2019-05-03 17:49:08,348 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,348 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,348 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,348 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,348 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,348 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,348 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,348 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,348 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:49:08,348 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:49:08,455 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:49:08,455 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:49:08,456 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:49:08,457 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:49:08,457 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:49:08,457 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:49:08,457 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:49:08,457 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:49:08,457 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:49:08,458 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:49:08,458 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:08,458 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:49:08,458 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:49:08,458 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:49:08,459 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:49:08,459 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:08,459 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:49:08,459 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:08,459 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:49:08,459 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:08,459 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:49:08,459 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:49:08,460 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:49:08,460 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:49:08,460 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:49:08,460 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:49:08,460 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:49:08,460 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:49:08,460 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:08,461 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:49:08,461 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:49:08,461 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:49:08,461 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:49:08,461 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:49:08,461 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:49:08,461 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:49:08,461 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:49:08,461 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:08,461 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:49:08,461 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:49:08,461 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:08,461 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:49:08,461 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:08,462 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:49:08,462 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@547c04c4]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:49:08,464 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:08,464 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:49:08,464 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7ed9ae94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:49:08,464 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:49:08,464 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:49:08,464 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:49:08,491 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:49:08,492 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:49:08,492 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@66908383
2019-05-03 17:49:08,492 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:49:08,496 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:49:08,502 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:08,502 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:08,502 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:08,502 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:49:08,502 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:49:08,503 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:49:08,503 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:49:08,504 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:49:08,505 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:49:08,506 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:49:08,506 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:49:08,510 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:49:08,512 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:49:08,522 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:49:08,523 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:49:08,524 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:49:08,524 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:49:08,532 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:49:08,533 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:49:08,533 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:49:08,536 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:49:08,538 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:49:08,538 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:49:08,538 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:49:08,539 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@72458efc
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@36bc415e
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a74d228
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349d0836
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6a714237
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e134896
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72ba28ee
2019-05-03 17:49:08,540 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e3a5237
2019-05-03 17:49:08,540 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:49:08,645 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:49:08,645 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:49:08,645 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:49:08,645 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:49:08,647 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:49:08,649 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:49:08,649 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:49:08,649 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:49:08,649 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:49:08,649 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:49:08,649 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:49:08,649 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:49:08,649 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:49:08,649 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:08,649 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:49:08,650 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:49:08,650 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:49:08,650 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:49:08,650 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:08,650 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:49:08,650 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:49:08,650 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:49:08,650 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:49:08,650 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:49:08,650 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:49:08,650 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:49:08,650 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:49:08,650 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:49:08,650 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:49:08,650 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:49:08,650 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:49:08,650 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:49:08,651 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:49:08,651 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:49:08,651 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:49:08,651 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:49:08,651 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:49:08,651 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:49:08,651 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:49:08,651 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:49:08,651 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:49:08,651 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:49:08,651 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:49:08,651 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:49:08,651 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:49:08,651 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:49:08,651 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:49:08,651 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:49:08,651 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:49:08,651 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@332f25c8, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@2d7e1102, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:49:08,652 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:49:08,652 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:49:08,652 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:49:08,652 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:49:08,652 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:49:08,652 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:49:08,652 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:49:08,652 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:49:08,652 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:49:08,652 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:49:08,652 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:49:08,653 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61d01788]
2019-05-03 17:49:08,653 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,653 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,653 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,653 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,653 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,653 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,653 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@264c5d07]
2019-05-03 17:49:08,653 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,653 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,653 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,653 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,653 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,653 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,653 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69cac930]
2019-05-03 17:49:08,653 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,653 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,653 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,653 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,653 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,653 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,653 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d39f2d8]
2019-05-03 17:49:08,653 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,653 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,653 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,653 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,654 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,654 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,654 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55ea2d70]
2019-05-03 17:49:08,654 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,654 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,654 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,654 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,654 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,654 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,654 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@175acfb2]
2019-05-03 17:49:08,654 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,654 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,654 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,654 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,654 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,654 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,654 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e868ef5]
2019-05-03 17:49:08,654 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,654 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,654 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,654 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,654 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,654 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,654 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30af7377]
2019-05-03 17:49:08,654 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,654 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,654 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,654 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,654 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,654 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,654 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dab9dd6]
2019-05-03 17:49:08,654 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,655 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,655 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,655 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,655 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,655 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:49:08,655 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f099cef]
2019-05-03 17:49:08,655 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,655 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,655 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,655 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,655 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,655 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,655 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bff2185]
2019-05-03 17:49:08,655 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:49:08,655 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:49:08,655 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:49:08,655 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:49:08,655 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:49:08,655 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,655 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,655 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:49:08,655 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:49:08,655 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:49:08,762 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:49:08,763 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:49:08,763 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:49:08,764 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:49:08,764 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:49:08,764 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:49:08,764 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:49:08,764 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:49:08,764 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:49:08,766 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:49:08,766 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:08,766 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:49:08,766 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:49:08,766 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:49:08,767 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:49:08,767 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:08,767 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:49:08,767 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:08,768 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:49:08,768 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:08,768 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:49:08,768 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:49:08,768 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:49:08,768 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:49:08,768 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:49:08,768 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:49:08,769 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:49:08,769 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:49:08,769 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:08,769 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:49:08,769 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:49:08,769 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:49:08,769 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:49:08,769 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:49:08,769 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:49:08,769 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:49:08,769 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:49:08,769 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:08,770 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:49:08,770 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:49:08,770 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:49:08,770 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:49:08,770 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:49:08,770 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:49:08,770 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@7ed9ae94]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:49:08,772 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:50:00,919 DEBUG [SpringJUnit4ClassRunner]  - SpringJUnit4ClassRunner constructor called with [class pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:00,928 DEBUG [BootstrapUtils]  - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2019-05-03 17:50:00,936 DEBUG [BootstrapUtils]  - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2019-05-03 17:50:00,946 DEBUG [BootstrapUtils]  - Instantiating TestContextBootstrapper for test class [pl.tau.library.service.LibraryManagerTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2019-05-03 17:50:00,969 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@55f3ddb1 declaringClass = 'pl.tau.library.service.LibraryManagerTest', classes = '{}', locations = '{classpath:/beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2019-05-03 17:50:00,983 DEBUG [ActiveProfilesUtils]  - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:00,983 DEBUG [DefaultTestContextBootstrapper]  - @TestExecutionListeners is not present for class [pl.tau.library.service.LibraryManagerTest]: using defaults.
2019-05-03 17:50:00,984 INFO  [DefaultTestContextBootstrapper]  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-05-03 17:50:00,987 DEBUG [DefaultTestContextBootstrapper]  - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
2019-05-03 17:50:00,994 INFO  [DefaultTestContextBootstrapper]  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c]
2019-05-03 17:50:00,995 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:00,996 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:01,012 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:01,012 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:01,014 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:01,014 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:01,015 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:01,015 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:01,020 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:50:01,020 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:01,020 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:01,022 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:50:01,022 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:50:01,023 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:50:01,057 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:50:01,215 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:50:01,236 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:50:01,236 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@711f39f9
2019-05-03 17:50:01,262 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:50:01,323 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:50:01,365 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:50:01,365 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:50:01,366 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:50:01,366 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:50:01,366 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:50:01,367 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:50:01,368 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:50:01,369 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:50:01,370 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:50:01,372 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:50:01,372 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:50:01,400 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:50:01,435 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:50:01,438 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:50:01,463 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:50:01,463 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:50:01,465 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:50:01,516 DEBUG [logging]  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-05-03 17:50:01,525 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:50:01,526 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:50:01,530 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:50:01,602 INFO  [Version]  - HHH000412: Hibernate Core {5.1.6.Final}
2019-05-03 17:50:01,603 INFO  [Environment]  - HHH000206: hibernate.properties not found
2019-05-03 17:50:01,603 INFO  [Environment]  - HHH000021: Bytecode provider name : javassist
2019-05-03 17:50:01,613 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:50:01,619 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:50:01,619 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:50:01,629 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:50:01,635 INFO  [Version]  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-05-03 17:50:01,650 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:50:01,650 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:50:01,650 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:50:01,652 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:50:01,653 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:50:01,654 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:50:01,654 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:50:01,654 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:50:01,655 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:50:01,655 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:50:01,655 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:50:01,655 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:50:01,656 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:50:01,656 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:50:01,656 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:50:01,657 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:50:01,657 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:50:01,657 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:50:01,658 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:50:01,658 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:50:01,658 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:50:01,660 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:50:01,660 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:50:01,660 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:50:01,669 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:50:01,669 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:50:01,669 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:50:01,671 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:50:01,671 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:50:01,673 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:50:01,673 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:50:01,674 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:50:01,674 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:50:01,675 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:50:01,675 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:50:01,676 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:50:01,676 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:50:01,678 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:50:01,678 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:50:01,679 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:50:01,679 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:50:01,680 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:50:01,681 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:50:01,681 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:50:01,682 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:50:01,683 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:50:01,683 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:50:01,683 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:50:01,684 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:50:01,684 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:50:01,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:50:01,685 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:50:01,685 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:50:01,687 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:50:01,687 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:50:01,687 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:50:01,687 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:50:01,689 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:50:01,689 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:50:01,689 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:50:01,690 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:50:01,690 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:50:01,690 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:50:01,691 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:50:01,691 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:50:01,691 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:50:01,692 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:50:01,692 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:50:01,693 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:50:01,693 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:50:01,693 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:50:01,695 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:50:01,695 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:50:01,695 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:50:01,695 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:50:01,696 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:50:01,699 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:50:01,700 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:50:01,700 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:50:01,703 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:50:01,703 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:50:01,706 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:50:01,706 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:50:01,706 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:50:01,706 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:50:01,707 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:50:01,709 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:50:01,709 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:50:01,709 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bec854f
2019-05-03 17:50:01,709 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31edaa7d
2019-05-03 17:50:01,709 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26adfd2d
2019-05-03 17:50:01,709 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336e6b6
2019-05-03 17:50:01,709 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c3fdb62
2019-05-03 17:50:01,709 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205d38da
2019-05-03 17:50:01,709 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6950ed69
2019-05-03 17:50:01,709 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dd7b5a3
2019-05-03 17:50:01,717 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:50:01,862 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:50:01,862 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:50:01,862 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:50:01,871 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:50:01,891 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:50:01,977 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:50:01,977 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:50:01,977 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:50:01,977 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:50:01,978 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:50:01,979 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:50:01,979 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:50:01,980 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:50:01,980 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:50:01,981 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:50:01,981 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:50:01,981 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:50:01,981 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:50:01,982 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:50:02,028 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:50:02,044 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:50:02,057 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:50:02,057 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where b.title like :modelNameFragment
2019-05-03 17:50:02,063 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:50:02,066 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:50:02,068 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:50:02,083 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:50:02,085 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:50:02,087 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:50:02,088 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:50:02,089 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:50:02,091 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:50:02,091 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:50:02,091 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:50:02,091 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:50:02,092 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:50:02,092 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:50:02,092 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:50:02,092 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:50:02,092 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:50:02,092 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:50:02,093 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:50:02,093 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:50:02,093 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:50:02,094 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:50:02,114 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:50:02,115 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:50:02,115 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:50:02,115 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:50:02,115 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:50:02,115 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:50:02,115 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:50:02,115 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:50:02,115 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:50:02,115 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:50:02,115 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:50:02,115 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:50:02,115 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:50:02,115 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:50:02,115 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:50:02,115 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:50:02,115 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:50:02,115 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:50:02,115 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:50:02,115 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:50:02,116 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:50:02,116 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:50:02,116 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:50:02,116 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:50:02,116 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:50:02,116 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:50:02,116 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:50:02,116 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:50:02,116 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:50:02,116 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:50:02,116 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:50:02,116 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:50:02,116 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:50:02,116 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:50:02,116 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:50:02,116 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:50:02,144 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:50:02,145 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4264b240, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:50:02,151 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:50:02,170 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:50:02,170 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:50:02,180 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:50:02,180 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:50:02,220 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:50:02,221 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:50:02,221 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:50:02,221 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:02,221 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:50:02,221 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:50:02,240 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ed0ff3]
2019-05-03 17:50:02,242 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:50:02,242 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:50:02,242 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:50:02,252 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:50:02,255 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:50:02,257 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:50:02,257 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7f2382]
2019-05-03 17:50:02,257 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:50:02,257 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:50:02,257 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:50:02,257 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:50:02,257 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:50:02,258 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:50:02,258 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6815c5f2]
2019-05-03 17:50:02,258 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:50:02,258 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:50:02,258 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:50:02,258 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:50:02,258 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:50:02,258 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:50:02,258 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60094a13]
2019-05-03 17:50:02,258 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:50:02,258 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:50:02,258 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:50:02,258 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:50:02,258 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:50:02,258 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:50:02,258 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c32886a]
2019-05-03 17:50:02,258 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:50:02,258 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:50:02,258 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:50:02,259 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:50:02,259 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:50:02,259 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:50:02,259 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b892d5]
2019-05-03 17:50:02,259 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:50:02,259 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:50:02,259 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:50:02,259 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:50:02,259 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:50:02,259 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:50:02,259 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3546d80f]
2019-05-03 17:50:02,259 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:50:02,259 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:50:02,259 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:50:02,259 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:50:02,260 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:50:02,260 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:50:02,260 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3670f00]
2019-05-03 17:50:02,260 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:50:02,260 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:50:02,260 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:50:02,260 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:50:02,260 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:50:02,260 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:50:02,260 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ab18da]
2019-05-03 17:50:02,260 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:50:02,260 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:50:02,260 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:50:02,260 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:50:02,260 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:50:02,260 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:50:02,260 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42257bdd]
2019-05-03 17:50:02,260 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:50:02,260 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:50:02,260 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:50:02,261 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:50:02,261 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:50:02,261 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:50:02,261 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687a762c]
2019-05-03 17:50:02,261 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:50:02,261 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:50:02,261 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:50:02,261 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:50:02,261 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:50:02,261 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:50:02,272 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:50:02,272 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:50:02,273 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:50:02,288 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:50:02,402 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:50:02,403 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:50:02,403 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:50:02,405 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:50:02,406 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:50:02,406 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:50:02,409 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:50:02,409 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:50:02,430 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where b.title like :modelNameFragment
2019-05-03 17:50:02,434 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'b'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:50:02,434 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:50:02,451 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:50:02,461 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:50:02,462 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:50:02,464 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:50:02,465 DEBUG [DotNode]  - getDataType() : title -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:50:02,465 DEBUG [FromReferenceNode]  - Resolved : b.title -> book0_.title
2019-05-03 17:50:02,467 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:50:02,467 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where ( like ( book0_.title book0_.id title ) ? ) ) )
2019-05-03 17:50:02,472 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:50:02,472 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:50:02,472 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=b.title,tableAlias=book0_,className=pl.tau.library.domain.Book,classAlias=b}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=modelNameFragment, expectedType=org.hibernate.type.StringType@41330d4f}

2019-05-03 17:50:02,472 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:50:02,477 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b where b.title like :modelNameFragment
2019-05-03 17:50:02,477 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_ where book0_.title like ?
2019-05-03 17:50:02,477 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:50:02,481 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:50:02,482 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:50:02,482 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:50:02,482 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:50:02,482 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:50:02,482 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:50:02,483 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:50:02,483 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:50:02,483 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:50:02,483 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:50:02,483 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:50:02,483 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:50:02,483 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:50:02,483 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:50:02,483 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:50:02,483 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:50:02,483 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:50:02,484 DEBUG [SessionFactoryRegistry]  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5bbbdd4b
2019-05-03 17:50:02,484 DEBUG [SessionFactoryRegistry]  - Registering SessionFactory: b0c52aea-c40e-4cf4-9e12-5248ce413065 (<unnamed>)
2019-05-03 17:50:02,484 DEBUG [SessionFactoryRegistry]  - Not binding SessionFactory to JNDI, no JNDI name configured
2019-05-03 17:50:02,500 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2019-05-03 17:50:02,505 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'txManager'
2019-05-03 17:50:02,520 DEBUG [HibernateTransactionManager]  - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5] of Hibernate SessionFactory for HibernateTransactionManager
2019-05-03 17:50:02,529 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Storing ApplicationContext in cache under key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:50:02,529 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]
2019-05-03 17:50:02,532 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:50:02,534 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:50:02,534 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:50:02,534 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]
2019-05-03 17:50:02,537 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:50:02,537 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:50:02,542 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.deletePhoneTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:50:02,574 DEBUG [StatisticsInitiator]  - Statistics initialized [enabled=false]
2019-05-03 17:50:02,574 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,576 DEBUG [TransactionImpl]  - begin
2019-05-03 17:50:02,576 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:50:02,679 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@5f5b5ca4]
2019-05-03 17:50:02,679 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:50:02,683 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,683 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,687 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:02,693 DEBUG [SequenceStructure]  - Sequence value obtained: 1
2019-05-03 17:50:02,693 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:02,694 DEBUG [AbstractSaveEventListener]  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:02,707 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,707 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,708 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:50:02,709 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,709 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,709 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=1, title=Wiedzmin}
2019-05-03 17:50:02,714 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:02,718 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,718 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,718 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:02,718 DEBUG [SequenceStructure]  - Sequence value obtained: 2
2019-05-03 17:50:02,718 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:02,719 DEBUG [AbstractSaveEventListener]  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:02,719 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,719 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,719 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:50:02,719 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,719 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,719 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=1, title=Wiedzmin}
2019-05-03 17:50:02,719 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:50:02,719 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:02,720 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#1], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,720 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,720 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:02,720 DEBUG [SequenceStructure]  - Sequence value obtained: 3
2019-05-03 17:50:02,720 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:02,721 DEBUG [AbstractSaveEventListener]  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:02,721 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,721 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,721 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:50:02,721 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,721 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,721 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:50:02,721 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=1, title=Wiedzmin}
2019-05-03 17:50:02,721 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:50:02,721 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:02,722 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#1], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,722 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,726 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,726 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,726 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:50:02,726 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,726 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,726 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:50:02,726 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=1, title=Wiedzmin}
2019-05-03 17:50:02,726 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:50:02,727 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:50:02,729 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:50:02,730 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#1]
2019-05-03 17:50:02,730 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:50:02,730 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#2]
2019-05-03 17:50:02,730 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:50:02,730 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:50:02,731 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#1], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,732 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,733 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#1], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,733 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,734 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#1], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,734 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,734 DEBUG [DefaultLoadEventListener]  - Load request found matching entity in context, but it is scheduled for removal; returning null
2019-05-03 17:50:02,735 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#1], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,735 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,735 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,735 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,735 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
2019-05-03 17:50:02,735 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,735 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,735 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:50:02,735 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=1, title=Wiedzmin}
2019-05-03 17:50:02,735 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:50:02,735 DEBUG [ActionQueue]  - Changes must be flushed to space: Book
2019-05-03 17:50:02,735 DEBUG [SQL]  - delete from Book where id=?
2019-05-03 17:50:02,738 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:50:02,739 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:50:02,739 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#2]
2019-05-03 17:50:02,739 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:50:02,739 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:50:02,740 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:50:02,740 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:50:02,740 DEBUG [TransactionImpl]  - committing
2019-05-03 17:50:02,740 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,740 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,740 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:50:02,740 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,740 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,740 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:50:02,740 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:50:02,742 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:50:02,742 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:50:02,743 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:50:02,744 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:50:02,744 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:02,744 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:02,744 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@187eb9a8, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:50:02,744 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:50:02,745 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]
2019-05-03 17:50:02,745 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@187eb9a8, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:50:02,745 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@187eb9a8, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:50:02,746 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:50:02,746 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]
2019-05-03 17:50:02,746 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:50:02,746 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@187eb9a8, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:50:02,746 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.updatePhoneTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:50:02,746 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,746 DEBUG [TransactionImpl]  - begin
2019-05-03 17:50:02,746 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:50:02,848 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@726a6b94]
2019-05-03 17:50:02,849 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@187eb9a8, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:50:02,849 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,849 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,849 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:02,850 DEBUG [SequenceStructure]  - Sequence value obtained: 4
2019-05-03 17:50:02,850 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:02,850 DEBUG [AbstractSaveEventListener]  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:02,850 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,850 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,850 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:50:02,850 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,850 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,850 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:50:02,850 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:02,851 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#4]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,851 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,851 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:02,852 DEBUG [SequenceStructure]  - Sequence value obtained: 5
2019-05-03 17:50:02,852 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:02,852 DEBUG [AbstractSaveEventListener]  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:02,852 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,852 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,852 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:50:02,852 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,852 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,852 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:50:02,852 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:50:02,852 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:02,853 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,853 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,853 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:02,854 DEBUG [SequenceStructure]  - Sequence value obtained: 6
2019-05-03 17:50:02,854 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:02,854 DEBUG [AbstractSaveEventListener]  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:02,854 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,854 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,854 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:50:02,854 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,854 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,854 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:50:02,854 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:50:02,854 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:50:02,854 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:02,855 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,855 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,855 DEBUG [SQL]  - select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:50:02,857 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:02,858 DEBUG [AbstractLoadPlanBasedEntityLoader]  - Done entity load : pl.tau.library.domain.Book#1
2019-05-03 17:50:02,858 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:50:02,858 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:50:02,858 DEBUG [TransactionImpl]  - committing
2019-05-03 17:50:02,858 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,858 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,858 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:50:02,858 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,858 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,858 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:50:02,858 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:50:02,858 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:50:02,859 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:50:02,859 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:50:02,859 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@187eb9a8, testMethod = updatePhoneTest@LibraryManagerTest, testException = java.lang.NullPointerException, mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:50:02,859 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@187eb9a8, testMethod = updatePhoneTest@LibraryManagerTest, testException = java.lang.NullPointerException, mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:50:02,862 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:02,862 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:02,862 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6569dded, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:50:02,863 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:50:02,863 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1]
2019-05-03 17:50:02,863 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6569dded, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:50:02,864 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6569dded, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:50:02,866 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:50:02,866 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1]
2019-05-03 17:50:02,866 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:50:02,866 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6569dded, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:50:02,866 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.getAllBooksTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:50:02,866 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,866 DEBUG [TransactionImpl]  - begin
2019-05-03 17:50:02,866 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:50:02,968 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@466d49f0]
2019-05-03 17:50:02,969 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6569dded, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:50:02,969 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,969 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,969 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:02,969 DEBUG [SequenceStructure]  - Sequence value obtained: 7
2019-05-03 17:50:02,969 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:02,970 DEBUG [AbstractSaveEventListener]  - Generated identifier: 7, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:02,970 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,970 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,970 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:50:02,970 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,970 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,970 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:50:02,970 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:02,971 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#7]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,971 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,971 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:02,971 DEBUG [SequenceStructure]  - Sequence value obtained: 8
2019-05-03 17:50:02,971 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:02,972 DEBUG [AbstractSaveEventListener]  - Generated identifier: 8, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:02,972 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,972 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,972 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:50:02,972 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,972 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,972 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:50:02,972 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:50:02,972 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:02,973 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,973 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,973 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:02,974 DEBUG [SequenceStructure]  - Sequence value obtained: 9
2019-05-03 17:50:02,974 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:02,974 DEBUG [AbstractSaveEventListener]  - Generated identifier: 9, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:02,974 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,974 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,974 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:50:02,974 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,974 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,974 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:50:02,974 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:50:02,974 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:50:02,974 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:02,975 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,975 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:02,975 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,975 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,975 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:50:02,975 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,975 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,975 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:50:02,975 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:50:02,975 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:50:02,976 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:50:02,976 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:50:02,977 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#2]
2019-05-03 17:50:02,978 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:50:02,979 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:50:02,979 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:50:02,979 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#4]
2019-05-03 17:50:02,979 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:50:02,979 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#5]
2019-05-03 17:50:02,979 DEBUG [Loader]  - Result set row: 4
2019-05-03 17:50:02,979 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#6]
2019-05-03 17:50:02,979 DEBUG [Loader]  - Result set row: 5
2019-05-03 17:50:02,979 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#7]
2019-05-03 17:50:02,979 DEBUG [Loader]  - Result set row: 6
2019-05-03 17:50:02,979 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#8]
2019-05-03 17:50:02,979 DEBUG [Loader]  - Result set row: 7
2019-05-03 17:50:02,979 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#9]
2019-05-03 17:50:02,979 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#2]
2019-05-03 17:50:02,979 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#2]
2019-05-03 17:50:02,979 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#3]
2019-05-03 17:50:02,979 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#3]
2019-05-03 17:50:02,979 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#4]
2019-05-03 17:50:02,980 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#4]
2019-05-03 17:50:02,980 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#5]
2019-05-03 17:50:02,980 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#5]
2019-05-03 17:50:02,980 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#6]
2019-05-03 17:50:02,980 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#6]
2019-05-03 17:50:02,980 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:50:02,980 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:50:02,980 DEBUG [TransactionImpl]  - committing
2019-05-03 17:50:02,980 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:02,980 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:02,980 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 8 objects
2019-05-03 17:50:02,981 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:02,981 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:02,981 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:50:02,981 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:50:02,981 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:50:02,981 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:50:02,981 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:50:02,981 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:50:02,981 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:50:02,981 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:50:02,981 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:50:02,981 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:50:02,982 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6569dded, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:50:02,982 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6569dded, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:50:02,982 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:02,983 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:02,984 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@1136b469, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:50:02,984 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:50:02,984 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 6, missCount = 1]
2019-05-03 17:50:02,984 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@1136b469, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:50:02,985 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@1136b469, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:50:02,985 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:50:02,985 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 7, missCount = 1]
2019-05-03 17:50:02,985 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:50:02,985 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@1136b469, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:50:02,985 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.findBookByNameTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:50:02,985 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:02,985 DEBUG [TransactionImpl]  - begin
2019-05-03 17:50:02,985 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:50:03,087 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@6579c3d9]
2019-05-03 17:50:03,087 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@1136b469, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:50:03,088 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:03,088 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:03,088 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:03,089 DEBUG [SequenceStructure]  - Sequence value obtained: 10
2019-05-03 17:50:03,089 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:03,089 DEBUG [AbstractSaveEventListener]  - Generated identifier: 10, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:03,089 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:03,089 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:03,089 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:50:03,089 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:03,089 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:03,089 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:50:03,089 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:03,090 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:03,090 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:03,091 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:03,091 DEBUG [SequenceStructure]  - Sequence value obtained: 11
2019-05-03 17:50:03,091 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:03,091 DEBUG [AbstractSaveEventListener]  - Generated identifier: 11, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:03,091 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:03,091 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:03,092 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:50:03,092 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:03,092 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:03,092 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:50:03,092 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:50:03,092 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:03,093 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:03,093 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:03,093 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:03,093 DEBUG [SequenceStructure]  - Sequence value obtained: 12
2019-05-03 17:50:03,093 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:03,094 DEBUG [AbstractSaveEventListener]  - Generated identifier: 12, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:03,094 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:03,094 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:03,094 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:50:03,094 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:03,094 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:03,094 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:50:03,094 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:50:03,094 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:50:03,094 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:03,095 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:03,095 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:03,096 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:03,096 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:03,096 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:50:03,096 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:03,096 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:03,096 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:50:03,096 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:50:03,096 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:50:03,096 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_ where book0_.title like ?
2019-05-03 17:50:03,098 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:50:03,098 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:50:03,098 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:50:03,098 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#6]
2019-05-03 17:50:03,098 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:50:03,098 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#9]
2019-05-03 17:50:03,098 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:50:03,098 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#12]
2019-05-03 17:50:03,098 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#3]
2019-05-03 17:50:03,098 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#3]
2019-05-03 17:50:03,098 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#6]
2019-05-03 17:50:03,098 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#6]
2019-05-03 17:50:03,098 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#9]
2019-05-03 17:50:03,098 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#9]
2019-05-03 17:50:03,099 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:50:03,099 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:50:03,099 DEBUG [TransactionImpl]  - committing
2019-05-03 17:50:03,099 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:03,099 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:03,099 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2019-05-03 17:50:03,099 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:03,099 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:03,099 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:50:03,099 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:50:03,099 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:50:03,099 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:50:03,099 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:50:03,099 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:50:03,100 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:50:03,100 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:50:03,100 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@1136b469, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:50:03,100 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@1136b469, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:50:03,102 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:03,102 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:50:03,102 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@48bfb884, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:50:03,102 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:50:03,102 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 8, missCount = 1]
2019-05-03 17:50:03,103 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@48bfb884, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:50:03,105 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@48bfb884, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:50:03,105 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:50:03,105 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 9, missCount = 1]
2019-05-03 17:50:03,105 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:50:03,105 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@48bfb884, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:50:03,105 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.addBookTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:50:03,105 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:03,105 DEBUG [TransactionImpl]  - begin
2019-05-03 17:50:03,105 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:50:03,208 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@11653e3b]
2019-05-03 17:50:03,208 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@48bfb884, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:50:03,208 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:03,208 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:03,208 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:03,209 DEBUG [SequenceStructure]  - Sequence value obtained: 13
2019-05-03 17:50:03,209 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:03,209 DEBUG [AbstractSaveEventListener]  - Generated identifier: 13, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:03,210 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:03,210 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:03,210 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:50:03,210 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:03,210 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:03,210 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:50:03,210 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:03,211 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#13]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:03,211 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:03,211 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:03,211 DEBUG [SequenceStructure]  - Sequence value obtained: 14
2019-05-03 17:50:03,211 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:03,212 DEBUG [AbstractSaveEventListener]  - Generated identifier: 14, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:03,212 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:03,212 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:03,212 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:50:03,212 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:03,212 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:03,212 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:50:03,212 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=14, title=Opowiadanie}
2019-05-03 17:50:03,212 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:03,213 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:50:03,213 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:50:03,214 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:50:03,214 DEBUG [SequenceStructure]  - Sequence value obtained: 15
2019-05-03 17:50:03,214 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:50:03,214 DEBUG [AbstractSaveEventListener]  - Generated identifier: 15, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:50:03,214 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:03,214 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:03,215 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:50:03,215 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:03,215 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:03,215 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:50:03,215 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=14, title=Opowiadanie}
2019-05-03 17:50:03,215 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=15, title=List}
2019-05-03 17:50:03,215 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:50:03,215 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:50:03,216 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:50:03,216 DEBUG [TransactionImpl]  - committing
2019-05-03 17:50:03,216 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:50:03,216 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:50:03,216 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:50:03,216 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:50:03,216 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:50:03,216 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:50:03,216 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=14, title=Opowiadanie}
2019-05-03 17:50:03,216 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=15, title=List}
2019-05-03 17:50:03,217 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:50:03,217 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:50:03,217 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@48bfb884, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:50:03,217 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@48bfb884, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:50:03,217 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:50:03,218 DEBUG [GenericApplicationContext]  - Closing org.springframework.context.support.GenericApplicationContext@711f39f9, started on Fri May 03 17:50:01 CEST 2019
2019-05-03 17:50:03,219 DEBUG [SessionFactoryImpl]  - HHH000031: Closing
2019-05-03 17:50:03,219 DEBUG [AbstractServiceRegistryImpl]  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2019-05-03 17:50:03,219 DEBUG [BootstrapServiceRegistryImpl]  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2019-05-03 17:51:01,448 DEBUG [SpringJUnit4ClassRunner]  - SpringJUnit4ClassRunner constructor called with [class pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:01,455 DEBUG [BootstrapUtils]  - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2019-05-03 17:51:01,462 DEBUG [BootstrapUtils]  - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2019-05-03 17:51:01,476 DEBUG [BootstrapUtils]  - Instantiating TestContextBootstrapper for test class [pl.tau.library.service.LibraryManagerTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2019-05-03 17:51:01,502 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@55f3ddb1 declaringClass = 'pl.tau.library.service.LibraryManagerTest', classes = '{}', locations = '{classpath:/beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2019-05-03 17:51:01,519 DEBUG [ActiveProfilesUtils]  - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:01,519 DEBUG [DefaultTestContextBootstrapper]  - @TestExecutionListeners is not present for class [pl.tau.library.service.LibraryManagerTest]: using defaults.
2019-05-03 17:51:01,520 INFO  [DefaultTestContextBootstrapper]  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-05-03 17:51:01,524 DEBUG [DefaultTestContextBootstrapper]  - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
2019-05-03 17:51:01,531 INFO  [DefaultTestContextBootstrapper]  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c]
2019-05-03 17:51:01,534 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:01,535 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:01,546 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:01,546 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:01,547 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:01,548 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:01,549 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:01,549 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:01,551 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:51:01,552 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:01,552 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:01,553 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:51:01,554 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:51:01,554 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:51:01,592 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:51:01,747 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:51:01,768 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:51:01,768 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@711f39f9
2019-05-03 17:51:01,805 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:51:01,868 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:51:01,897 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:51:01,897 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:51:01,897 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:51:01,897 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:51:01,898 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:51:01,899 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:51:01,899 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:51:01,900 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:51:01,901 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:51:01,904 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:51:01,904 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:51:01,934 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:51:01,963 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:51:01,966 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:51:01,995 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:51:01,996 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:51:01,997 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:51:02,049 DEBUG [logging]  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-05-03 17:51:02,060 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:51:02,063 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:51:02,066 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:51:02,140 INFO  [Version]  - HHH000412: Hibernate Core {5.1.6.Final}
2019-05-03 17:51:02,141 INFO  [Environment]  - HHH000206: hibernate.properties not found
2019-05-03 17:51:02,142 INFO  [Environment]  - HHH000021: Bytecode provider name : javassist
2019-05-03 17:51:02,154 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:51:02,160 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:51:02,160 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:51:02,172 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:51:02,177 INFO  [Version]  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-05-03 17:51:02,192 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:51:02,192 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:51:02,192 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:51:02,193 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:51:02,194 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:51:02,194 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:51:02,195 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:51:02,195 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:51:02,195 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:51:02,196 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:51:02,196 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:51:02,196 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:51:02,197 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:51:02,197 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:51:02,197 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:51:02,198 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:51:02,198 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:51:02,198 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:51:02,199 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:51:02,199 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:51:02,199 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:51:02,200 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:51:02,200 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:51:02,200 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:51:02,200 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:51:02,201 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:51:02,201 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:51:02,202 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:51:02,202 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:51:02,203 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:51:02,203 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:51:02,203 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:51:02,203 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:51:02,204 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:51:02,204 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:51:02,205 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:51:02,205 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:51:02,206 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:51:02,207 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:51:02,208 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:51:02,208 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:51:02,209 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:51:02,209 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:51:02,209 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:51:02,210 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:51:02,211 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:51:02,211 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:51:02,211 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:51:02,211 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:51:02,212 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:51:02,212 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:51:02,212 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:51:02,212 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:51:02,213 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:51:02,213 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:51:02,213 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:51:02,213 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:51:02,214 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:51:02,214 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:51:02,215 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:51:02,215 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:51:02,215 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:51:02,215 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:51:02,216 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:51:02,216 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:51:02,216 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:51:02,217 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:51:02,217 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:51:02,217 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:51:02,217 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:51:02,218 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:51:02,218 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:51:02,218 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:51:02,218 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:51:02,219 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:51:02,219 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:51:02,222 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:51:02,222 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:51:02,222 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:51:02,224 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:51:02,224 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:51:02,226 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:51:02,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:51:02,226 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:51:02,226 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:51:02,227 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:51:02,229 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:51:02,229 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:51:02,229 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bec854f
2019-05-03 17:51:02,229 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31edaa7d
2019-05-03 17:51:02,229 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26adfd2d
2019-05-03 17:51:02,229 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336e6b6
2019-05-03 17:51:02,229 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c3fdb62
2019-05-03 17:51:02,229 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205d38da
2019-05-03 17:51:02,229 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6950ed69
2019-05-03 17:51:02,229 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dd7b5a3
2019-05-03 17:51:02,237 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:51:02,380 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:51:02,380 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:51:02,380 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:51:02,390 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:51:02,412 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:51:02,500 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:51:02,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:51:02,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:51:02,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:51:02,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:51:02,502 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:51:02,502 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:51:02,503 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:51:02,504 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:51:02,504 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:51:02,504 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:51:02,504 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:51:02,504 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:51:02,505 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:51:02,550 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:51:02,567 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:51:02,578 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:51:02,578 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where b.title like :modelNameFragment
2019-05-03 17:51:02,585 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:51:02,589 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:51:02,591 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:51:02,606 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:51:02,607 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:51:02,609 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:51:02,610 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:51:02,611 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:51:02,613 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:51:02,613 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:51:02,613 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:51:02,613 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:51:02,613 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:51:02,613 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:51:02,614 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:51:02,614 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:51:02,614 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:51:02,614 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:51:02,614 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:51:02,615 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:51:02,615 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:51:02,615 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:51:02,635 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:51:02,636 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:51:02,636 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:51:02,636 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:51:02,636 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:51:02,636 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:51:02,636 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:51:02,636 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:51:02,636 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:51:02,636 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:51:02,636 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:51:02,636 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:51:02,636 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:51:02,636 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:51:02,636 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:51:02,636 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:51:02,636 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:51:02,636 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:51:02,636 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:51:02,636 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:51:02,636 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:51:02,636 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:51:02,637 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:51:02,637 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:51:02,637 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:51:02,637 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:51:02,637 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:51:02,637 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:51:02,637 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:51:02,637 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:51:02,637 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:51:02,637 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:51:02,637 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:51:02,637 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:51:02,637 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:51:02,637 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:51:02,666 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:51:02,666 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4264b240, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:51:02,673 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:51:02,694 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:51:02,694 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:51:02,703 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:51:02,703 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:51:02,743 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:51:02,743 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:51:02,743 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:51:02,743 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:02,744 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:51:02,744 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:51:02,761 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ed0ff3]
2019-05-03 17:51:02,763 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:51:02,763 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:51:02,763 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:51:02,773 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:51:02,776 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:51:02,778 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:51:02,778 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7f2382]
2019-05-03 17:51:02,778 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:51:02,778 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:51:02,778 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:51:02,778 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:51:02,779 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:51:02,779 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:51:02,779 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6815c5f2]
2019-05-03 17:51:02,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:51:02,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:51:02,779 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:51:02,779 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:51:02,779 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:51:02,779 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:51:02,779 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60094a13]
2019-05-03 17:51:02,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:51:02,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:51:02,779 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:51:02,779 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:51:02,779 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:51:02,779 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:51:02,779 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c32886a]
2019-05-03 17:51:02,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:51:02,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:51:02,779 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:51:02,779 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:51:02,779 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:51:02,779 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:51:02,779 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b892d5]
2019-05-03 17:51:02,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:51:02,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:51:02,779 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:51:02,779 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:51:02,779 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:51:02,779 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:51:02,779 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3546d80f]
2019-05-03 17:51:02,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:51:02,779 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:51:02,779 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:51:02,779 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:51:02,780 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:51:02,780 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:51:02,780 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3670f00]
2019-05-03 17:51:02,780 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:51:02,780 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:51:02,780 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:51:02,780 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:51:02,780 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:51:02,780 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:51:02,780 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ab18da]
2019-05-03 17:51:02,780 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:51:02,780 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:51:02,780 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:51:02,780 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:51:02,780 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:51:02,780 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:51:02,780 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42257bdd]
2019-05-03 17:51:02,781 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:51:02,781 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:51:02,781 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:51:02,781 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:51:02,782 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:51:02,782 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:51:02,782 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687a762c]
2019-05-03 17:51:02,782 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:51:02,782 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:51:02,782 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:51:02,782 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:51:02,783 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:51:02,783 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:51:02,794 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:51:02,794 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:51:02,794 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:51:02,809 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:51:02,922 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:51:02,924 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:51:02,924 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:51:02,926 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:51:02,926 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:51:02,926 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:51:02,930 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:51:02,930 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:51:02,952 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where b.title like :modelNameFragment
2019-05-03 17:51:02,957 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'b'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:51:02,957 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:51:02,974 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:51:02,986 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:51:02,986 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:51:02,988 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:51:02,989 DEBUG [DotNode]  - getDataType() : title -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:51:02,990 DEBUG [FromReferenceNode]  - Resolved : b.title -> book0_.title
2019-05-03 17:51:02,991 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:51:02,992 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where ( like ( book0_.title book0_.id title ) ? ) ) )
2019-05-03 17:51:02,997 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:51:02,997 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:51:02,998 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=b.title,tableAlias=book0_,className=pl.tau.library.domain.Book,classAlias=b}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=modelNameFragment, expectedType=org.hibernate.type.StringType@41330d4f}

2019-05-03 17:51:02,998 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:51:03,002 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b where b.title like :modelNameFragment
2019-05-03 17:51:03,003 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_ where book0_.title like ?
2019-05-03 17:51:03,003 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:51:03,007 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:51:03,007 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:51:03,008 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:51:03,008 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:51:03,008 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:51:03,008 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:51:03,008 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:51:03,008 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:51:03,008 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:51:03,008 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:51:03,009 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:51:03,009 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:51:03,009 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:51:03,009 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:51:03,009 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:51:03,009 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:51:03,009 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:51:03,010 DEBUG [SessionFactoryRegistry]  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5bbbdd4b
2019-05-03 17:51:03,010 DEBUG [SessionFactoryRegistry]  - Registering SessionFactory: 976c9f27-0c53-479b-b0dd-ccfc88bc38ba (<unnamed>)
2019-05-03 17:51:03,010 DEBUG [SessionFactoryRegistry]  - Not binding SessionFactory to JNDI, no JNDI name configured
2019-05-03 17:51:03,027 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2019-05-03 17:51:03,032 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'txManager'
2019-05-03 17:51:03,047 DEBUG [HibernateTransactionManager]  - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5] of Hibernate SessionFactory for HibernateTransactionManager
2019-05-03 17:51:03,057 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Storing ApplicationContext in cache under key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:51:03,058 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]
2019-05-03 17:51:03,061 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:51:03,064 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:51:03,064 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:51:03,064 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]
2019-05-03 17:51:03,066 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:51:03,066 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:51:03,072 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.deletePhoneTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:51:03,103 DEBUG [StatisticsInitiator]  - Statistics initialized [enabled=false]
2019-05-03 17:51:03,104 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,105 DEBUG [TransactionImpl]  - begin
2019-05-03 17:51:03,105 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:51:03,208 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@5f5b5ca4]
2019-05-03 17:51:03,208 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:51:03,212 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,212 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,215 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,221 DEBUG [SequenceStructure]  - Sequence value obtained: 16
2019-05-03 17:51:03,221 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,221 DEBUG [AbstractSaveEventListener]  - Generated identifier: 16, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,233 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,234 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,235 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:51:03,235 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,235 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,235 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=16, title=Wiedzmin}
2019-05-03 17:51:03,240 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,243 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#16]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,243 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,243 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,244 DEBUG [SequenceStructure]  - Sequence value obtained: 17
2019-05-03 17:51:03,244 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,244 DEBUG [AbstractSaveEventListener]  - Generated identifier: 17, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,244 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,244 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,244 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:51:03,244 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,244 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,244 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=16, title=Wiedzmin}
2019-05-03 17:51:03,245 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=17, title=Opowiadanie}
2019-05-03 17:51:03,245 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,245 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#16], EntityKey[pl.tau.library.domain.Book#17]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,245 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,245 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,246 DEBUG [SequenceStructure]  - Sequence value obtained: 18
2019-05-03 17:51:03,246 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,246 DEBUG [AbstractSaveEventListener]  - Generated identifier: 18, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,246 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,246 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,246 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:51:03,246 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,246 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,246 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=16, title=Wiedzmin}
2019-05-03 17:51:03,246 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=17, title=Opowiadanie}
2019-05-03 17:51:03,246 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=18, title=List}
2019-05-03 17:51:03,246 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,247 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#16], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,248 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,251 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,251 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,251 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:51:03,251 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,251 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,251 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=16, title=Wiedzmin}
2019-05-03 17:51:03,251 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=17, title=Opowiadanie}
2019-05-03 17:51:03,251 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=18, title=List}
2019-05-03 17:51:03,252 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:51:03,254 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:51:03,255 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#2]
2019-05-03 17:51:03,256 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#4]
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#5]
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result set row: 4
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#6]
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result set row: 5
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#7]
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result set row: 6
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#8]
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result set row: 7
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#9]
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result set row: 8
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#10]
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result set row: 9
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#11]
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result set row: 10
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#12]
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result set row: 11
2019-05-03 17:51:03,257 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#13]
2019-05-03 17:51:03,258 DEBUG [Loader]  - Result set row: 12
2019-05-03 17:51:03,258 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#14]
2019-05-03 17:51:03,258 DEBUG [Loader]  - Result set row: 13
2019-05-03 17:51:03,258 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#15]
2019-05-03 17:51:03,258 DEBUG [Loader]  - Result set row: 14
2019-05-03 17:51:03,258 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#16]
2019-05-03 17:51:03,258 DEBUG [Loader]  - Result set row: 15
2019-05-03 17:51:03,258 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#17]
2019-05-03 17:51:03,258 DEBUG [Loader]  - Result set row: 16
2019-05-03 17:51:03,258 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#18]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#2]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#2]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#3]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#3]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#4]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#4]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#5]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#5]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#6]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#6]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#7]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#7]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#8]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#8]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#9]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#9]
2019-05-03 17:51:03,259 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#10]
2019-05-03 17:51:03,260 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#10]
2019-05-03 17:51:03,260 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#11]
2019-05-03 17:51:03,260 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#11]
2019-05-03 17:51:03,260 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#12]
2019-05-03 17:51:03,260 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#12]
2019-05-03 17:51:03,260 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#13]
2019-05-03 17:51:03,260 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#13]
2019-05-03 17:51:03,260 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#14]
2019-05-03 17:51:03,260 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#14]
2019-05-03 17:51:03,260 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#15]
2019-05-03 17:51:03,260 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#15]
2019-05-03 17:51:03,261 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#16], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,261 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,265 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#16], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,265 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,266 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#16], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,266 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,266 DEBUG [DefaultLoadEventListener]  - Load request found matching entity in context, but it is scheduled for removal; returning null
2019-05-03 17:51:03,266 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#16], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,266 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,267 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,267 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,267 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 1 deletions to 17 objects
2019-05-03 17:51:03,267 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=14, title=Opowiadanie}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=15, title=List}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=16, title=Wiedzmin}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=17, title=Opowiadanie}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=18, title=List}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:51:03,267 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:51:03,267 DEBUG [ActionQueue]  - Changes must be flushed to space: Book
2019-05-03 17:51:03,267 DEBUG [SQL]  - delete from Book where id=?
2019-05-03 17:51:03,269 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#2]
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#4]
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#5]
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result set row: 4
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#6]
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result set row: 5
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#7]
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result set row: 6
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#8]
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result set row: 7
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#9]
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result set row: 8
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#10]
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result set row: 9
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#11]
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result set row: 10
2019-05-03 17:51:03,270 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#12]
2019-05-03 17:51:03,271 DEBUG [Loader]  - Result set row: 11
2019-05-03 17:51:03,271 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#13]
2019-05-03 17:51:03,271 DEBUG [Loader]  - Result set row: 12
2019-05-03 17:51:03,271 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#14]
2019-05-03 17:51:03,271 DEBUG [Loader]  - Result set row: 13
2019-05-03 17:51:03,271 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#15]
2019-05-03 17:51:03,271 DEBUG [Loader]  - Result set row: 14
2019-05-03 17:51:03,271 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#17]
2019-05-03 17:51:03,271 DEBUG [Loader]  - Result set row: 15
2019-05-03 17:51:03,271 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#18]
2019-05-03 17:51:03,272 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:51:03,272 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:51:03,272 DEBUG [TransactionImpl]  - committing
2019-05-03 17:51:03,272 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,272 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,273 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 16 objects
2019-05-03 17:51:03,273 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=14, title=Opowiadanie}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=15, title=List}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=17, title=Opowiadanie}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=18, title=List}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:51:03,273 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:51:03,275 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:51:03,275 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:51:03,276 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:51:03,277 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:51:03,277 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:03,277 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:03,277 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:51:03,278 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:51:03,278 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]
2019-05-03 17:51:03,278 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:51:03,279 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:51:03,279 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:51:03,279 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]
2019-05-03 17:51:03,279 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:51:03,279 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:51:03,280 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.updatePhoneTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:51:03,280 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,280 DEBUG [TransactionImpl]  - begin
2019-05-03 17:51:03,280 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:51:03,383 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@43b0ade]
2019-05-03 17:51:03,383 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:51:03,383 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,383 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,383 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,384 DEBUG [SequenceStructure]  - Sequence value obtained: 19
2019-05-03 17:51:03,384 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,384 DEBUG [AbstractSaveEventListener]  - Generated identifier: 19, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,384 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,384 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,385 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:51:03,385 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,385 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,385 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=19, title=Wiedzmin}
2019-05-03 17:51:03,385 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,386 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,386 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,386 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,387 DEBUG [SequenceStructure]  - Sequence value obtained: 20
2019-05-03 17:51:03,387 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,387 DEBUG [AbstractSaveEventListener]  - Generated identifier: 20, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,387 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,387 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,387 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:51:03,387 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,387 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,387 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=19, title=Wiedzmin}
2019-05-03 17:51:03,387 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=20, title=Opowiadanie}
2019-05-03 17:51:03,388 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,389 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#20]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,389 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,389 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,390 DEBUG [SequenceStructure]  - Sequence value obtained: 21
2019-05-03 17:51:03,390 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,390 DEBUG [AbstractSaveEventListener]  - Generated identifier: 21, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,390 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,390 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,391 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:51:03,391 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,391 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,391 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=19, title=Wiedzmin}
2019-05-03 17:51:03,391 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=20, title=Opowiadanie}
2019-05-03 17:51:03,391 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=21, title=List}
2019-05-03 17:51:03,391 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,392 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,392 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,392 DEBUG [SQL]  - select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:51:03,394 DEBUG [ResultSetProcessorImpl]  - Starting ResultSet row #0
2019-05-03 17:51:03,395 DEBUG [EntityReferenceInitializerImpl]  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2019-05-03 17:51:03,395 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#2]
2019-05-03 17:51:03,395 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#2]
2019-05-03 17:51:03,395 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,396 DEBUG [AbstractLoadPlanBasedEntityLoader]  - Done entity load : pl.tau.library.domain.Book#2
2019-05-03 17:51:03,396 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,396 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,397 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,397 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,397 DEBUG [SQL]  - select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:51:03,398 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,398 DEBUG [AbstractLoadPlanBasedEntityLoader]  - Done entity load : pl.tau.library.domain.Book#1
2019-05-03 17:51:03,398 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:51:03,398 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:51:03,398 DEBUG [TransactionImpl]  - committing
2019-05-03 17:51:03,398 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,398 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,399 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2019-05-03 17:51:03,399 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,399 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,399 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=19, title=Wiedzmin}
2019-05-03 17:51:03,399 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=20, title=Opowiadanie}
2019-05-03 17:51:03,399 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=21, title=List}
2019-05-03 17:51:03,399 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Fraszka}
2019-05-03 17:51:03,399 DEBUG [SQL]  - update Book set title=?, year=? where id=?
2019-05-03 17:51:03,401 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:51:03,401 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:51:03,401 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = updatePhoneTest@LibraryManagerTest, testException = java.lang.NullPointerException, mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:51:03,402 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = updatePhoneTest@LibraryManagerTest, testException = java.lang.NullPointerException, mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:51:03,405 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:03,409 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:03,409 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@286b39c2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:51:03,410 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:51:03,410 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1]
2019-05-03 17:51:03,410 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@286b39c2, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:51:03,410 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@286b39c2, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:51:03,412 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:51:03,412 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1]
2019-05-03 17:51:03,412 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:51:03,412 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@286b39c2, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:51:03,412 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.getAllBooksTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:51:03,412 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,412 DEBUG [TransactionImpl]  - begin
2019-05-03 17:51:03,412 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:51:03,515 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@5432050b]
2019-05-03 17:51:03,515 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@286b39c2, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:51:03,515 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,515 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,515 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,516 DEBUG [SequenceStructure]  - Sequence value obtained: 22
2019-05-03 17:51:03,516 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,516 DEBUG [AbstractSaveEventListener]  - Generated identifier: 22, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,516 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,516 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,517 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:51:03,517 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,517 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,517 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=22, title=Wiedzmin}
2019-05-03 17:51:03,517 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,518 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#22]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,518 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,518 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,518 DEBUG [SequenceStructure]  - Sequence value obtained: 23
2019-05-03 17:51:03,518 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,518 DEBUG [AbstractSaveEventListener]  - Generated identifier: 23, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,519 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,519 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,519 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:51:03,519 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,519 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,519 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=22, title=Wiedzmin}
2019-05-03 17:51:03,519 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=23, title=Opowiadanie}
2019-05-03 17:51:03,519 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,520 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#22], EntityKey[pl.tau.library.domain.Book#23]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,520 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,520 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,520 DEBUG [SequenceStructure]  - Sequence value obtained: 24
2019-05-03 17:51:03,520 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,521 DEBUG [AbstractSaveEventListener]  - Generated identifier: 24, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,521 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,521 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,521 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:51:03,521 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,521 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,521 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=22, title=Wiedzmin}
2019-05-03 17:51:03,521 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=23, title=Opowiadanie}
2019-05-03 17:51:03,521 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=24, title=List}
2019-05-03 17:51:03,521 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,522 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#22], EntityKey[pl.tau.library.domain.Book#23], EntityKey[pl.tau.library.domain.Book#24]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,522 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,522 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,522 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,522 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:51:03,522 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,522 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,522 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=22, title=Wiedzmin}
2019-05-03 17:51:03,522 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=23, title=Opowiadanie}
2019-05-03 17:51:03,522 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=24, title=List}
2019-05-03 17:51:03,522 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:51:03,523 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:51:03,523 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#2]
2019-05-03 17:51:03,523 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:51:03,523 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:51:03,523 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:51:03,523 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#4]
2019-05-03 17:51:03,523 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:51:03,523 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#5]
2019-05-03 17:51:03,523 DEBUG [Loader]  - Result set row: 4
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#6]
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result set row: 5
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#7]
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result set row: 6
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#8]
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result set row: 7
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#9]
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result set row: 8
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#10]
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result set row: 9
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#11]
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result set row: 10
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#12]
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result set row: 11
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#13]
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result set row: 12
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#14]
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result set row: 13
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#15]
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result set row: 14
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#17]
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result set row: 15
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#18]
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result set row: 16
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#19]
2019-05-03 17:51:03,524 DEBUG [Loader]  - Result set row: 17
2019-05-03 17:51:03,525 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#20]
2019-05-03 17:51:03,525 DEBUG [Loader]  - Result set row: 18
2019-05-03 17:51:03,525 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#21]
2019-05-03 17:51:03,525 DEBUG [Loader]  - Result set row: 19
2019-05-03 17:51:03,525 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#22]
2019-05-03 17:51:03,525 DEBUG [Loader]  - Result set row: 20
2019-05-03 17:51:03,525 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#23]
2019-05-03 17:51:03,525 DEBUG [Loader]  - Result set row: 21
2019-05-03 17:51:03,525 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#24]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#2]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#2]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#3]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#3]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#4]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#4]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#5]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#5]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#6]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#6]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#7]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#7]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#8]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#8]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#9]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#9]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#10]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#10]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#11]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#11]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#12]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#12]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#13]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#13]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#14]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#14]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#15]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#15]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#17]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#17]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#18]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#18]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#19]
2019-05-03 17:51:03,525 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#19]
2019-05-03 17:51:03,526 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#20]
2019-05-03 17:51:03,526 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#20]
2019-05-03 17:51:03,526 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#21]
2019-05-03 17:51:03,526 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#21]
2019-05-03 17:51:03,526 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:51:03,526 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21], EntityKey[pl.tau.library.domain.Book#22], EntityKey[pl.tau.library.domain.Book#23], EntityKey[pl.tau.library.domain.Book#24], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:51:03,526 DEBUG [TransactionImpl]  - committing
2019-05-03 17:51:03,526 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,526 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,527 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 22 objects
2019-05-03 17:51:03,527 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=14, title=Opowiadanie}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=15, title=List}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=17, title=Opowiadanie}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=18, title=List}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=19, title=Wiedzmin}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=20, title=Opowiadanie}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=21, title=List}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=22, title=Wiedzmin}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=23, title=Opowiadanie}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=24, title=List}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Fraszka}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:51:03,527 DEBUG [EntityPrinter]  - More......
2019-05-03 17:51:03,528 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21], EntityKey[pl.tau.library.domain.Book#22], EntityKey[pl.tau.library.domain.Book#23], EntityKey[pl.tau.library.domain.Book#24], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:51:03,528 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:51:03,528 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@286b39c2, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:51:03,528 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@286b39c2, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:51:03,529 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:03,529 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:03,529 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@47c64cfe, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:51:03,529 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:51:03,529 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 6, missCount = 1]
2019-05-03 17:51:03,529 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@47c64cfe, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:51:03,530 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@47c64cfe, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:51:03,530 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:51:03,530 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 7, missCount = 1]
2019-05-03 17:51:03,530 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:51:03,530 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@47c64cfe, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:51:03,530 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.findBookByNameTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:51:03,530 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,530 DEBUG [TransactionImpl]  - begin
2019-05-03 17:51:03,530 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:51:03,633 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@6ce90bc5]
2019-05-03 17:51:03,633 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@47c64cfe, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:51:03,633 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,633 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,633 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,634 DEBUG [SequenceStructure]  - Sequence value obtained: 25
2019-05-03 17:51:03,634 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,634 DEBUG [AbstractSaveEventListener]  - Generated identifier: 25, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,634 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,634 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,634 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:51:03,634 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,634 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,634 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=25, title=Wiedzmin}
2019-05-03 17:51:03,634 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,635 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#25]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,635 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,635 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,636 DEBUG [SequenceStructure]  - Sequence value obtained: 26
2019-05-03 17:51:03,636 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,636 DEBUG [AbstractSaveEventListener]  - Generated identifier: 26, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,636 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,636 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,636 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:51:03,637 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,637 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,637 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=25, title=Wiedzmin}
2019-05-03 17:51:03,637 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=26, title=Opowiadanie}
2019-05-03 17:51:03,637 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,638 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#25], EntityKey[pl.tau.library.domain.Book#26]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,638 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,638 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,638 DEBUG [SequenceStructure]  - Sequence value obtained: 27
2019-05-03 17:51:03,638 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,639 DEBUG [AbstractSaveEventListener]  - Generated identifier: 27, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,639 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,639 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,639 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:51:03,639 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,639 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,639 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=27, title=List}
2019-05-03 17:51:03,639 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=25, title=Wiedzmin}
2019-05-03 17:51:03,639 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=26, title=Opowiadanie}
2019-05-03 17:51:03,639 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,640 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#27], EntityKey[pl.tau.library.domain.Book#25], EntityKey[pl.tau.library.domain.Book#26]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,640 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,641 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,641 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,641 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:51:03,641 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,641 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,641 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=27, title=List}
2019-05-03 17:51:03,641 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=25, title=Wiedzmin}
2019-05-03 17:51:03,641 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=26, title=Opowiadanie}
2019-05-03 17:51:03,641 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_ where book0_.title like ?
2019-05-03 17:51:03,642 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:51:03,642 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#6]
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#9]
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#12]
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result set row: 4
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#15]
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result set row: 5
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#18]
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result set row: 6
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#21]
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result set row: 7
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#24]
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result set row: 8
2019-05-03 17:51:03,643 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#27]
2019-05-03 17:51:03,643 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#3]
2019-05-03 17:51:03,643 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#3]
2019-05-03 17:51:03,643 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#6]
2019-05-03 17:51:03,643 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#6]
2019-05-03 17:51:03,643 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#9]
2019-05-03 17:51:03,644 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#9]
2019-05-03 17:51:03,644 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#12]
2019-05-03 17:51:03,644 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#12]
2019-05-03 17:51:03,644 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#15]
2019-05-03 17:51:03,644 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#15]
2019-05-03 17:51:03,644 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#18]
2019-05-03 17:51:03,644 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#18]
2019-05-03 17:51:03,644 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#21]
2019-05-03 17:51:03,644 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#21]
2019-05-03 17:51:03,644 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#24]
2019-05-03 17:51:03,644 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#24]
2019-05-03 17:51:03,644 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:51:03,644 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#27], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#21], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#24], EntityKey[pl.tau.library.domain.Book#25], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#26]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:51:03,644 DEBUG [TransactionImpl]  - committing
2019-05-03 17:51:03,644 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,644 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,644 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
2019-05-03 17:51:03,644 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,645 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,645 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=27, title=List}
2019-05-03 17:51:03,645 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:51:03,645 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=15, title=List}
2019-05-03 17:51:03,645 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=18, title=List}
2019-05-03 17:51:03,645 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:51:03,645 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=21, title=List}
2019-05-03 17:51:03,645 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:51:03,645 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=24, title=List}
2019-05-03 17:51:03,645 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=25, title=Wiedzmin}
2019-05-03 17:51:03,645 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:51:03,645 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=26, title=Opowiadanie}
2019-05-03 17:51:03,645 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#27], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#21], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#24], EntityKey[pl.tau.library.domain.Book#25], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#26]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:51:03,645 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:51:03,646 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@47c64cfe, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:51:03,646 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@47c64cfe, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:51:03,646 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:03,646 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:51:03,646 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6443b128, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:51:03,646 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:51:03,646 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 8, missCount = 1]
2019-05-03 17:51:03,647 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6443b128, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:51:03,647 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6443b128, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:51:03,647 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:51:03,647 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 9, missCount = 1]
2019-05-03 17:51:03,647 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:51:03,647 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6443b128, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:51:03,648 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.addBookTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:51:03,648 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,648 DEBUG [TransactionImpl]  - begin
2019-05-03 17:51:03,648 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:51:03,749 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@5eeedb60]
2019-05-03 17:51:03,750 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6443b128, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:51:03,750 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,750 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,750 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,750 DEBUG [SequenceStructure]  - Sequence value obtained: 28
2019-05-03 17:51:03,750 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,751 DEBUG [AbstractSaveEventListener]  - Generated identifier: 28, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,751 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,751 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,751 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:51:03,751 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,751 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,751 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=28, title=Wiedzmin}
2019-05-03 17:51:03,751 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,752 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#28]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,752 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,752 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,752 DEBUG [SequenceStructure]  - Sequence value obtained: 29
2019-05-03 17:51:03,753 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,753 DEBUG [AbstractSaveEventListener]  - Generated identifier: 29, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,753 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,753 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,753 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:51:03,753 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,753 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,753 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=28, title=Wiedzmin}
2019-05-03 17:51:03,753 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=29, title=Opowiadanie}
2019-05-03 17:51:03,753 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,754 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#28], EntityKey[pl.tau.library.domain.Book#29]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:51:03,754 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:51:03,754 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:51:03,755 DEBUG [SequenceStructure]  - Sequence value obtained: 30
2019-05-03 17:51:03,755 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:51:03,755 DEBUG [AbstractSaveEventListener]  - Generated identifier: 30, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:51:03,755 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,755 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,755 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:51:03,755 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,755 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,755 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=28, title=Wiedzmin}
2019-05-03 17:51:03,755 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=29, title=Opowiadanie}
2019-05-03 17:51:03,755 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=30, title=List}
2019-05-03 17:51:03,755 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:51:03,756 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:51:03,756 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#28], EntityKey[pl.tau.library.domain.Book#29], EntityKey[pl.tau.library.domain.Book#30]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:51:03,756 DEBUG [TransactionImpl]  - committing
2019-05-03 17:51:03,756 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:51:03,756 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:51:03,756 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:51:03,756 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:51:03,756 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:51:03,756 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=28, title=Wiedzmin}
2019-05-03 17:51:03,756 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=29, title=Opowiadanie}
2019-05-03 17:51:03,756 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=30, title=List}
2019-05-03 17:51:03,757 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#28], EntityKey[pl.tau.library.domain.Book#29], EntityKey[pl.tau.library.domain.Book#30]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:51:03,757 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:51:03,757 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6443b128, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:51:03,758 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6443b128, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:51:03,759 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:51:03,759 DEBUG [GenericApplicationContext]  - Closing org.springframework.context.support.GenericApplicationContext@711f39f9, started on Fri May 03 17:51:01 CEST 2019
2019-05-03 17:51:03,760 DEBUG [SessionFactoryImpl]  - HHH000031: Closing
2019-05-03 17:51:03,760 DEBUG [AbstractServiceRegistryImpl]  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2019-05-03 17:51:03,760 DEBUG [BootstrapServiceRegistryImpl]  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2019-05-03 17:52:20,274 DEBUG [SpringJUnit4ClassRunner]  - SpringJUnit4ClassRunner constructor called with [class pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:20,283 DEBUG [BootstrapUtils]  - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2019-05-03 17:52:20,289 DEBUG [BootstrapUtils]  - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2019-05-03 17:52:20,299 DEBUG [BootstrapUtils]  - Instantiating TestContextBootstrapper for test class [pl.tau.library.service.LibraryManagerTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2019-05-03 17:52:20,324 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@55f3ddb1 declaringClass = 'pl.tau.library.service.LibraryManagerTest', classes = '{}', locations = '{classpath:/beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2019-05-03 17:52:20,345 DEBUG [ActiveProfilesUtils]  - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:20,346 DEBUG [DefaultTestContextBootstrapper]  - @TestExecutionListeners is not present for class [pl.tau.library.service.LibraryManagerTest]: using defaults.
2019-05-03 17:52:20,347 INFO  [DefaultTestContextBootstrapper]  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-05-03 17:52:20,351 DEBUG [DefaultTestContextBootstrapper]  - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
2019-05-03 17:52:20,358 INFO  [DefaultTestContextBootstrapper]  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c]
2019-05-03 17:52:20,359 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:20,360 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:20,372 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:20,372 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:20,374 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:20,374 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:20,374 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:20,374 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:20,376 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:52:20,376 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:20,376 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:20,378 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:52:20,379 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:52:20,379 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:52:20,418 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:52:20,581 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:52:20,614 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:52:20,614 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@711f39f9
2019-05-03 17:52:20,646 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:52:20,714 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:52:20,763 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:52:20,763 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:52:20,763 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:52:20,763 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:52:20,764 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:52:20,765 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:52:20,765 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:52:20,767 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:52:20,767 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:52:20,770 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:52:20,770 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:52:20,798 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:52:20,831 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:52:20,837 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:52:20,846 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:52:20,847 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:52:20,848 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:52:20,895 DEBUG [logging]  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-05-03 17:52:20,916 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:52:20,918 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:52:20,920 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:52:20,984 INFO  [Version]  - HHH000412: Hibernate Core {5.1.6.Final}
2019-05-03 17:52:20,986 INFO  [Environment]  - HHH000206: hibernate.properties not found
2019-05-03 17:52:20,988 INFO  [Environment]  - HHH000021: Bytecode provider name : javassist
2019-05-03 17:52:21,000 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:52:21,005 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:52:21,005 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:52:21,016 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:52:21,021 INFO  [Version]  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-05-03 17:52:21,035 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:52:21,035 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:52:21,035 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:52:21,035 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:52:21,036 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:52:21,036 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:52:21,037 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:52:21,037 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:52:21,037 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:52:21,038 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:52:21,038 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:52:21,038 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:52:21,039 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:52:21,039 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:52:21,039 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:52:21,040 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:52:21,040 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:52:21,040 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:52:21,041 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:52:21,041 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:52:21,041 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:52:21,042 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:52:21,042 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:52:21,042 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:52:21,042 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:52:21,043 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:52:21,043 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:52:21,043 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:52:21,044 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:52:21,044 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:52:21,044 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:52:21,045 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:52:21,045 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:52:21,045 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:52:21,046 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:52:21,046 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:52:21,046 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:52:21,048 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:52:21,048 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:52:21,049 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:52:21,049 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:52:21,050 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:52:21,050 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:52:21,050 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:52:21,051 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:52:21,051 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:52:21,051 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:52:21,051 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:52:21,052 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:52:21,052 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:52:21,053 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:52:21,053 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:52:21,053 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:52:21,054 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:52:21,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:52:21,054 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:52:21,054 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:52:21,055 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:52:21,055 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:52:21,055 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:52:21,056 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:52:21,056 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:52:21,056 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:52:21,057 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:52:21,057 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:52:21,057 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:52:21,058 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:52:21,058 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:52:21,059 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:52:21,059 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:52:21,059 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:52:21,059 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:52:21,059 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:52:21,059 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:52:21,060 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:52:21,060 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:52:21,063 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:52:21,063 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:52:21,063 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:52:21,065 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:52:21,065 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:52:21,067 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:52:21,067 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:52:21,067 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:52:21,068 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:52:21,068 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:52:21,070 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:52:21,070 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:52:21,070 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bec854f
2019-05-03 17:52:21,070 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31edaa7d
2019-05-03 17:52:21,070 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26adfd2d
2019-05-03 17:52:21,070 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336e6b6
2019-05-03 17:52:21,070 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c3fdb62
2019-05-03 17:52:21,070 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205d38da
2019-05-03 17:52:21,070 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6950ed69
2019-05-03 17:52:21,070 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dd7b5a3
2019-05-03 17:52:21,078 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:52:21,227 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:52:21,227 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:52:21,227 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:52:21,235 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:52:21,259 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:52:21,347 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:52:21,347 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:52:21,348 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:52:21,348 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:52:21,348 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:52:21,349 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:52:21,350 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:52:21,351 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:52:21,351 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:52:21,351 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:52:21,352 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:52:21,352 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:52:21,352 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:52:21,353 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:52:21,402 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:52:21,422 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:52:21,435 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:52:21,435 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where b.title like :modelNameFragment
2019-05-03 17:52:21,442 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:52:21,446 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:52:21,448 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:52:21,468 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:52:21,470 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:52:21,471 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:52:21,472 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:52:21,474 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:52:21,477 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:52:21,477 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:52:21,477 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:52:21,477 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:52:21,477 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:52:21,477 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:52:21,477 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:52:21,477 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:52:21,478 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:52:21,478 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:52:21,479 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:52:21,479 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:52:21,479 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:52:21,480 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:52:21,503 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:52:21,503 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:52:21,504 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:52:21,504 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:52:21,504 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:52:21,504 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:52:21,504 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:52:21,504 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:52:21,504 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:52:21,504 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:52:21,504 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:52:21,504 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:52:21,504 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:52:21,504 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:52:21,505 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:52:21,505 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:52:21,505 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:52:21,533 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:52:21,533 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4264b240, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:52:21,539 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:52:21,558 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:52:21,558 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:52:21,566 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:52:21,566 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:52:21,603 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:52:21,603 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:52:21,603 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:52:21,603 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:21,603 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:52:21,604 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:52:21,619 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ed0ff3]
2019-05-03 17:52:21,621 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:52:21,621 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:52:21,621 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:52:21,630 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:52:21,633 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:52:21,634 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:52:21,634 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7f2382]
2019-05-03 17:52:21,634 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:52:21,634 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:52:21,634 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:52:21,634 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:52:21,634 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:52:21,634 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:52:21,634 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6815c5f2]
2019-05-03 17:52:21,634 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:52:21,634 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:52:21,634 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:52:21,634 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:52:21,635 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:52:21,635 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:52:21,635 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60094a13]
2019-05-03 17:52:21,635 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:52:21,635 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:52:21,635 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:52:21,635 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:52:21,635 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:52:21,635 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:52:21,635 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c32886a]
2019-05-03 17:52:21,635 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:52:21,635 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:52:21,635 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:52:21,635 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:52:21,635 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:52:21,635 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:52:21,635 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b892d5]
2019-05-03 17:52:21,635 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:52:21,635 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:52:21,635 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:52:21,636 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:52:21,636 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:52:21,636 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:52:21,636 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3546d80f]
2019-05-03 17:52:21,636 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:52:21,636 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:52:21,636 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:52:21,636 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:52:21,636 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:52:21,636 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:52:21,636 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3670f00]
2019-05-03 17:52:21,636 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:52:21,636 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:52:21,637 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:52:21,637 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:52:21,637 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:52:21,637 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:52:21,637 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ab18da]
2019-05-03 17:52:21,637 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:52:21,637 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:52:21,637 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:52:21,637 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:52:21,637 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:52:21,637 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:52:21,637 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42257bdd]
2019-05-03 17:52:21,637 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:52:21,638 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:52:21,638 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:52:21,638 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:52:21,638 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:52:21,638 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:52:21,638 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687a762c]
2019-05-03 17:52:21,638 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:52:21,638 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:52:21,638 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:52:21,638 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:52:21,638 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:52:21,638 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:52:21,649 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:52:21,649 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:52:21,649 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:52:21,663 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:52:21,787 DEBUG [SQL]  - create table Book (id bigint not null, title varchar(255), year integer, primary key (id))
2019-05-03 17:52:21,789 DEBUG [SQL]  - create sequence hibernate_sequence start with 1 increment by 1
2019-05-03 17:52:21,791 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:52:21,791 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:52:21,793 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:52:21,793 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:52:21,793 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:52:21,796 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3113a37
2019-05-03 17:52:21,796 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:52:21,817 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where b.title like :modelNameFragment
2019-05-03 17:52:21,822 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'b'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:52:21,822 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:52:21,839 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:52:21,849 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:52:21,850 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:52:21,852 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:52:21,853 DEBUG [DotNode]  - getDataType() : title -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:52:21,854 DEBUG [FromReferenceNode]  - Resolved : b.title -> book0_.title
2019-05-03 17:52:21,855 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:52:21,855 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where ( like ( book0_.title book0_.id title ) ? ) ) )
2019-05-03 17:52:21,861 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:52:21,861 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:52:21,861 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=b.title,tableAlias=book0_,className=pl.tau.library.domain.Book,classAlias=b}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=modelNameFragment, expectedType=org.hibernate.type.StringType@41330d4f}

2019-05-03 17:52:21,861 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:52:21,866 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b where b.title like :modelNameFragment
2019-05-03 17:52:21,866 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_ where book0_.title like ?
2019-05-03 17:52:21,866 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:52:21,870 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:52:21,870 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:52:21,871 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:52:21,871 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:52:21,871 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:52:21,871 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:52:21,872 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:52:21,872 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:52:21,872 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:52:21,872 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:52:21,872 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:52:21,872 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:52:21,872 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:52:21,872 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:52:21,872 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:52:21,872 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:52:21,872 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:52:21,873 DEBUG [SessionFactoryRegistry]  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3d9fc57a
2019-05-03 17:52:21,873 DEBUG [SessionFactoryRegistry]  - Registering SessionFactory: a04185da-0fb4-4dcf-b7d1-f83479704908 (<unnamed>)
2019-05-03 17:52:21,874 DEBUG [SessionFactoryRegistry]  - Not binding SessionFactory to JNDI, no JNDI name configured
2019-05-03 17:52:21,889 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2019-05-03 17:52:21,895 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'txManager'
2019-05-03 17:52:21,910 DEBUG [HibernateTransactionManager]  - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5] of Hibernate SessionFactory for HibernateTransactionManager
2019-05-03 17:52:21,920 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Storing ApplicationContext in cache under key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:52:21,920 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]
2019-05-03 17:52:21,924 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:52:21,926 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:52:21,927 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:52:21,927 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]
2019-05-03 17:52:21,929 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:52:21,929 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:52:21,937 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.deletePhoneTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:52:21,969 DEBUG [StatisticsInitiator]  - Statistics initialized [enabled=false]
2019-05-03 17:52:21,970 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:21,971 DEBUG [TransactionImpl]  - begin
2019-05-03 17:52:21,971 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:52:22,074 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/1671007220@7e0b9178]
2019-05-03 17:52:22,075 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@2617f816]; rollback [false]
2019-05-03 17:52:22,079 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,079 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,082 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,088 DEBUG [SequenceStructure]  - Sequence value obtained: 1
2019-05-03 17:52:22,088 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,088 DEBUG [AbstractSaveEventListener]  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,101 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,101 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,102 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:52:22,102 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,103 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,103 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=1, title=Wiedzmin}
2019-05-03 17:52:22,108 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,113 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,113 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,113 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,113 DEBUG [SequenceStructure]  - Sequence value obtained: 2
2019-05-03 17:52:22,113 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,114 DEBUG [AbstractSaveEventListener]  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,114 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,114 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,114 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:52:22,114 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,114 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,114 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=1, title=Wiedzmin}
2019-05-03 17:52:22,114 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:52:22,114 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,115 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#1], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,115 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,115 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,116 DEBUG [SequenceStructure]  - Sequence value obtained: 3
2019-05-03 17:52:22,116 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,116 DEBUG [AbstractSaveEventListener]  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,116 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,116 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,116 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:52:22,116 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,116 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,116 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:52:22,116 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=1, title=Wiedzmin}
2019-05-03 17:52:22,116 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:52:22,116 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,120 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#1], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,120 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,123 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,123 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,123 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:52:22,124 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,124 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,124 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:52:22,124 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=1, title=Wiedzmin}
2019-05-03 17:52:22,124 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:52:22,126 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:52:22,129 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:52:22,129 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#1]
2019-05-03 17:52:22,129 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:52:22,129 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#2]
2019-05-03 17:52:22,129 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:52:22,129 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:52:22,131 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#1], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,131 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,132 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#1], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,132 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,134 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#1], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,134 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,134 DEBUG [DefaultLoadEventListener]  - Load request found matching entity in context, but it is scheduled for removal; returning null
2019-05-03 17:52:22,134 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#1], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,134 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,134 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,134 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,134 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
2019-05-03 17:52:22,134 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,134 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,134 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:52:22,134 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=1, title=Wiedzmin}
2019-05-03 17:52:22,134 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:52:22,134 DEBUG [ActionQueue]  - Changes must be flushed to space: Book
2019-05-03 17:52:22,134 DEBUG [SQL]  - delete from Book where id=?
2019-05-03 17:52:22,137 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:52:22,141 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:52:22,142 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#2]
2019-05-03 17:52:22,142 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:52:22,142 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:52:22,143 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:52:22,143 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:52:22,143 DEBUG [TransactionImpl]  - committing
2019-05-03 17:52:22,143 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,143 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,143 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:52:22,143 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,143 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,143 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:52:22,143 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:52:22,145 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:52:22,145 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:52:22,147 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:52:22,147 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:52:22,148 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:22,148 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:22,148 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4d847d32, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:52:22,148 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:52:22,148 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]
2019-05-03 17:52:22,148 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4d847d32, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:52:22,149 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4d847d32, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:52:22,149 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:52:22,149 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]
2019-05-03 17:52:22,149 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:52:22,149 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4d847d32, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:52:22,149 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.updatePhoneTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:52:22,150 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,150 DEBUG [TransactionImpl]  - begin
2019-05-03 17:52:22,150 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:52:22,251 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/1671007220@5f462e3b]
2019-05-03 17:52:22,251 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4d847d32, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@2617f816]; rollback [false]
2019-05-03 17:52:22,252 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,252 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,252 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,252 DEBUG [SequenceStructure]  - Sequence value obtained: 4
2019-05-03 17:52:22,252 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,252 DEBUG [AbstractSaveEventListener]  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,253 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,253 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,253 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:52:22,253 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,253 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,253 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:52:22,253 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,254 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#4]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,254 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,254 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,254 DEBUG [SequenceStructure]  - Sequence value obtained: 5
2019-05-03 17:52:22,254 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,254 DEBUG [AbstractSaveEventListener]  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,255 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,255 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,255 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:52:22,255 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,255 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,255 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:52:22,255 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:52:22,255 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,256 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,256 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,256 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,257 DEBUG [SequenceStructure]  - Sequence value obtained: 6
2019-05-03 17:52:22,257 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,257 DEBUG [AbstractSaveEventListener]  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,257 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,257 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,257 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:52:22,257 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,257 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,257 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:52:22,257 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:52:22,257 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:52:22,257 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,258 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,258 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,258 DEBUG [SQL]  - select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:52:22,261 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,261 DEBUG [AbstractLoadPlanBasedEntityLoader]  - Done entity load : pl.tau.library.domain.Book#1
2019-05-03 17:52:22,261 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:52:22,261 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:52:22,261 DEBUG [TransactionImpl]  - committing
2019-05-03 17:52:22,261 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,261 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,261 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:52:22,262 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,262 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,262 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:52:22,262 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:52:22,262 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:52:22,262 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:52:22,262 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:52:22,263 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4d847d32, testMethod = updatePhoneTest@LibraryManagerTest, testException = java.lang.NullPointerException, mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:52:22,263 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4d847d32, testMethod = updatePhoneTest@LibraryManagerTest, testException = java.lang.NullPointerException, mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:52:22,266 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:22,266 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:22,266 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@a0a9fa5, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:52:22,266 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:52:22,266 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1]
2019-05-03 17:52:22,268 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@a0a9fa5, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:52:22,269 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@a0a9fa5, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:52:22,269 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:52:22,269 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1]
2019-05-03 17:52:22,269 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:52:22,269 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@a0a9fa5, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:52:22,269 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.getAllBooksTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:52:22,269 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,269 DEBUG [TransactionImpl]  - begin
2019-05-03 17:52:22,269 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:52:22,372 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/1671007220@15723761]
2019-05-03 17:52:22,372 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@a0a9fa5, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@2617f816]; rollback [false]
2019-05-03 17:52:22,373 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,373 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,373 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,374 DEBUG [SequenceStructure]  - Sequence value obtained: 7
2019-05-03 17:52:22,374 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,374 DEBUG [AbstractSaveEventListener]  - Generated identifier: 7, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,374 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,374 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,374 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:52:22,374 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,374 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,374 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:52:22,374 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,375 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#7]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,375 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,375 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,376 DEBUG [SequenceStructure]  - Sequence value obtained: 8
2019-05-03 17:52:22,376 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,376 DEBUG [AbstractSaveEventListener]  - Generated identifier: 8, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,376 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,376 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,377 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:52:22,377 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,377 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,377 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:52:22,377 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:52:22,377 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,378 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,378 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,378 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,379 DEBUG [SequenceStructure]  - Sequence value obtained: 9
2019-05-03 17:52:22,379 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,379 DEBUG [AbstractSaveEventListener]  - Generated identifier: 9, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,379 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,379 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,379 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:52:22,379 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,379 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,379 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:52:22,379 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:52:22,379 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:52:22,379 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,380 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,380 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,381 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,381 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,381 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:52:22,381 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,381 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,381 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:52:22,381 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:52:22,381 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:52:22,381 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:52:22,382 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:52:22,382 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#2]
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#4]
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#5]
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result set row: 4
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#6]
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result set row: 5
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#7]
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result set row: 6
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#8]
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result set row: 7
2019-05-03 17:52:22,384 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#9]
2019-05-03 17:52:22,384 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#2]
2019-05-03 17:52:22,384 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#2]
2019-05-03 17:52:22,384 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#3]
2019-05-03 17:52:22,384 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#3]
2019-05-03 17:52:22,384 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#4]
2019-05-03 17:52:22,384 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#4]
2019-05-03 17:52:22,384 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#5]
2019-05-03 17:52:22,384 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#5]
2019-05-03 17:52:22,385 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#6]
2019-05-03 17:52:22,385 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#6]
2019-05-03 17:52:22,385 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:52:22,385 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:52:22,385 DEBUG [TransactionImpl]  - committing
2019-05-03 17:52:22,385 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,385 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,385 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 8 objects
2019-05-03 17:52:22,385 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,385 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,385 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:52:22,386 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:52:22,386 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:52:22,386 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:52:22,386 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:52:22,386 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:52:22,386 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:52:22,386 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:52:22,386 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:52:22,386 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:52:22,387 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@a0a9fa5, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:52:22,387 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@a0a9fa5, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:52:22,387 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:22,387 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:22,387 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:52:22,387 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:52:22,388 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 6, missCount = 1]
2019-05-03 17:52:22,389 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:52:22,389 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:52:22,389 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:52:22,389 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 7, missCount = 1]
2019-05-03 17:52:22,389 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:52:22,389 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:52:22,389 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.findBookByNameTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:52:22,389 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,389 DEBUG [TransactionImpl]  - begin
2019-05-03 17:52:22,389 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:52:22,492 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/1671007220@7b44b63d]
2019-05-03 17:52:22,492 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@2617f816]; rollback [false]
2019-05-03 17:52:22,492 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,492 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,493 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,493 DEBUG [SequenceStructure]  - Sequence value obtained: 10
2019-05-03 17:52:22,493 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,494 DEBUG [AbstractSaveEventListener]  - Generated identifier: 10, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,494 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,494 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,494 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:52:22,494 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,494 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,494 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:52:22,494 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,495 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,495 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,495 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,496 DEBUG [SequenceStructure]  - Sequence value obtained: 11
2019-05-03 17:52:22,496 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,497 DEBUG [AbstractSaveEventListener]  - Generated identifier: 11, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,497 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,497 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,497 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:52:22,497 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,497 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,497 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:52:22,497 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:52:22,497 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,498 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,498 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,498 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,498 DEBUG [SequenceStructure]  - Sequence value obtained: 12
2019-05-03 17:52:22,499 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,499 DEBUG [AbstractSaveEventListener]  - Generated identifier: 12, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,499 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,499 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,499 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:52:22,499 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,499 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,499 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:52:22,499 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:52:22,499 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:52:22,499 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,500 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,501 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,501 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,501 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,501 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:52:22,501 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,501 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,502 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:52:22,502 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:52:22,502 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:52:22,502 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_ where book0_.title like ?
2019-05-03 17:52:22,503 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:52:22,503 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:52:22,503 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:52:22,503 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#6]
2019-05-03 17:52:22,503 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:52:22,503 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#9]
2019-05-03 17:52:22,503 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:52:22,503 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#12]
2019-05-03 17:52:22,504 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#3]
2019-05-03 17:52:22,504 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#3]
2019-05-03 17:52:22,504 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#6]
2019-05-03 17:52:22,504 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#6]
2019-05-03 17:52:22,504 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#9]
2019-05-03 17:52:22,504 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#9]
2019-05-03 17:52:22,504 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:52:22,504 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:52:22,504 DEBUG [TransactionImpl]  - committing
2019-05-03 17:52:22,504 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,504 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,504 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2019-05-03 17:52:22,504 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,504 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,504 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:52:22,504 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:52:22,504 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:52:22,504 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:52:22,504 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:52:22,504 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:52:22,505 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:52:22,505 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:52:22,506 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:52:22,506 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:52:22,506 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:22,506 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:52:22,506 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@511d5d04, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:52:22,507 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:52:22,507 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 8, missCount = 1]
2019-05-03 17:52:22,509 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@511d5d04, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:52:22,510 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@511d5d04, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:52:22,510 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:52:22,510 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 9, missCount = 1]
2019-05-03 17:52:22,510 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:52:22,510 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@511d5d04, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:52:22,511 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.addBookTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:52:22,511 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,511 DEBUG [TransactionImpl]  - begin
2019-05-03 17:52:22,511 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:52:22,612 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/1671007220@682c1e93]
2019-05-03 17:52:22,613 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@511d5d04, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@2617f816]; rollback [false]
2019-05-03 17:52:22,613 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,613 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,613 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,614 DEBUG [SequenceStructure]  - Sequence value obtained: 13
2019-05-03 17:52:22,614 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,614 DEBUG [AbstractSaveEventListener]  - Generated identifier: 13, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,614 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,614 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,614 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:52:22,614 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,614 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,614 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:52:22,614 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,615 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#13]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,615 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,615 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,616 DEBUG [SequenceStructure]  - Sequence value obtained: 14
2019-05-03 17:52:22,616 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,616 DEBUG [AbstractSaveEventListener]  - Generated identifier: 14, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,616 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,616 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,616 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:52:22,616 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,616 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,616 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:52:22,616 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=14, title=Opowiadanie}
2019-05-03 17:52:22,616 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,617 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:52:22,617 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:52:22,617 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:52:22,618 DEBUG [SequenceStructure]  - Sequence value obtained: 15
2019-05-03 17:52:22,618 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:52:22,618 DEBUG [AbstractSaveEventListener]  - Generated identifier: 15, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:52:22,618 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,618 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,618 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:52:22,618 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,618 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,618 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:52:22,618 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=14, title=Opowiadanie}
2019-05-03 17:52:22,618 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=15, title=List}
2019-05-03 17:52:22,618 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:52:22,619 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:52:22,619 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:52:22,619 DEBUG [TransactionImpl]  - committing
2019-05-03 17:52:22,619 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:52:22,619 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:52:22,619 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:52:22,619 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:52:22,619 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:52:22,619 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:52:22,619 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=14, title=Opowiadanie}
2019-05-03 17:52:22,620 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=15, title=List}
2019-05-03 17:52:22,620 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:52:22,620 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:52:22,620 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@511d5d04, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:52:22,621 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@511d5d04, testMethod = addBookTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:52:22,621 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:52:22,622 DEBUG [GenericApplicationContext]  - Closing org.springframework.context.support.GenericApplicationContext@711f39f9, started on Fri May 03 17:52:20 CEST 2019
2019-05-03 17:52:22,623 DEBUG [SessionFactoryImpl]  - HHH000031: Closing
2019-05-03 17:52:22,623 DEBUG [AbstractServiceRegistryImpl]  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2019-05-03 17:52:22,623 DEBUG [BootstrapServiceRegistryImpl]  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2019-05-03 17:53:32,486 DEBUG [SpringJUnit4ClassRunner]  - SpringJUnit4ClassRunner constructor called with [class pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:32,494 DEBUG [BootstrapUtils]  - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2019-05-03 17:53:32,501 DEBUG [BootstrapUtils]  - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2019-05-03 17:53:32,510 DEBUG [BootstrapUtils]  - Instantiating TestContextBootstrapper for test class [pl.tau.library.service.LibraryManagerTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2019-05-03 17:53:32,537 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@55f3ddb1 declaringClass = 'pl.tau.library.service.LibraryManagerTest', classes = '{}', locations = '{classpath:/beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2019-05-03 17:53:32,553 DEBUG [ActiveProfilesUtils]  - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:32,554 DEBUG [DefaultTestContextBootstrapper]  - @TestExecutionListeners is not present for class [pl.tau.library.service.LibraryManagerTest]: using defaults.
2019-05-03 17:53:32,554 INFO  [DefaultTestContextBootstrapper]  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-05-03 17:53:32,560 DEBUG [DefaultTestContextBootstrapper]  - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
2019-05-03 17:53:32,571 INFO  [DefaultTestContextBootstrapper]  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c]
2019-05-03 17:53:32,572 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:32,572 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:32,584 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:32,585 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:32,586 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:32,587 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:32,587 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:32,587 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:32,590 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:53:32,591 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:32,592 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:32,593 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:53:32,594 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:53:32,594 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:53:32,630 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:53:32,788 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:53:32,812 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:53:32,812 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@711f39f9
2019-05-03 17:53:32,842 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:53:32,911 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:53:32,953 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:53:32,953 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:53:32,953 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:53:32,953 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:53:32,954 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:53:32,955 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:53:32,955 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:53:32,957 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:53:32,958 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:53:32,960 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:53:32,961 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:53:33,006 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:53:33,044 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:53:33,047 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:53:33,056 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:53:33,057 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:53:33,058 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:53:33,143 DEBUG [logging]  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-05-03 17:53:33,150 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:53:33,151 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:53:33,153 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:53:33,218 INFO  [Version]  - HHH000412: Hibernate Core {5.1.6.Final}
2019-05-03 17:53:33,219 INFO  [Environment]  - HHH000206: hibernate.properties not found
2019-05-03 17:53:33,220 INFO  [Environment]  - HHH000021: Bytecode provider name : javassist
2019-05-03 17:53:33,236 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:53:33,243 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:53:33,243 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:53:33,253 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:53:33,258 INFO  [Version]  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-05-03 17:53:33,299 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:53:33,299 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:53:33,299 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:53:33,300 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:53:33,301 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:53:33,301 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:53:33,302 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:53:33,302 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:53:33,303 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:53:33,304 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:53:33,304 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:53:33,304 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:53:33,306 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:53:33,306 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:53:33,306 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:53:33,307 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:53:33,308 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:53:33,308 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:53:33,309 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:53:33,309 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:53:33,309 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:53:33,310 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:53:33,310 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:53:33,310 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:53:33,311 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:53:33,311 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:53:33,311 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:53:33,315 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:53:33,315 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:53:33,317 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:53:33,317 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:53:33,318 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:53:33,318 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:53:33,318 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:53:33,319 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:53:33,320 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:53:33,320 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:53:33,321 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:53:33,321 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:53:33,322 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:53:33,322 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:53:33,323 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:53:33,323 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:53:33,323 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:53:33,324 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:53:33,324 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:53:33,324 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:53:33,324 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:53:33,325 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:53:33,325 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:53:33,325 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:53:33,326 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:53:33,326 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:53:33,326 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:53:33,326 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:53:33,327 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:53:33,327 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:53:33,328 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:53:33,328 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:53:33,328 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:53:33,329 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:53:33,329 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:53:33,329 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:53:33,330 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:53:33,330 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:53:33,330 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:53:33,331 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:53:33,332 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:53:33,335 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:53:33,336 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:53:33,336 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:53:33,337 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:53:33,337 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:53:33,337 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:53:33,337 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:53:33,338 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:53:33,340 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:53:33,340 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:53:33,341 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:53:33,343 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:53:33,343 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:53:33,346 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:53:33,346 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:53:33,346 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:53:33,347 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:53:33,347 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:53:33,350 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:53:33,350 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:53:33,350 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bec854f
2019-05-03 17:53:33,350 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31edaa7d
2019-05-03 17:53:33,351 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26adfd2d
2019-05-03 17:53:33,351 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336e6b6
2019-05-03 17:53:33,351 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c3fdb62
2019-05-03 17:53:33,351 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205d38da
2019-05-03 17:53:33,351 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6950ed69
2019-05-03 17:53:33,351 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dd7b5a3
2019-05-03 17:53:33,359 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:53:33,503 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:53:33,503 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:53:33,503 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:53:33,511 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:53:33,532 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:53:33,620 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:53:33,620 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:53:33,620 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:53:33,621 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:53:33,621 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:53:33,622 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:53:33,622 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:53:33,623 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:53:33,624 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:53:33,624 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:53:33,625 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:53:33,625 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:53:33,625 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:53:33,626 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:53:33,673 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:53:33,690 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:53:33,700 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:53:33,700 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where b.title like :modelNameFragment
2019-05-03 17:53:33,706 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:53:33,710 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:53:33,712 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:53:33,727 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:53:33,729 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:53:33,730 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:53:33,731 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:53:33,732 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:53:33,734 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:53:33,734 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:53:33,734 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:53:33,734 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:53:33,734 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:53:33,734 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:53:33,735 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:53:33,735 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:53:33,735 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:53:33,735 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:53:33,735 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:53:33,736 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:53:33,736 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:53:33,737 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:53:33,766 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:53:33,768 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:53:33,768 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:53:33,768 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:53:33,768 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:53:33,768 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:53:33,768 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:53:33,768 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:53:33,768 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:53:33,768 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:53:33,768 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:53:33,768 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:53:33,768 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:53:33,768 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:53:33,768 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:53:33,768 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:53:33,768 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:53:33,768 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:53:33,769 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:53:33,769 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:53:33,769 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:53:33,769 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:53:33,769 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:53:33,769 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:53:33,769 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:53:33,769 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:53:33,769 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:53:33,769 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:53:33,769 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:53:33,769 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:53:33,769 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:53:33,769 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:53:33,769 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:53:33,769 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:53:33,769 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:53:33,769 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:53:33,797 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:53:33,797 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4264b240, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:53:33,804 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:53:33,824 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:53:33,824 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:53:33,833 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:53:33,833 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:53:33,873 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:53:33,873 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:53:33,873 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:53:33,873 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:53:33,873 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:53:33,873 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:53:33,891 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ed0ff3]
2019-05-03 17:53:33,892 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:53:33,892 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:53:33,892 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:53:33,902 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:53:33,905 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:53:33,906 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:53:33,906 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7f2382]
2019-05-03 17:53:33,906 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:53:33,906 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:53:33,906 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:53:33,907 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:53:33,907 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:53:33,907 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:53:33,907 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6815c5f2]
2019-05-03 17:53:33,907 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:53:33,907 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:53:33,907 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:53:33,907 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:53:33,907 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:53:33,907 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:53:33,907 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60094a13]
2019-05-03 17:53:33,907 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:53:33,907 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:53:33,907 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:53:33,907 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:53:33,908 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:53:33,908 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:53:33,908 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c32886a]
2019-05-03 17:53:33,908 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:53:33,908 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:53:33,908 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:53:33,908 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:53:33,908 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:53:33,908 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:53:33,908 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b892d5]
2019-05-03 17:53:33,908 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:53:33,908 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:53:33,908 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:53:33,908 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:53:33,908 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:53:33,908 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:53:33,908 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3546d80f]
2019-05-03 17:53:33,908 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:53:33,908 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:53:33,908 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:53:33,908 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:53:33,909 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:53:33,909 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:53:33,909 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3670f00]
2019-05-03 17:53:33,909 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:53:33,909 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:53:33,909 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:53:33,909 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:53:33,909 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:53:33,909 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:53:33,909 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ab18da]
2019-05-03 17:53:33,909 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:53:33,909 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:53:33,909 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:53:33,909 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:53:33,909 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:53:33,909 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:53:33,909 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42257bdd]
2019-05-03 17:53:33,909 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:53:33,909 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:53:33,909 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:53:33,910 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:53:33,910 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:53:33,910 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:53:33,910 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687a762c]
2019-05-03 17:53:33,910 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:53:33,910 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:53:33,910 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:53:33,910 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:53:33,910 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:53:33,910 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:53:33,920 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:53:33,921 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:53:33,921 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:53:33,935 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:53:34,048 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:53:34,050 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:53:34,050 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:53:34,052 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:53:34,053 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:53:34,053 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:53:34,056 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:53:34,056 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:53:34,078 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where b.title like :modelNameFragment
2019-05-03 17:53:34,083 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'b'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:53:34,083 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:53:34,098 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:53:34,108 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:53:34,109 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:53:34,111 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:53:34,112 DEBUG [DotNode]  - getDataType() : title -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:53:34,112 DEBUG [FromReferenceNode]  - Resolved : b.title -> book0_.title
2019-05-03 17:53:34,113 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:53:34,114 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where ( like ( book0_.title book0_.id title ) ? ) ) )
2019-05-03 17:53:34,119 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:53:34,119 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:53:34,119 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=b.title,tableAlias=book0_,className=pl.tau.library.domain.Book,classAlias=b}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=modelNameFragment, expectedType=org.hibernate.type.StringType@41330d4f}

2019-05-03 17:53:34,119 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:53:34,124 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b where b.title like :modelNameFragment
2019-05-03 17:53:34,124 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_ where book0_.title like ?
2019-05-03 17:53:34,124 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:53:34,128 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:53:34,128 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:53:34,129 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:53:34,129 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:53:34,129 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:53:34,129 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:53:34,129 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:53:34,129 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:53:34,129 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:53:34,129 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:53:34,129 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:53:34,129 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:53:34,129 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:53:34,129 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:53:34,129 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:53:34,129 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:53:34,129 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:53:34,131 DEBUG [SessionFactoryRegistry]  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5bbbdd4b
2019-05-03 17:53:34,131 DEBUG [SessionFactoryRegistry]  - Registering SessionFactory: a26709b7-17b1-48c7-a799-142b0f353b13 (<unnamed>)
2019-05-03 17:53:34,131 DEBUG [SessionFactoryRegistry]  - Not binding SessionFactory to JNDI, no JNDI name configured
2019-05-03 17:53:34,146 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2019-05-03 17:53:34,154 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'txManager'
2019-05-03 17:53:34,169 DEBUG [HibernateTransactionManager]  - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5] of Hibernate SessionFactory for HibernateTransactionManager
2019-05-03 17:53:34,179 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Storing ApplicationContext in cache under key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:53:34,179 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]
2019-05-03 17:53:34,182 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:53:34,184 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:53:34,184 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:53:34,184 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]
2019-05-03 17:53:34,187 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:53:34,187 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:53:34,192 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.deletePhoneTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:53:34,222 DEBUG [StatisticsInitiator]  - Statistics initialized [enabled=false]
2019-05-03 17:53:34,223 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,224 DEBUG [TransactionImpl]  - begin
2019-05-03 17:53:34,224 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:53:34,328 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@5f5b5ca4]
2019-05-03 17:53:34,328 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:53:34,333 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,333 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,336 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:53:34,341 DEBUG [SequenceStructure]  - Sequence value obtained: 16
2019-05-03 17:53:34,341 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:53:34,342 DEBUG [AbstractSaveEventListener]  - Generated identifier: 16, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:53:34,354 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,354 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,355 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:53:34,355 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,356 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,356 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=16, title=Wiedzmin}
2019-05-03 17:53:34,360 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:53:34,364 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#16]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,364 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,364 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:53:34,364 DEBUG [SequenceStructure]  - Sequence value obtained: 17
2019-05-03 17:53:34,365 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:53:34,365 DEBUG [AbstractSaveEventListener]  - Generated identifier: 17, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:53:34,365 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,365 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,365 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:53:34,365 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,365 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,365 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=16, title=Wiedzmin}
2019-05-03 17:53:34,365 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=17, title=Opowiadanie}
2019-05-03 17:53:34,365 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:53:34,366 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#16], EntityKey[pl.tau.library.domain.Book#17]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,366 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,366 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:53:34,367 DEBUG [SequenceStructure]  - Sequence value obtained: 18
2019-05-03 17:53:34,367 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:53:34,367 DEBUG [AbstractSaveEventListener]  - Generated identifier: 18, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:53:34,367 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,367 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,368 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:53:34,368 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,368 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,368 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=16, title=Wiedzmin}
2019-05-03 17:53:34,368 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=17, title=Opowiadanie}
2019-05-03 17:53:34,368 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=18, title=List}
2019-05-03 17:53:34,368 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:53:34,369 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#16], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,369 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,373 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,373 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,373 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:53:34,373 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,373 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,373 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=16, title=Wiedzmin}
2019-05-03 17:53:34,374 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=17, title=Opowiadanie}
2019-05-03 17:53:34,374 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=18, title=List}
2019-05-03 17:53:34,375 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:53:34,377 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:53:34,378 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#2]
2019-05-03 17:53:34,379 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:53:34,379 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:53:34,379 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:53:34,379 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#4]
2019-05-03 17:53:34,379 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:53:34,379 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#5]
2019-05-03 17:53:34,379 DEBUG [Loader]  - Result set row: 4
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#6]
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result set row: 5
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#7]
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result set row: 6
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#8]
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result set row: 7
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#9]
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result set row: 8
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#10]
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result set row: 9
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#11]
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result set row: 10
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#12]
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result set row: 11
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#13]
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result set row: 12
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#14]
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result set row: 13
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#15]
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result set row: 14
2019-05-03 17:53:34,380 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#16]
2019-05-03 17:53:34,382 DEBUG [Loader]  - Result set row: 15
2019-05-03 17:53:34,382 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#17]
2019-05-03 17:53:34,382 DEBUG [Loader]  - Result set row: 16
2019-05-03 17:53:34,382 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#18]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#2]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#2]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#3]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#3]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#4]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#4]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#5]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#5]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#6]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#6]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#7]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#7]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#8]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#8]
2019-05-03 17:53:34,383 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#9]
2019-05-03 17:53:34,384 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#9]
2019-05-03 17:53:34,384 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#10]
2019-05-03 17:53:34,384 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#10]
2019-05-03 17:53:34,384 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#11]
2019-05-03 17:53:34,385 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#11]
2019-05-03 17:53:34,385 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#12]
2019-05-03 17:53:34,385 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#12]
2019-05-03 17:53:34,385 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#13]
2019-05-03 17:53:34,385 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#13]
2019-05-03 17:53:34,385 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#14]
2019-05-03 17:53:34,385 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#14]
2019-05-03 17:53:34,385 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#15]
2019-05-03 17:53:34,385 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#15]
2019-05-03 17:53:34,388 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#16], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,388 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,390 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#16], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,390 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,391 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#16], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,392 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,392 DEBUG [DefaultLoadEventListener]  - Load request found matching entity in context, but it is scheduled for removal; returning null
2019-05-03 17:53:34,392 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#16], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,392 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,392 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,392 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,392 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 1 deletions to 17 objects
2019-05-03 17:53:34,392 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=14, title=Opowiadanie}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=15, title=List}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=16, title=Wiedzmin}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=17, title=Opowiadanie}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=18, title=List}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:53:34,392 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:53:34,393 DEBUG [ActionQueue]  - Changes must be flushed to space: Book
2019-05-03 17:53:34,393 DEBUG [SQL]  - delete from Book where id=?
2019-05-03 17:53:34,394 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#2]
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#4]
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#5]
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result set row: 4
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#6]
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result set row: 5
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#7]
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result set row: 6
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#8]
2019-05-03 17:53:34,395 DEBUG [Loader]  - Result set row: 7
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#9]
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result set row: 8
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#10]
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result set row: 9
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#11]
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result set row: 10
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#12]
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result set row: 11
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#13]
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result set row: 12
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#14]
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result set row: 13
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#15]
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result set row: 14
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#17]
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result set row: 15
2019-05-03 17:53:34,396 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#18]
2019-05-03 17:53:34,397 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:53:34,397 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:53:34,397 DEBUG [TransactionImpl]  - committing
2019-05-03 17:53:34,398 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,398 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,398 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 16 objects
2019-05-03 17:53:34,398 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=14, title=Opowiadanie}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=15, title=List}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=17, title=Opowiadanie}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=18, title=List}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=List}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:53:34,398 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=10, title=Wiedzmin}
2019-05-03 17:53:34,400 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:53:34,400 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:53:34,401 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:53:34,402 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:53:34,402 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:34,402 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:34,402 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:53:34,402 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:53:34,402 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]
2019-05-03 17:53:34,403 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:53:34,404 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:53:34,404 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:53:34,404 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]
2019-05-03 17:53:34,404 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:53:34,404 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:53:34,405 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.updatePhoneTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:53:34,405 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,405 DEBUG [TransactionImpl]  - begin
2019-05-03 17:53:34,405 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:53:34,506 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@43b0ade]
2019-05-03 17:53:34,507 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:53:34,507 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,507 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,507 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:53:34,508 DEBUG [SequenceStructure]  - Sequence value obtained: 19
2019-05-03 17:53:34,508 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:53:34,508 DEBUG [AbstractSaveEventListener]  - Generated identifier: 19, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:53:34,508 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,508 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,508 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:53:34,508 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,508 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,508 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=19, title=Wiedzmin}
2019-05-03 17:53:34,508 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:53:34,510 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,510 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,510 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:53:34,511 DEBUG [SequenceStructure]  - Sequence value obtained: 20
2019-05-03 17:53:34,511 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:53:34,511 DEBUG [AbstractSaveEventListener]  - Generated identifier: 20, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:53:34,511 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,511 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,511 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:53:34,511 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,511 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,511 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=19, title=Wiedzmin}
2019-05-03 17:53:34,511 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=20, title=Opowiadanie}
2019-05-03 17:53:34,511 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:53:34,512 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#20]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,512 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,512 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:53:34,513 DEBUG [SequenceStructure]  - Sequence value obtained: 21
2019-05-03 17:53:34,513 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:53:34,513 DEBUG [AbstractSaveEventListener]  - Generated identifier: 21, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:53:34,513 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,513 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,513 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:53:34,513 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,513 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,513 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=19, title=Wiedzmin}
2019-05-03 17:53:34,513 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=20, title=Opowiadanie}
2019-05-03 17:53:34,513 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=21, title=List}
2019-05-03 17:53:34,513 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:53:34,514 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,515 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,515 DEBUG [SQL]  - select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:53:34,517 DEBUG [ResultSetProcessorImpl]  - Starting ResultSet row #0
2019-05-03 17:53:34,518 DEBUG [EntityReferenceInitializerImpl]  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2019-05-03 17:53:34,518 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#3]
2019-05-03 17:53:34,519 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#3]
2019-05-03 17:53:34,519 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:53:34,519 DEBUG [AbstractLoadPlanBasedEntityLoader]  - Done entity load : pl.tau.library.domain.Book#3
2019-05-03 17:53:34,520 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,520 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,521 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,521 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,521 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:53:34,521 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:53:34,521 DEBUG [TransactionImpl]  - committing
2019-05-03 17:53:34,521 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,521 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,522 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2019-05-03 17:53:34,522 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,522 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,522 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=19, title=Wiedzmin}
2019-05-03 17:53:34,522 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=Fraszka}
2019-05-03 17:53:34,522 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=20, title=Opowiadanie}
2019-05-03 17:53:34,522 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=21, title=List}
2019-05-03 17:53:34,522 DEBUG [SQL]  - update Book set title=?, year=? where id=?
2019-05-03 17:53:34,524 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:53:34,524 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:53:34,524 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:53:34,525 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4463d9d3, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:53:34,525 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:34,525 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:34,525 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:53:34,525 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:53:34,525 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1]
2019-05-03 17:53:34,526 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:53:34,527 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:53:34,527 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:53:34,527 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1]
2019-05-03 17:53:34,527 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:53:34,527 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:53:34,527 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.getAllBooksTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:53:34,527 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,527 DEBUG [TransactionImpl]  - begin
2019-05-03 17:53:34,527 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:53:34,630 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@7b44b63d]
2019-05-03 17:53:34,630 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:53:34,630 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,630 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,630 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:53:34,631 DEBUG [SequenceStructure]  - Sequence value obtained: 22
2019-05-03 17:53:34,631 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:53:34,631 DEBUG [AbstractSaveEventListener]  - Generated identifier: 22, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:53:34,631 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,631 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,631 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:53:34,632 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,632 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,632 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=22, title=Wiedzmin}
2019-05-03 17:53:34,632 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:53:34,633 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#22]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,633 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,633 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:53:34,634 DEBUG [SequenceStructure]  - Sequence value obtained: 23
2019-05-03 17:53:34,634 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:53:34,634 DEBUG [AbstractSaveEventListener]  - Generated identifier: 23, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:53:34,634 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,634 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,634 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:53:34,634 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,634 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,634 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=22, title=Wiedzmin}
2019-05-03 17:53:34,634 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=23, title=Opowiadanie}
2019-05-03 17:53:34,634 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:53:34,635 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#22], EntityKey[pl.tau.library.domain.Book#23]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,635 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,635 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:53:34,636 DEBUG [SequenceStructure]  - Sequence value obtained: 24
2019-05-03 17:53:34,636 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:53:34,636 DEBUG [AbstractSaveEventListener]  - Generated identifier: 24, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:53:34,636 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,636 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,636 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:53:34,636 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,636 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,636 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=22, title=Wiedzmin}
2019-05-03 17:53:34,636 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=23, title=Opowiadanie}
2019-05-03 17:53:34,636 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=24, title=List}
2019-05-03 17:53:34,636 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:53:34,637 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#22], EntityKey[pl.tau.library.domain.Book#23], EntityKey[pl.tau.library.domain.Book#24]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,637 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,637 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,637 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,637 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:53:34,637 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,637 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,638 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=22, title=Wiedzmin}
2019-05-03 17:53:34,638 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=23, title=Opowiadanie}
2019-05-03 17:53:34,638 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=24, title=List}
2019-05-03 17:53:34,638 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#2]
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#3]
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#4]
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#5]
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result set row: 4
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#6]
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result set row: 5
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#7]
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result set row: 6
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#8]
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result set row: 7
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#9]
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result set row: 8
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#10]
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result set row: 9
2019-05-03 17:53:34,639 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#11]
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result set row: 10
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#12]
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result set row: 11
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#13]
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result set row: 12
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#14]
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result set row: 13
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#15]
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result set row: 14
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#17]
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result set row: 15
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#18]
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result set row: 16
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#19]
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result set row: 17
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#20]
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result set row: 18
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#21]
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result set row: 19
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#22]
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result set row: 20
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#23]
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result set row: 21
2019-05-03 17:53:34,640 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#24]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#2]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#2]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#3]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#3]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#4]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#4]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#5]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#5]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#6]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#6]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#7]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#7]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#8]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#8]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#9]
2019-05-03 17:53:34,640 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#9]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#10]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#10]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#11]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#11]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#12]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#12]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#13]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#13]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#14]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#14]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#15]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#15]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#17]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#17]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#18]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#18]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#19]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#19]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#20]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#20]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#21]
2019-05-03 17:53:34,641 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#21]
2019-05-03 17:53:34,641 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:53:34,641 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21], EntityKey[pl.tau.library.domain.Book#22], EntityKey[pl.tau.library.domain.Book#23], EntityKey[pl.tau.library.domain.Book#24], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:53:34,641 DEBUG [TransactionImpl]  - committing
2019-05-03 17:53:34,641 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,642 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,642 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 22 objects
2019-05-03 17:53:34,642 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=11, title=Opowiadanie}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=13, title=Wiedzmin}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=14, title=Opowiadanie}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=15, title=List}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=17, title=Opowiadanie}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=18, title=List}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=19, title=Wiedzmin}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=20, title=Opowiadanie}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=21, title=List}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=22, title=Wiedzmin}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=23, title=Opowiadanie}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=24, title=List}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=2, title=Opowiadanie}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=3, title=Fraszka}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=4, title=Wiedzmin}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=5, title=Opowiadanie}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=7, title=Wiedzmin}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=8, title=Opowiadanie}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:53:34,642 DEBUG [EntityPrinter]  - More......
2019-05-03 17:53:34,643 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#11], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#13], EntityKey[pl.tau.library.domain.Book#14], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#17], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#19], EntityKey[pl.tau.library.domain.Book#20], EntityKey[pl.tau.library.domain.Book#21], EntityKey[pl.tau.library.domain.Book#22], EntityKey[pl.tau.library.domain.Book#23], EntityKey[pl.tau.library.domain.Book#24], EntityKey[pl.tau.library.domain.Book#2], EntityKey[pl.tau.library.domain.Book#3], EntityKey[pl.tau.library.domain.Book#4], EntityKey[pl.tau.library.domain.Book#5], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#7], EntityKey[pl.tau.library.domain.Book#8], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:53:34,643 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:53:34,643 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:53:34,643 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@c3fa05a, testMethod = getAllBooksTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:53:34,644 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:34,644 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:34,644 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@3e9803c2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:53:34,644 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:53:34,644 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 6, missCount = 1]
2019-05-03 17:53:34,645 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@3e9803c2, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:53:34,646 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@3e9803c2, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:53:34,646 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:53:34,646 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@2d691f3d size = 1, maxSize = 32, parentContextCount = 0, hitCount = 7, missCount = 1]
2019-05-03 17:53:34,646 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:53:34,646 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@3e9803c2, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:53:34,646 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.findBookByNameTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:53:34,646 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,646 DEBUG [TransactionImpl]  - begin
2019-05-03 17:53:34,646 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:53:34,749 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/778806426@4525d1d3]
2019-05-03 17:53:34,749 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@3e9803c2, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@a53bb6f]; rollback [false]
2019-05-03 17:53:34,749 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,749 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,749 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:53:34,750 DEBUG [SequenceStructure]  - Sequence value obtained: 25
2019-05-03 17:53:34,750 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:53:34,750 DEBUG [AbstractSaveEventListener]  - Generated identifier: 25, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:53:34,750 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,750 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,751 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:53:34,751 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,751 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,751 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=25, title=Wiedzmin}
2019-05-03 17:53:34,751 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:53:34,752 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#25]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,752 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,752 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:53:34,752 DEBUG [SequenceStructure]  - Sequence value obtained: 26
2019-05-03 17:53:34,752 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:53:34,752 DEBUG [AbstractSaveEventListener]  - Generated identifier: 26, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:53:34,753 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,753 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,753 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:53:34,753 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,753 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,753 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=25, title=Wiedzmin}
2019-05-03 17:53:34,753 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=26, title=Opowiadanie}
2019-05-03 17:53:34,753 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:53:34,754 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#25], EntityKey[pl.tau.library.domain.Book#26]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,754 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,754 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:53:34,755 DEBUG [SequenceStructure]  - Sequence value obtained: 27
2019-05-03 17:53:34,755 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:53:34,755 DEBUG [AbstractSaveEventListener]  - Generated identifier: 27, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:53:34,755 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,755 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,755 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:53:34,755 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,755 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,755 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=27, title=List}
2019-05-03 17:53:34,755 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=25, title=Wiedzmin}
2019-05-03 17:53:34,755 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=26, title=Opowiadanie}
2019-05-03 17:53:34,755 DEBUG [SQL]  - insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:53:34,756 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#27], EntityKey[pl.tau.library.domain.Book#25], EntityKey[pl.tau.library.domain.Book#26]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:53:34,756 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:53:34,757 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,757 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,757 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:53:34,757 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,757 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,757 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=27, title=List}
2019-05-03 17:53:34,757 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=25, title=Wiedzmin}
2019-05-03 17:53:34,757 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=26, title=Opowiadanie}
2019-05-03 17:53:34,757 DEBUG [SQL]  - select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_ where book0_.title like ?
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#6]
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#9]
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#12]
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#15]
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result set row: 4
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#18]
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result set row: 5
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#21]
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result set row: 6
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#24]
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result set row: 7
2019-05-03 17:53:34,759 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Book#27]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#6]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#6]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#9]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#9]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#12]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#12]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#15]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#15]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#18]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#18]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#21]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#21]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Book#24]
2019-05-03 17:53:34,760 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Book#24]
2019-05-03 17:53:34,760 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:53:34,761 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#27], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#21], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#24], EntityKey[pl.tau.library.domain.Book#25], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#26]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:53:34,761 DEBUG [TransactionImpl]  - committing
2019-05-03 17:53:34,761 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:53:34,761 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:53:34,761 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 10 objects
2019-05-03 17:53:34,761 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:53:34,761 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:53:34,761 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=27, title=List}
2019-05-03 17:53:34,761 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=12, title=List}
2019-05-03 17:53:34,761 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=15, title=List}
2019-05-03 17:53:34,761 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=18, title=List}
2019-05-03 17:53:34,761 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=21, title=List}
2019-05-03 17:53:34,761 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=6, title=List}
2019-05-03 17:53:34,761 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=24, title=List}
2019-05-03 17:53:34,761 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2005, id=25, title=Wiedzmin}
2019-05-03 17:53:34,761 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2015, id=9, title=List}
2019-05-03 17:53:34,761 DEBUG [EntityPrinter]  - pl.tau.library.domain.Book{year=2010, id=26, title=Opowiadanie}
2019-05-03 17:53:34,762 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Book#27], EntityKey[pl.tau.library.domain.Book#12], EntityKey[pl.tau.library.domain.Book#15], EntityKey[pl.tau.library.domain.Book#18], EntityKey[pl.tau.library.domain.Book#21], EntityKey[pl.tau.library.domain.Book#6], EntityKey[pl.tau.library.domain.Book#24], EntityKey[pl.tau.library.domain.Book#25], EntityKey[pl.tau.library.domain.Book#9], EntityKey[pl.tau.library.domain.Book#26]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:53:34,762 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:53:34,762 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@3e9803c2, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:53:34,762 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@3e9803c2, testMethod = findBookByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:53:34,762 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:34,762 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:53:34,762 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7c28c1, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
