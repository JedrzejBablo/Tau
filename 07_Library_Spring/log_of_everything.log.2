2019-05-03 17:12:25,664 DEBUG [SpringJUnit4ClassRunner]  - SpringJUnit4ClassRunner constructor called with [class pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:25,677 DEBUG [BootstrapUtils]  - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2019-05-03 17:12:25,688 DEBUG [BootstrapUtils]  - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2019-05-03 17:12:25,701 DEBUG [BootstrapUtils]  - Instantiating TestContextBootstrapper for test class [pl.tau.library.service.LibraryManagerTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2019-05-03 17:12:25,728 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@55f3ddb1 declaringClass = 'pl.tau.library.service.LibraryManagerTest', classes = '{}', locations = '{classpath:/beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2019-05-03 17:12:25,746 DEBUG [ActiveProfilesUtils]  - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:25,747 DEBUG [DefaultTestContextBootstrapper]  - @TestExecutionListeners is not present for class [pl.tau.library.service.LibraryManagerTest]: using defaults.
2019-05-03 17:12:25,747 INFO  [DefaultTestContextBootstrapper]  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-05-03 17:12:25,751 DEBUG [DefaultTestContextBootstrapper]  - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
2019-05-03 17:12:25,757 INFO  [DefaultTestContextBootstrapper]  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c]
2019-05-03 17:12:25,758 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:25,759 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:25,773 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:25,773 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:25,774 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:25,774 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:25,775 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:25,775 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:25,776 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:12:25,777 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:25,777 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:25,778 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:12:25,779 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:12:25,779 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:12:25,813 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:12:26,055 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\phoneapp\service\PhoneManagerHibernateImpl.class]
2019-05-03 17:12:26,085 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:12:26,085 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@711f39f9
2019-05-03 17:12:26,137 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:12:26,187 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:12:26,209 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:26,210 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:26,210 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:26,210 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:26,210 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:12:26,211 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:12:26,211 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:12:26,213 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:12:26,214 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:12:26,221 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:12:26,221 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:12:26,244 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'phoneManagerHibernateImpl'
2019-05-03 17:12:26,275 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:12:26,303 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:12:26,318 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:12:26,319 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:12:26,320 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:12:26,379 DEBUG [logging]  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-05-03 17:12:26,389 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:12:26,390 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:12:26,393 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:12:26,445 INFO  [Version]  - HHH000412: Hibernate Core {5.1.6.Final}
2019-05-03 17:12:26,446 INFO  [Environment]  - HHH000206: hibernate.properties not found
2019-05-03 17:12:26,447 INFO  [Environment]  - HHH000021: Bytecode provider name : javassist
2019-05-03 17:12:26,457 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:12:26,462 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:12:26,462 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:12:26,471 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:12:26,476 INFO  [Version]  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-05-03 17:12:26,489 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:26,489 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:26,489 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:26,489 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:12:26,490 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:12:26,490 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:12:26,491 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:26,491 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:26,491 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:26,492 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:26,492 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:26,492 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:26,493 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:26,493 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:26,493 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:26,493 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:26,493 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:26,493 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:26,494 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:26,494 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:26,494 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:26,495 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:26,495 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:26,495 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:26,496 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:26,496 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:26,496 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:26,497 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:12:26,497 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:12:26,497 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:12:26,498 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:12:26,498 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:12:26,498 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:12:26,499 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:12:26,499 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:12:26,500 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:12:26,500 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:12:26,503 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:12:26,503 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:12:26,504 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:12:26,504 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:12:26,505 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:26,505 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:26,505 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:26,506 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:12:26,506 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:26,506 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:26,506 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:26,507 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:12:26,507 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:12:26,507 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:12:26,508 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:12:26,508 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:12:26,508 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:12:26,508 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:12:26,509 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:12:26,509 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:12:26,510 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:12:26,510 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:12:26,510 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:12:26,511 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:26,511 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:26,511 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:26,511 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:26,511 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:26,511 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:26,512 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:12:26,512 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:12:26,513 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:26,513 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:26,513 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:26,514 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:26,514 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:26,514 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:26,514 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:12:26,515 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:12:26,517 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:12:26,517 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:12:26,518 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:12:26,520 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:12:26,520 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:12:26,522 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:12:26,522 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:12:26,522 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:12:26,522 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:12:26,523 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:12:26,525 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:12:26,525 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:12:26,525 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bec854f
2019-05-03 17:12:26,525 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31edaa7d
2019-05-03 17:12:26,525 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26adfd2d
2019-05-03 17:12:26,525 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336e6b6
2019-05-03 17:12:26,525 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c3fdb62
2019-05-03 17:12:26,525 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205d38da
2019-05-03 17:12:26,525 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6950ed69
2019-05-03 17:12:26,525 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dd7b5a3
2019-05-03 17:12:26,533 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:12:27,590 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : java.net.ConnectException: Connection refused: connect
2019-05-03 17:12:27,600 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:12:27,613 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:12:27,617 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:12:27,695 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:12:27,695 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:12:27,695 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:12:27,696 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:12:27,696 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:12:27,696 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:12:27,697 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:12:27,697 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:12:27,698 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:12:27,699 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:12:27,699 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:12:27,699 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:12:27,699 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:12:27,700 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:12:27,719 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:12:27,765 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Phone
2019-05-03 17:12:27,775 DEBUG [QueryBinder]  - Binding named query: phone.all => Select p from Phone p
2019-05-03 17:12:27,775 DEBUG [QueryBinder]  - Binding named query: phone.findPhone => Select c from Phone c where c.model like :modelNameFragment
2019-05-03 17:12:27,781 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:12:27,785 DEBUG [EntityBinder]  - Import with entity name Phone
2019-05-03 17:12:27,787 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Phone on table phone
2019-05-03 17:12:27,801 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:27,804 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:12:27,805 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:id]
2019-05-03 17:12:27,806 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:12:27,807 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:12:27,810 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=model, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:27,810 DEBUG [PropertyBinder]  - MetadataSourceProcessor property model with lazy=false
2019-05-03 17:12:27,810 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:model]
2019-05-03 17:12:27,810 DEBUG [SimpleValueBinder]  - building SimpleValue for model
2019-05-03 17:12:27,810 DEBUG [PropertyBinder]  - Building property model
2019-05-03 17:12:27,810 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=serialNumber, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:27,810 DEBUG [PropertyBinder]  - MetadataSourceProcessor property serialNumber with lazy=false
2019-05-03 17:12:27,810 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:serialNumber]
2019-05-03 17:12:27,810 DEBUG [SimpleValueBinder]  - building SimpleValue for serialNumber
2019-05-03 17:12:27,810 DEBUG [PropertyBinder]  - Building property serialNumber
2019-05-03 17:12:27,811 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:12:27,811 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for model
2019-05-03 17:12:27,811 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for serialNumber
2019-05-03 17:12:27,812 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [phone]
2019-05-03 17:12:27,835 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:12:27,835 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:12:27,835 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:12:27,835 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:12:27,835 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:12:27,835 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:12:27,835 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:12:27,835 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:12:27,836 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:12:27,836 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:12:27,836 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:12:27,836 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:12:27,836 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:12:27,836 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4212a0c8
2019-05-03 17:12:27,836 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:12:27,836 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:12:27,836 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:12:27,836 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:12:27,837 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:12:27,837 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:12:27,865 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:12:27,865 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3f053c80, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:12:27,871 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:12:27,891 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Phone] is safe
2019-05-03 17:12:27,891 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Phone
2019-05-03 17:12:27,900 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Phone] is safe
2019-05-03 17:12:27,900 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Phone
2019-05-03 17:12:27,941 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Phone
2019-05-03 17:12:27,941 DEBUG [AbstractEntityPersister]  -  Version select: select id from phone where id =?
2019-05-03 17:12:27,941 DEBUG [AbstractEntityPersister]  -  Snapshot select: select phone_.id, phone_.model as model2_0_, phone_.serialNumber as serialNu3_0_ from phone phone_ where phone_.id=?
2019-05-03 17:12:27,941 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:12:27,941 DEBUG [AbstractEntityPersister]  -  Update 0: update phone set model=?, serialNumber=? where id=?
2019-05-03 17:12:27,941 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from phone where id=?
2019-05-03 17:12:27,957 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47428937]
2019-05-03 17:12:27,958 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:27,958 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:27,958 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:27,969 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:27,972 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:27,973 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [NONE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:27,973 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@551a20d6]
2019-05-03 17:12:27,973 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:27,973 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:27,973 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:27,973 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:27,973 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:27,973 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [READ]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:27,973 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64c2b546]
2019-05-03 17:12:27,973 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:27,973 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:27,973 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:27,973 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:27,974 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:27,974 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:27,974 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a11c4c7]
2019-05-03 17:12:27,974 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:27,974 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:27,974 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:27,974 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:27,974 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:27,974 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE_NOWAIT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:27,974 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7555b920]
2019-05-03 17:12:27,974 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:27,974 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:27,974 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:27,974 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:27,974 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:27,974 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE_SKIPLOCKED]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:27,974 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3591009c]
2019-05-03 17:12:27,974 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:27,974 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:27,975 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:27,975 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:27,975 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:27,975 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [FORCE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:27,975 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5cc23a]
2019-05-03 17:12:27,975 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:27,975 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:27,975 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:27,975 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:27,975 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:27,975 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_READ]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:27,975 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61edc883]
2019-05-03 17:12:27,975 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:27,975 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:27,975 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:27,975 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:27,975 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:27,975 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_WRITE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:27,975 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@182f1e9a]
2019-05-03 17:12:27,976 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:27,976 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:27,976 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:27,976 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:27,976 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:27,976 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:27,976 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@660e9100]
2019-05-03 17:12:27,976 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:27,976 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:27,976 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:27,976 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:27,976 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:27,976 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [OPTIMISTIC]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:27,976 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9cd25ff]
2019-05-03 17:12:27,976 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:27,976 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:27,976 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:27,977 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:27,977 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:27,977 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [OPTIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:27,988 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Phone: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:27,988 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Phone: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:27,988 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:12:28,002 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:12:29,004 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.ClientConnection.openConnection(Unknown Source)
	at org.hsqldb.ClientConnection.initConnection(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:211)
	at org.hsqldb.server.HsqlSocketFactory.createSocket(Unknown Source)
	... 83 more
2019-05-03 17:12:29,007 WARN  [SqlExceptionHelper]  - SQL Error: -1301, SQLState: 08001
2019-05-03 17:12:29,007 ERROR [SqlExceptionHelper]  - java.net.ConnectException: Connection refused: connect
2019-05-03 17:12:29,008 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'phoneManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:12:29,010 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@5b87ed94]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'phoneManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.ClientConnection.openConnection(Unknown Source)
	at org.hsqldb.ClientConnection.initConnection(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:211)
	at org.hsqldb.server.HsqlSocketFactory.createSocket(Unknown Source)
	... 83 more
2019-05-03 17:12:29,016 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:29,016 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:29,016 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@2555fff0, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:12:29,016 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:12:29,016 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:12:29,016 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:12:29,042 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\phoneapp\service\PhoneManagerHibernateImpl.class]
2019-05-03 17:12:29,043 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:12:29,043 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@70d2e40b
2019-05-03 17:12:29,044 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:12:29,049 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:12:29,050 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:29,050 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:29,050 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:29,050 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:29,050 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:12:29,051 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:12:29,051 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:12:29,051 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:12:29,051 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:12:29,051 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:12:29,052 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:12:29,053 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'phoneManagerHibernateImpl'
2019-05-03 17:12:29,054 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:12:29,054 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:12:29,055 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:12:29,056 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:12:29,056 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:12:29,059 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:12:29,059 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:12:29,059 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:12:29,062 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:12:29,062 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:12:29,062 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:12:29,062 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:12:29,062 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:29,062 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:29,065 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:29,065 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:12:29,065 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:12:29,065 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:12:29,066 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:29,066 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:29,066 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:29,066 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:29,066 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:29,066 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:29,066 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:29,066 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:12:29,073 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:12:29,074 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:12:29,079 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20312893
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@70eecdc2
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c41709a
2019-05-03 17:12:29,080 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7db0565c
2019-05-03 17:12:29,081 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@54ec8cc9
2019-05-03 17:12:29,081 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@52eacb4b
2019-05-03 17:12:29,081 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5528a42c
2019-05-03 17:12:29,081 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a551a63
2019-05-03 17:12:29,081 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:12:30,082 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : java.net.ConnectException: Connection refused: connect
2019-05-03 17:12:30,082 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:12:30,083 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:12:30,083 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:12:30,083 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:12:30,083 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:12:30,083 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Phone
2019-05-03 17:12:30,083 DEBUG [QueryBinder]  - Binding named query: phone.all => Select p from Phone p
2019-05-03 17:12:30,083 DEBUG [QueryBinder]  - Binding named query: phone.findPhone => Select c from Phone c where c.model like :modelNameFragment
2019-05-03 17:12:30,084 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:12:30,084 DEBUG [EntityBinder]  - Import with entity name Phone
2019-05-03 17:12:30,084 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Phone on table phone
2019-05-03 17:12:30,084 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:30,084 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:12:30,084 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:id]
2019-05-03 17:12:30,084 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:12:30,084 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:12:30,084 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=model, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:30,084 DEBUG [PropertyBinder]  - MetadataSourceProcessor property model with lazy=false
2019-05-03 17:12:30,084 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:model]
2019-05-03 17:12:30,084 DEBUG [SimpleValueBinder]  - building SimpleValue for model
2019-05-03 17:12:30,084 DEBUG [PropertyBinder]  - Building property model
2019-05-03 17:12:30,084 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=serialNumber, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:30,085 DEBUG [PropertyBinder]  - MetadataSourceProcessor property serialNumber with lazy=false
2019-05-03 17:12:30,085 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:serialNumber]
2019-05-03 17:12:30,085 DEBUG [SimpleValueBinder]  - building SimpleValue for serialNumber
2019-05-03 17:12:30,085 DEBUG [PropertyBinder]  - Building property serialNumber
2019-05-03 17:12:30,085 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:12:30,085 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for model
2019-05-03 17:12:30,085 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for serialNumber
2019-05-03 17:12:30,085 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [phone]
2019-05-03 17:12:30,085 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:12:30,085 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:12:30,085 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:12:30,085 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:12:30,085 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:12:30,086 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:12:30,086 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:12:30,086 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:12:30,086 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:12:30,086 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:12:30,086 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:12:30,086 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4212a0c8
2019-05-03 17:12:30,086 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:12:30,086 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:12:30,086 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:12:30,086 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:12:30,086 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:12:30,086 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:12:30,086 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:12:30,087 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@37d3d232, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@47747fb9, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:12:30,087 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:12:30,087 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Phone] is safe
2019-05-03 17:12:30,087 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Phone
2019-05-03 17:12:30,087 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Phone] is safe
2019-05-03 17:12:30,087 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Phone
2019-05-03 17:12:30,088 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Phone
2019-05-03 17:12:30,088 DEBUG [AbstractEntityPersister]  -  Version select: select id from phone where id =?
2019-05-03 17:12:30,088 DEBUG [AbstractEntityPersister]  -  Snapshot select: select phone_.id, phone_.model as model2_0_, phone_.serialNumber as serialNu3_0_ from phone phone_ where phone_.id=?
2019-05-03 17:12:30,088 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:12:30,088 DEBUG [AbstractEntityPersister]  -  Update 0: update phone set model=?, serialNumber=? where id=?
2019-05-03 17:12:30,088 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from phone where id=?
2019-05-03 17:12:30,088 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22db8f4]
2019-05-03 17:12:30,088 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:30,088 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:30,088 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:30,088 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:30,088 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:30,088 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [NONE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:30,088 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d572e62]
2019-05-03 17:12:30,088 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:30,088 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:30,088 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:30,088 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:30,089 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:30,089 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [READ]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:30,089 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46cf05f7]
2019-05-03 17:12:30,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:30,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:30,089 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:30,089 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:30,089 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:30,089 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:30,089 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cd1ac19]
2019-05-03 17:12:30,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:30,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:30,089 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:30,089 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:30,089 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:30,089 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE_NOWAIT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:30,089 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3caa4757]
2019-05-03 17:12:30,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:30,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:30,089 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:30,089 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:30,089 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:30,089 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE_SKIPLOCKED]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:30,089 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1804f60d]
2019-05-03 17:12:30,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:30,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:30,089 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:30,089 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:30,090 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:30,090 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [FORCE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:30,090 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@547e29a4]
2019-05-03 17:12:30,090 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:30,090 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:30,090 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:30,090 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:30,090 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:30,090 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_READ]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:30,090 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@238b521e]
2019-05-03 17:12:30,090 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:30,090 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:30,090 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:30,090 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:30,090 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:30,090 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_WRITE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:30,090 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e2fc448]
2019-05-03 17:12:30,090 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:30,090 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:30,090 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:30,090 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:30,090 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:30,090 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:30,090 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588ab592]
2019-05-03 17:12:30,090 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:30,090 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:30,090 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:30,091 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:30,091 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:30,091 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [OPTIMISTIC]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:30,091 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc61eb1]
2019-05-03 17:12:30,091 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:30,091 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:30,091 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:30,091 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:30,091 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:30,091 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [OPTIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:30,091 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Phone: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:30,091 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Phone: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:30,091 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:12:30,091 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:12:31,094 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.ClientConnection.openConnection(Unknown Source)
	at org.hsqldb.ClientConnection.initConnection(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:211)
	at org.hsqldb.server.HsqlSocketFactory.createSocket(Unknown Source)
	... 83 more
2019-05-03 17:12:31,094 WARN  [SqlExceptionHelper]  - SQL Error: -1301, SQLState: 08001
2019-05-03 17:12:31,094 ERROR [SqlExceptionHelper]  - java.net.ConnectException: Connection refused: connect
2019-05-03 17:12:31,094 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'phoneManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:12:31,094 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@2555fff0]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'phoneManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.ClientConnection.openConnection(Unknown Source)
	at org.hsqldb.ClientConnection.initConnection(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:211)
	at org.hsqldb.server.HsqlSocketFactory.createSocket(Unknown Source)
	... 83 more
2019-05-03 17:12:31,098 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:31,098 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:31,099 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@2a2bb0eb, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:12:31,099 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:12:31,099 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:12:31,099 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:12:31,122 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\phoneapp\service\PhoneManagerHibernateImpl.class]
2019-05-03 17:12:31,123 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:12:31,123 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@3c291aad
2019-05-03 17:12:31,124 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:12:31,130 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:12:31,131 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:31,131 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:31,131 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:31,131 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:31,131 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:12:31,132 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:12:31,132 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:12:31,132 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:12:31,133 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:12:31,133 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:12:31,133 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:12:31,135 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'phoneManagerHibernateImpl'
2019-05-03 17:12:31,136 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:12:31,137 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:12:31,138 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:12:31,138 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:12:31,138 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:12:31,143 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:12:31,143 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:12:31,143 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:12:31,146 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:12:31,146 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:12:31,146 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:12:31,146 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:12:31,146 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:31,146 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:31,146 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:31,146 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:12:31,146 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:12:31,146 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7692cd34
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@33aa93c
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@32c0915e
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@106faf11
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@70f43b45
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26d10f2e
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@10ad20cb
2019-05-03 17:12:31,147 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7dd712e8
2019-05-03 17:12:31,163 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:12:32,166 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : java.net.ConnectException: Connection refused: connect
2019-05-03 17:12:32,166 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:12:32,167 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:12:32,167 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:12:32,167 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:12:32,167 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:12:32,167 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Phone
2019-05-03 17:12:32,167 DEBUG [QueryBinder]  - Binding named query: phone.all => Select p from Phone p
2019-05-03 17:12:32,167 DEBUG [QueryBinder]  - Binding named query: phone.findPhone => Select c from Phone c where c.model like :modelNameFragment
2019-05-03 17:12:32,167 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:12:32,167 DEBUG [EntityBinder]  - Import with entity name Phone
2019-05-03 17:12:32,167 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Phone on table phone
2019-05-03 17:12:32,168 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:32,168 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:12:32,168 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:id]
2019-05-03 17:12:32,168 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:12:32,168 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:12:32,168 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=model, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:32,168 DEBUG [PropertyBinder]  - MetadataSourceProcessor property model with lazy=false
2019-05-03 17:12:32,168 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:model]
2019-05-03 17:12:32,168 DEBUG [SimpleValueBinder]  - building SimpleValue for model
2019-05-03 17:12:32,168 DEBUG [PropertyBinder]  - Building property model
2019-05-03 17:12:32,168 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=serialNumber, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:32,168 DEBUG [PropertyBinder]  - MetadataSourceProcessor property serialNumber with lazy=false
2019-05-03 17:12:32,168 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:serialNumber]
2019-05-03 17:12:32,168 DEBUG [SimpleValueBinder]  - building SimpleValue for serialNumber
2019-05-03 17:12:32,169 DEBUG [PropertyBinder]  - Building property serialNumber
2019-05-03 17:12:32,169 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:12:32,169 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for model
2019-05-03 17:12:32,169 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for serialNumber
2019-05-03 17:12:32,169 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [phone]
2019-05-03 17:12:32,169 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:12:32,169 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:12:32,169 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:12:32,169 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:12:32,169 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:12:32,169 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:12:32,169 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:12:32,169 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:12:32,169 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:12:32,169 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:12:32,169 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:12:32,169 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:12:32,169 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:12:32,169 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:12:32,169 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:12:32,169 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:12:32,169 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:12:32,169 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:12:32,169 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:12:32,169 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:12:32,169 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:12:32,170 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:12:32,170 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4212a0c8
2019-05-03 17:12:32,170 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:12:32,170 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:12:32,170 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:12:32,170 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:12:32,170 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:12:32,170 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:12:32,170 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:12:32,170 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:12:32,170 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:12:32,170 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:12:32,170 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:12:32,170 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:12:32,170 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:12:32,170 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:12:32,171 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@271f18d3, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3a45c42a, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:12:32,171 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:12:32,171 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Phone] is safe
2019-05-03 17:12:32,171 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Phone
2019-05-03 17:12:32,171 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Phone] is safe
2019-05-03 17:12:32,171 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Phone
2019-05-03 17:12:32,172 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Phone
2019-05-03 17:12:32,172 DEBUG [AbstractEntityPersister]  -  Version select: select id from phone where id =?
2019-05-03 17:12:32,172 DEBUG [AbstractEntityPersister]  -  Snapshot select: select phone_.id, phone_.model as model2_0_, phone_.serialNumber as serialNu3_0_ from phone phone_ where phone_.id=?
2019-05-03 17:12:32,172 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:12:32,172 DEBUG [AbstractEntityPersister]  -  Update 0: update phone set model=?, serialNumber=? where id=?
2019-05-03 17:12:32,172 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from phone where id=?
2019-05-03 17:12:32,172 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51abf713]
2019-05-03 17:12:32,172 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:32,172 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:32,172 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:32,172 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:32,172 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:32,172 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [NONE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:32,172 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d4d48a6]
2019-05-03 17:12:32,172 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:32,172 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:32,172 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:32,172 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:32,172 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:32,172 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [READ]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:32,172 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fc08eec]
2019-05-03 17:12:32,172 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:32,172 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:32,172 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:32,172 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:32,173 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:32,173 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:32,173 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b02e036]
2019-05-03 17:12:32,173 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:32,173 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:32,173 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:32,173 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:32,173 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:32,173 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE_NOWAIT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:32,173 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e287667]
2019-05-03 17:12:32,173 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:32,173 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:32,173 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:32,173 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:32,173 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:32,173 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE_SKIPLOCKED]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:32,173 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4201a617]
2019-05-03 17:12:32,173 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:32,173 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:32,173 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:32,173 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:32,173 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:32,173 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [FORCE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:32,173 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb9aa43]
2019-05-03 17:12:32,174 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:32,174 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:32,174 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:32,174 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:32,174 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:32,174 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_READ]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:32,174 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@df5f5c0]
2019-05-03 17:12:32,174 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:32,174 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:32,174 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:32,174 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:32,174 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:32,174 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_WRITE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:32,174 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b72664]
2019-05-03 17:12:32,174 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:32,174 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:32,174 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:32,174 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:32,174 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:32,174 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:32,174 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58cd06cb]
2019-05-03 17:12:32,174 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:32,174 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:32,174 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:32,174 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:32,174 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:32,174 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [OPTIMISTIC]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:32,174 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b31700]
2019-05-03 17:12:32,174 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:32,174 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:32,174 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:32,175 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:32,175 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:32,175 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [OPTIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:32,175 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Phone: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:32,175 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Phone: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:32,175 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:12:32,175 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:12:33,177 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.ClientConnection.openConnection(Unknown Source)
	at org.hsqldb.ClientConnection.initConnection(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:211)
	at org.hsqldb.server.HsqlSocketFactory.createSocket(Unknown Source)
	... 83 more
2019-05-03 17:12:33,178 WARN  [SqlExceptionHelper]  - SQL Error: -1301, SQLState: 08001
2019-05-03 17:12:33,178 ERROR [SqlExceptionHelper]  - java.net.ConnectException: Connection refused: connect
2019-05-03 17:12:33,178 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'phoneManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:12:33,178 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@2a2bb0eb]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'phoneManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.ClientConnection.openConnection(Unknown Source)
	at org.hsqldb.ClientConnection.initConnection(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:211)
	at org.hsqldb.server.HsqlSocketFactory.createSocket(Unknown Source)
	... 83 more
2019-05-03 17:12:33,181 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:33,181 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:33,181 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@10567255, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:12:33,182 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:12:33,182 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:12:33,182 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:12:33,209 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\phoneapp\service\PhoneManagerHibernateImpl.class]
2019-05-03 17:12:33,211 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:12:33,211 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@e362c57
2019-05-03 17:12:33,211 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:12:33,215 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:12:33,216 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:33,216 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:33,216 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:33,216 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:33,216 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:12:33,216 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:12:33,217 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:12:33,217 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:12:33,217 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:12:33,217 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:12:33,217 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:12:33,219 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'phoneManagerHibernateImpl'
2019-05-03 17:12:33,219 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:12:33,220 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:12:33,220 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:12:33,221 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:12:33,221 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:12:33,223 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:12:33,223 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:12:33,223 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:12:33,225 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:12:33,225 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:12:33,225 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:12:33,225 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:12:33,226 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12365c88
2019-05-03 17:12:33,227 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6105f8a3
2019-05-03 17:12:33,227 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2237bada
2019-05-03 17:12:33,227 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@77e2a6e2
2019-05-03 17:12:33,227 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5710768a
2019-05-03 17:12:33,227 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@199e4c2b
2019-05-03 17:12:33,227 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6e0d4a8
2019-05-03 17:12:33,227 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64d7b720
2019-05-03 17:12:33,227 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:12:34,230 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : java.net.ConnectException: Connection refused: connect
2019-05-03 17:12:34,230 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:12:34,230 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:12:34,230 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:12:34,230 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:12:34,230 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:12:34,230 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Phone
2019-05-03 17:12:34,231 DEBUG [QueryBinder]  - Binding named query: phone.all => Select p from Phone p
2019-05-03 17:12:34,231 DEBUG [QueryBinder]  - Binding named query: phone.findPhone => Select c from Phone c where c.model like :modelNameFragment
2019-05-03 17:12:34,231 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:12:34,231 DEBUG [EntityBinder]  - Import with entity name Phone
2019-05-03 17:12:34,231 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Phone on table phone
2019-05-03 17:12:34,231 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:34,231 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:12:34,231 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:id]
2019-05-03 17:12:34,231 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:12:34,231 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:12:34,231 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=model, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:34,231 DEBUG [PropertyBinder]  - MetadataSourceProcessor property model with lazy=false
2019-05-03 17:12:34,231 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:model]
2019-05-03 17:12:34,231 DEBUG [SimpleValueBinder]  - building SimpleValue for model
2019-05-03 17:12:34,232 DEBUG [PropertyBinder]  - Building property model
2019-05-03 17:12:34,232 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=serialNumber, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:34,232 DEBUG [PropertyBinder]  - MetadataSourceProcessor property serialNumber with lazy=false
2019-05-03 17:12:34,232 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:serialNumber]
2019-05-03 17:12:34,232 DEBUG [SimpleValueBinder]  - building SimpleValue for serialNumber
2019-05-03 17:12:34,232 DEBUG [PropertyBinder]  - Building property serialNumber
2019-05-03 17:12:34,232 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:12:34,232 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for model
2019-05-03 17:12:34,232 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for serialNumber
2019-05-03 17:12:34,232 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [phone]
2019-05-03 17:12:34,232 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:12:34,232 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:12:34,232 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:12:34,232 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:12:34,233 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:12:34,233 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:12:34,233 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:12:34,233 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:12:34,233 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:12:34,233 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:12:34,233 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4212a0c8
2019-05-03 17:12:34,233 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:12:34,233 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:12:34,233 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:12:34,233 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:12:34,233 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:12:34,233 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:12:34,233 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:12:34,233 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@63034ed1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@1e8823d2, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:12:34,234 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:12:34,234 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Phone] is safe
2019-05-03 17:12:34,234 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Phone
2019-05-03 17:12:34,234 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Phone] is safe
2019-05-03 17:12:34,234 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Phone
2019-05-03 17:12:34,234 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Phone
2019-05-03 17:12:34,234 DEBUG [AbstractEntityPersister]  -  Version select: select id from phone where id =?
2019-05-03 17:12:34,234 DEBUG [AbstractEntityPersister]  -  Snapshot select: select phone_.id, phone_.model as model2_0_, phone_.serialNumber as serialNu3_0_ from phone phone_ where phone_.id=?
2019-05-03 17:12:34,234 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:12:34,234 DEBUG [AbstractEntityPersister]  -  Update 0: update phone set model=?, serialNumber=? where id=?
2019-05-03 17:12:34,234 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from phone where id=?
2019-05-03 17:12:34,234 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a415aa9]
2019-05-03 17:12:34,235 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:34,235 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:34,235 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:34,235 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:34,235 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:34,235 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [NONE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:34,235 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ea1fda]
2019-05-03 17:12:34,235 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:34,235 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:34,235 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:34,235 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:34,235 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:34,235 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [READ]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:34,235 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420745d7]
2019-05-03 17:12:34,235 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:34,235 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:34,235 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:34,236 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:34,236 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:34,236 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:34,236 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fa47fea]
2019-05-03 17:12:34,236 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:34,236 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:34,236 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:34,236 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:34,236 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:34,236 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE_NOWAIT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:34,236 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b43e173]
2019-05-03 17:12:34,236 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:34,236 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:34,236 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:34,236 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:34,236 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:34,236 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE_SKIPLOCKED]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:34,236 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@545f80bf]
2019-05-03 17:12:34,236 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:34,236 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:34,236 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:34,236 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:34,236 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:34,236 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [FORCE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:34,237 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fa55b2]
2019-05-03 17:12:34,237 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:34,237 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:34,237 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:34,237 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:34,237 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:34,237 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_READ]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:34,237 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6594402a]
2019-05-03 17:12:34,237 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:34,237 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:34,237 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:34,237 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:34,237 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:34,237 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_WRITE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:34,237 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@405325cf]
2019-05-03 17:12:34,237 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:34,237 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:34,237 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:34,237 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:34,237 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:34,237 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:34,237 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79c3f01f]
2019-05-03 17:12:34,237 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:34,237 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:34,237 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:34,238 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:34,238 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:34,238 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [OPTIMISTIC]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:34,238 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@350b3a17]
2019-05-03 17:12:34,238 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:34,238 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:34,238 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:34,238 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:34,238 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:34,238 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [OPTIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:34,238 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Phone: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:34,238 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Phone: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:34,238 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:12:34,238 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:12:35,240 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.ClientConnection.openConnection(Unknown Source)
	at org.hsqldb.ClientConnection.initConnection(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:211)
	at org.hsqldb.server.HsqlSocketFactory.createSocket(Unknown Source)
	... 83 more
2019-05-03 17:12:35,241 WARN  [SqlExceptionHelper]  - SQL Error: -1301, SQLState: 08001
2019-05-03 17:12:35,241 ERROR [SqlExceptionHelper]  - java.net.ConnectException: Connection refused: connect
2019-05-03 17:12:35,241 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'phoneManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:12:35,241 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@10567255]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'phoneManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.ClientConnection.openConnection(Unknown Source)
	at org.hsqldb.ClientConnection.initConnection(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:211)
	at org.hsqldb.server.HsqlSocketFactory.createSocket(Unknown Source)
	... 83 more
2019-05-03 17:12:35,262 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:35,262 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:12:35,262 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@4e406694, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:12:35,262 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:12:35,263 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:12:35,263 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:12:35,283 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\phoneapp\service\PhoneManagerHibernateImpl.class]
2019-05-03 17:12:35,284 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:12:35,284 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@5ab9b447
2019-05-03 17:12:35,284 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:12:35,288 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:12:35,289 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:35,289 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:35,290 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:35,290 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:12:35,290 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:12:35,290 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:12:35,290 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:12:35,290 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:12:35,290 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:12:35,291 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:12:35,291 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:12:35,292 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'phoneManagerHibernateImpl'
2019-05-03 17:12:35,292 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:12:35,292 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:12:35,293 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:12:35,293 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:12:35,294 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:12:35,324 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:12:35,324 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:12:35,324 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:12:35,328 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:12:35,330 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:12:35,330 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:12:35,330 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:35,330 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15fc442
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3f3c7bdb
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@456abb66
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2a3a299
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7da10b5b
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@219f4597
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@31be6b49
2019-05-03 17:12:35,331 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e16b08d
2019-05-03 17:12:35,332 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:12:36,336 WARN  [JdbcEnvironmentInitiator]  - HHH000342: Could not obtain connection to query metadata : java.net.ConnectException: Connection refused: connect
2019-05-03 17:12:36,336 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:12:36,336 DEBUG [IdentifierHelperBuilder]  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-05-03 17:12:36,336 INFO  [LobCreatorBuilderImpl]  - HHH000422: Disabling contextual LOB creation as connection was null
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:12:36,337 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:12:36,337 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:12:36,337 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Phone
2019-05-03 17:12:36,337 DEBUG [QueryBinder]  - Binding named query: phone.all => Select p from Phone p
2019-05-03 17:12:36,337 DEBUG [QueryBinder]  - Binding named query: phone.findPhone => Select c from Phone c where c.model like :modelNameFragment
2019-05-03 17:12:36,337 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:12:36,337 DEBUG [EntityBinder]  - Import with entity name Phone
2019-05-03 17:12:36,337 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Phone on table phone
2019-05-03 17:12:36,338 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:36,338 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:12:36,338 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:id]
2019-05-03 17:12:36,338 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:12:36,338 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:12:36,338 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=model, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:36,338 DEBUG [PropertyBinder]  - MetadataSourceProcessor property model with lazy=false
2019-05-03 17:12:36,338 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:model]
2019-05-03 17:12:36,338 DEBUG [SimpleValueBinder]  - building SimpleValue for model
2019-05-03 17:12:36,338 DEBUG [PropertyBinder]  - Building property model
2019-05-03 17:12:36,338 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=serialNumber, insertable=true, updatable=true, unique=false}
2019-05-03 17:12:36,338 DEBUG [PropertyBinder]  - MetadataSourceProcessor property serialNumber with lazy=false
2019-05-03 17:12:36,338 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:serialNumber]
2019-05-03 17:12:36,338 DEBUG [SimpleValueBinder]  - building SimpleValue for serialNumber
2019-05-03 17:12:36,338 DEBUG [PropertyBinder]  - Building property serialNumber
2019-05-03 17:12:36,339 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:12:36,339 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for model
2019-05-03 17:12:36,339 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for serialNumber
2019-05-03 17:12:36,339 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [phone]
2019-05-03 17:12:36,339 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:12:36,339 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:12:36,339 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:12:36,339 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:12:36,339 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:12:36,339 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:12:36,339 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:12:36,339 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:12:36,339 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:12:36,339 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4212a0c8
2019-05-03 17:12:36,339 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:12:36,339 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - JDBC batch size: 0
2019-05-03 17:12:36,339 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Scrollable result sets: disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): disabled
2019-05-03 17:12:36,339 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:12:36,340 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:12:36,340 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:12:36,340 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:12:36,340 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d140a7, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@867ba60, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:12:36,340 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:12:36,341 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Phone] is safe
2019-05-03 17:12:36,341 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Phone
2019-05-03 17:12:36,341 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Phone] is safe
2019-05-03 17:12:36,341 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Phone
2019-05-03 17:12:36,342 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Phone
2019-05-03 17:12:36,342 DEBUG [AbstractEntityPersister]  -  Version select: select id from phone where id =?
2019-05-03 17:12:36,342 DEBUG [AbstractEntityPersister]  -  Snapshot select: select phone_.id, phone_.model as model2_0_, phone_.serialNumber as serialNu3_0_ from phone phone_ where phone_.id=?
2019-05-03 17:12:36,342 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:12:36,342 DEBUG [AbstractEntityPersister]  -  Update 0: update phone set model=?, serialNumber=? where id=?
2019-05-03 17:12:36,342 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from phone where id=?
2019-05-03 17:12:36,342 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f34a967]
2019-05-03 17:12:36,342 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:36,342 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:36,342 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:36,342 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:36,342 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:36,342 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [NONE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:36,342 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8e2eea]
2019-05-03 17:12:36,342 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:36,342 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:36,342 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:36,342 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:36,342 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:36,342 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [READ]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:36,342 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea4d397]
2019-05-03 17:12:36,342 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:36,342 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:36,342 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:36,342 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:36,342 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:36,342 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:36,342 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@253c1256]
2019-05-03 17:12:36,342 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:36,343 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:36,343 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:36,343 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:36,343 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:36,343 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE_NOWAIT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:36,343 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@503fbbc6]
2019-05-03 17:12:36,343 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:36,343 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:36,343 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:36,343 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:36,343 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:36,343 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE_SKIPLOCKED]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:36,343 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@109f5dd8]
2019-05-03 17:12:36,343 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:36,343 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:36,343 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:36,343 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:36,343 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:36,343 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [FORCE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:36,343 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a325eb9]
2019-05-03 17:12:36,343 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:36,343 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:36,343 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:36,343 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:36,343 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:36,343 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_READ]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:36,343 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f64f5e]
2019-05-03 17:12:36,343 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:36,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:36,344 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:36,344 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:36,344 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:36,344 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_WRITE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:36,344 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@194152cf]
2019-05-03 17:12:36,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:36,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:36,344 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:36,344 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:36,344 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:36,344 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:12:36,344 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c30b71f]
2019-05-03 17:12:36,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:36,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:36,344 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:36,344 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:36,344 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:36,344 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [OPTIMISTIC]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:36,344 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ec50f54]
2019-05-03 17:12:36,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:12:36,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:12:36,344 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:12:36,344 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:12:36,345 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:12:36,345 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [OPTIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:36,345 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Phone: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:36,345 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Phone: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:12:36,345 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:12:36,345 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:12:37,346 DEBUG [SqlExceptionHelper]  - Unable to open JDBC Connection for DDL execution [n/a]
java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.hsqldb.HsqlException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.ClientConnection.openConnection(Unknown Source)
	at org.hsqldb.ClientConnection.initConnection(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:211)
	at org.hsqldb.server.HsqlSocketFactory.createSocket(Unknown Source)
	... 83 more
2019-05-03 17:12:37,347 WARN  [SqlExceptionHelper]  - SQL Error: -1301, SQLState: 08001
2019-05-03 17:12:37,347 ERROR [SqlExceptionHelper]  - java.net.ConnectException: Connection refused: connect
2019-05-03 17:12:37,347 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'phoneManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2019-05-03 17:12:37,347 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@4e406694]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'phoneManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:130)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:92)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:176)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:459)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
Caused by: java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:154)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:145)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 68 more
Caused by: org.hsqldb.HsqlException: java.net.ConnectException: Connection refused: connect
	at org.hsqldb.ClientConnection.openConnection(Unknown Source)
	at org.hsqldb.ClientConnection.initConnection(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 80 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:211)
	at org.hsqldb.server.HsqlSocketFactory.createSocket(Unknown Source)
	... 83 more
2019-05-03 17:12:37,349 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:15:32,658 DEBUG [SpringJUnit4ClassRunner]  - SpringJUnit4ClassRunner constructor called with [class pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:32,665 DEBUG [BootstrapUtils]  - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2019-05-03 17:15:32,672 DEBUG [BootstrapUtils]  - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2019-05-03 17:15:32,682 DEBUG [BootstrapUtils]  - Instantiating TestContextBootstrapper for test class [pl.tau.library.service.LibraryManagerTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2019-05-03 17:15:32,703 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@55f3ddb1 declaringClass = 'pl.tau.library.service.LibraryManagerTest', classes = '{}', locations = '{classpath:/beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2019-05-03 17:15:32,721 DEBUG [ActiveProfilesUtils]  - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:32,721 DEBUG [DefaultTestContextBootstrapper]  - @TestExecutionListeners is not present for class [pl.tau.library.service.LibraryManagerTest]: using defaults.
2019-05-03 17:15:32,722 INFO  [DefaultTestContextBootstrapper]  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-05-03 17:15:32,725 DEBUG [DefaultTestContextBootstrapper]  - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
2019-05-03 17:15:32,732 INFO  [DefaultTestContextBootstrapper]  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c]
2019-05-03 17:15:32,733 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:32,733 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:32,746 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:32,746 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:32,747 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:32,747 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:32,747 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:32,747 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:32,749 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:15:32,750 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:32,750 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:32,751 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:15:32,752 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:15:32,752 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:15:32,785 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:15:32,941 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\phoneapp\service\PhoneManagerHibernateImpl.class]
2019-05-03 17:15:32,967 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:15:32,967 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@711f39f9
2019-05-03 17:15:32,999 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:15:33,061 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:15:33,091 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:15:33,091 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:15:33,091 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:15:33,091 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:15:33,091 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:15:33,093 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:15:33,093 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:15:33,094 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:15:33,095 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:15:33,098 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:15:33,098 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:15:33,124 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'phoneManagerHibernateImpl'
2019-05-03 17:15:33,153 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:15:33,176 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:15:33,186 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:15:33,186 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:15:33,188 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:15:33,240 DEBUG [logging]  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-05-03 17:15:33,248 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:15:33,249 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:15:33,252 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:15:33,374 INFO  [Version]  - HHH000412: Hibernate Core {5.1.6.Final}
2019-05-03 17:15:33,375 INFO  [Environment]  - HHH000206: hibernate.properties not found
2019-05-03 17:15:33,378 INFO  [Environment]  - HHH000021: Bytecode provider name : javassist
2019-05-03 17:15:33,390 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:15:33,395 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:15:33,395 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:15:33,404 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:15:33,410 INFO  [Version]  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-05-03 17:15:33,425 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:15:33,425 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:15:33,426 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:15:33,426 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:15:33,427 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:15:33,428 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:15:33,428 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:15:33,428 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:15:33,429 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:15:33,429 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:15:33,429 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:15:33,429 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:15:33,430 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:15:33,430 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:15:33,430 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:15:33,431 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:15:33,431 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:15:33,431 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:15:33,432 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:15:33,432 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:15:33,432 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:15:33,433 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:15:33,433 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:15:33,433 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:15:33,434 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:15:33,434 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:15:33,434 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:15:33,435 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:15:33,435 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:15:33,436 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:15:33,436 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:15:33,436 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:15:33,436 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:15:33,437 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:15:33,438 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:15:33,438 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:15:33,438 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:15:33,440 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:15:33,440 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:15:33,441 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:15:33,442 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:15:33,443 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:15:33,443 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:15:33,443 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:15:33,444 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:15:33,445 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:15:33,445 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:15:33,445 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:15:33,445 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:15:33,446 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:15:33,446 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:15:33,447 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:15:33,447 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:15:33,447 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:15:33,447 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:15:33,448 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:15:33,448 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:15:33,449 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:15:33,449 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:15:33,449 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:15:33,450 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:15:33,450 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:15:33,450 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:15:33,450 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:15:33,451 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:15:33,451 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:15:33,451 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:15:33,452 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:15:33,452 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:15:33,452 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:15:33,452 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:15:33,453 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:15:33,453 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:15:33,453 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:15:33,454 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:15:33,454 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:15:33,456 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:15:33,457 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:15:33,457 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:15:33,459 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:15:33,459 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:15:33,461 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:15:33,461 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:15:33,461 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:15:33,461 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:15:33,462 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:15:33,464 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:15:33,464 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:15:33,464 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bec854f
2019-05-03 17:15:33,464 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31edaa7d
2019-05-03 17:15:33,464 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26adfd2d
2019-05-03 17:15:33,464 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336e6b6
2019-05-03 17:15:33,464 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c3fdb62
2019-05-03 17:15:33,464 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205d38da
2019-05-03 17:15:33,464 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6950ed69
2019-05-03 17:15:33,464 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dd7b5a3
2019-05-03 17:15:33,472 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:15:33,617 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:15:33,617 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:15:33,617 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:15:33,625 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:15:33,648 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:15:33,735 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:15:33,736 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:15:33,736 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:15:33,736 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:15:33,736 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:15:33,737 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:15:33,737 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:15:33,738 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:15:33,739 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:15:33,739 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:15:33,739 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:15:33,740 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:15:33,740 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:15:33,740 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:15:33,785 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:15:33,802 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Phone
2019-05-03 17:15:33,812 DEBUG [QueryBinder]  - Binding named query: phone.all => Select p from Phone p
2019-05-03 17:15:33,812 DEBUG [QueryBinder]  - Binding named query: phone.findPhone => Select c from Phone c where c.model like :modelNameFragment
2019-05-03 17:15:33,818 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:15:33,822 DEBUG [EntityBinder]  - Import with entity name Phone
2019-05-03 17:15:33,824 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Phone on table phone
2019-05-03 17:15:33,838 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:15:33,840 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:15:33,841 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:id]
2019-05-03 17:15:33,842 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:15:33,843 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:15:33,845 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=model, insertable=true, updatable=true, unique=false}
2019-05-03 17:15:33,845 DEBUG [PropertyBinder]  - MetadataSourceProcessor property model with lazy=false
2019-05-03 17:15:33,845 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:model]
2019-05-03 17:15:33,845 DEBUG [SimpleValueBinder]  - building SimpleValue for model
2019-05-03 17:15:33,845 DEBUG [PropertyBinder]  - Building property model
2019-05-03 17:15:33,846 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(phone), mappingColumn=serialNumber, insertable=true, updatable=true, unique=false}
2019-05-03 17:15:33,846 DEBUG [PropertyBinder]  - MetadataSourceProcessor property serialNumber with lazy=false
2019-05-03 17:15:33,846 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Phone:serialNumber]
2019-05-03 17:15:33,846 DEBUG [SimpleValueBinder]  - building SimpleValue for serialNumber
2019-05-03 17:15:33,846 DEBUG [PropertyBinder]  - Building property serialNumber
2019-05-03 17:15:33,847 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:15:33,847 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for model
2019-05-03 17:15:33,847 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for serialNumber
2019-05-03 17:15:33,848 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [phone]
2019-05-03 17:15:33,869 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:15:33,870 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:15:33,870 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:15:33,870 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:15:33,870 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:15:33,870 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:15:33,870 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:15:33,870 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:15:33,870 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:15:33,870 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:15:33,870 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:15:33,870 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:15:33,870 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:15:33,870 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:15:33,871 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:15:33,871 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:15:33,871 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:15:33,871 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:15:33,871 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:15:33,871 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:15:33,897 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:15:33,897 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4264b240, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:15:33,904 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:15:33,923 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Phone] is safe
2019-05-03 17:15:33,923 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Phone
2019-05-03 17:15:33,931 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Phone] is safe
2019-05-03 17:15:33,931 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Phone
2019-05-03 17:15:33,967 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Phone
2019-05-03 17:15:33,967 DEBUG [AbstractEntityPersister]  -  Version select: select id from phone where id =?
2019-05-03 17:15:33,967 DEBUG [AbstractEntityPersister]  -  Snapshot select: select phone_.id, phone_.model as model2_0_, phone_.serialNumber as serialNu3_0_ from phone phone_ where phone_.id=?
2019-05-03 17:15:33,967 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:33,967 DEBUG [AbstractEntityPersister]  -  Update 0: update phone set model=?, serialNumber=? where id=?
2019-05-03 17:15:33,967 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from phone where id=?
2019-05-03 17:15:33,983 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ed0ff3]
2019-05-03 17:15:33,984 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:15:33,984 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:15:33,984 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:15:33,993 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:15:33,996 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:15:33,997 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [NONE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:15:33,997 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7f2382]
2019-05-03 17:15:33,997 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:15:33,997 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:15:33,998 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:15:33,998 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:15:33,998 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:15:33,998 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [READ]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:15:33,998 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6815c5f2]
2019-05-03 17:15:33,998 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:15:33,998 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:15:33,998 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:15:33,998 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:15:33,998 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:15:33,998 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:15:33,998 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60094a13]
2019-05-03 17:15:33,998 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:15:33,998 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:15:33,998 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:15:33,998 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:15:33,998 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:15:33,999 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE_NOWAIT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:15:33,999 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c32886a]
2019-05-03 17:15:33,999 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:15:33,999 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:15:33,999 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:15:33,999 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:15:33,999 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:15:33,999 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [UPGRADE_SKIPLOCKED]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:15:33,999 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b892d5]
2019-05-03 17:15:33,999 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:15:33,999 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:15:33,999 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:15:33,999 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:15:33,999 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:15:33,999 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [FORCE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:15:33,999 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3546d80f]
2019-05-03 17:15:33,999 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:15:33,999 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:15:33,999 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:15:33,999 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:15:34,000 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:15:34,000 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_READ]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:15:34,000 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3670f00]
2019-05-03 17:15:34,000 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:15:34,000 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:15:34,000 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:15:34,000 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:15:34,000 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:15:34,000 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_WRITE]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:15:34,000 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ab18da]
2019-05-03 17:15:34,000 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:15:34,000 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:15:34,000 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:15:34,000 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:15:34,001 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:15:34,001 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [PESSIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=? for update
2019-05-03 17:15:34,001 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42257bdd]
2019-05-03 17:15:34,001 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:15:34,001 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:15:34,001 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:15:34,001 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:15:34,001 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:15:34,001 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [OPTIMISTIC]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:15:34,001 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687a762c]
2019-05-03 17:15:34,001 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : model
2019-05-03 17:15:34,001 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : serialNumber
2019-05-03 17:15:34,001 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:15:34,001 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:15:34,001 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Phone)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Phone, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:15:34,001 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Phone [OPTIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:15:34,012 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Phone: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:15:34,012 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Phone: select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:15:34,012 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:15:34,025 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:15:34,149 DEBUG [SQL]  - create table phone (id bigint not null, model varchar(255), serialNumber integer, primary key (id))
2019-05-03 17:15:34,151 DEBUG [SQL]  - create sequence hibernate_sequence start with 1 increment by 1
2019-05-03 17:15:34,152 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:15:34,152 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:15:34,154 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:15:34,155 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:15:34,155 DEBUG [NamedQueryRepository]  - Checking named query: phone.findPhone
2019-05-03 17:15:34,158 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3113a37
2019-05-03 17:15:34,158 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:15:34,183 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select c from pl.tau.library.domain.Phone c where c.model like :modelNameFragment
2019-05-03 17:15:34,188 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'phoneapp'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Phone'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:15:34,188 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:15:34,204 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:15:34,215 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Phone (c) -> phone0_
2019-05-03 17:15:34,216 DEBUG [FromReferenceNode]  - Resolved : c -> phone0_.id
2019-05-03 17:15:34,218 DEBUG [FromReferenceNode]  - Resolved : c -> phone0_.id
2019-05-03 17:15:34,219 DEBUG [DotNode]  - getDataType() : model -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:15:34,219 DEBUG [FromReferenceNode]  - Resolved : c.model -> phone0_.model
2019-05-03 17:15:34,221 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:15:34,221 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} phone0_.id ) ( FromClause{level=1} phone phone0_ ) ( where ( like ( phone0_.model phone0_.id model ) ? ) ) )
2019-05-03 17:15:34,226 DEBUG [JoinProcessor]  - Using FROM fragment [phone phone0_]
2019-05-03 17:15:34,226 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:15:34,226 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (phone)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'phone0_.id as id1_0_' {alias=c, className=pl.tau.library.domain.Phone, tableAlias=phone0_}
    |  \-[SQL_TOKEN] SqlFragment: 'phone0_.model as model2_0_, phone0_.serialNumber as serialNu3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[phone0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'phone phone0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=phone,tableAlias=phone0_,origin=null,columns={,className=pl.tau.library.domain.Phone}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'phone0_.model' {propertyName=model,dereferenceType=PRIMITIVE,getPropertyPath=model,path=c.model,tableAlias=phone0_,className=pl.tau.library.domain.Phone,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'phone0_.id' {alias=c, className=pl.tau.library.domain.Phone, tableAlias=phone0_}
          |  \-[IDENT] IdentNode: 'model' {originalText=model}
          \-[NAMED_PARAM] ParameterNode: '?' {name=modelNameFragment, expectedType=org.hibernate.type.StringType@41330d4f}

2019-05-03 17:15:34,226 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:15:34,231 DEBUG [QueryTranslatorImpl]  - HQL: Select c from pl.tau.library.domain.Phone c where c.model like :modelNameFragment
2019-05-03 17:15:34,231 DEBUG [QueryTranslatorImpl]  - SQL: select phone0_.id as id1_0_, phone0_.model as model2_0_, phone0_.serialNumber as serialNu3_0_ from phone phone0_ where phone0_.model like ?
2019-05-03 17:15:34,231 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:15:34,235 DEBUG [NamedQueryRepository]  - Checking named query: phone.all
2019-05-03 17:15:34,236 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select p from pl.tau.library.domain.Phone p
2019-05-03 17:15:34,236 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'phoneapp'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Phone'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'p'

2019-05-03 17:15:34,236 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:15:34,236 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:15:34,236 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Phone (p) -> phone0_
2019-05-03 17:15:34,237 DEBUG [FromReferenceNode]  - Resolved : p -> phone0_.id
2019-05-03 17:15:34,237 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:15:34,237 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} phone0_.id ) ( FromClause{level=1} phone phone0_ ) )
2019-05-03 17:15:34,237 DEBUG [JoinProcessor]  - Using FROM fragment [phone phone0_]
2019-05-03 17:15:34,237 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:15:34,237 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (phone)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'phone0_.id as id1_0_' {alias=p, className=pl.tau.library.domain.Phone, tableAlias=phone0_}
    |  \-[SQL_TOKEN] SqlFragment: 'phone0_.model as model2_0_, phone0_.serialNumber as serialNu3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[phone0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'phone phone0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=phone,tableAlias=phone0_,origin=null,columns={,className=pl.tau.library.domain.Phone}}

2019-05-03 17:15:34,237 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:15:34,237 DEBUG [QueryTranslatorImpl]  - HQL: Select p from pl.tau.library.domain.Phone p
2019-05-03 17:15:34,237 DEBUG [QueryTranslatorImpl]  - SQL: select phone0_.id as id1_0_, phone0_.model as model2_0_, phone0_.serialNumber as serialNu3_0_ from phone phone0_
2019-05-03 17:15:34,237 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:15:34,237 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:15:34,239 DEBUG [SessionFactoryRegistry]  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3d9fc57a
2019-05-03 17:15:34,239 DEBUG [SessionFactoryRegistry]  - Registering SessionFactory: b7983f9b-bb58-4e16-aafd-6b02de533d9e (<unnamed>)
2019-05-03 17:15:34,239 DEBUG [SessionFactoryRegistry]  - Not binding SessionFactory to JNDI, no JNDI name configured
2019-05-03 17:15:34,253 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2019-05-03 17:15:34,259 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'txManager'
2019-05-03 17:15:34,274 DEBUG [HibernateTransactionManager]  - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5] of Hibernate SessionFactory for HibernateTransactionManager
2019-05-03 17:15:34,284 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Storing ApplicationContext in cache under key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:15:34,284 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]
2019-05-03 17:15:34,288 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = addPhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:15:34,290 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = addPhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:15:34,290 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:15:34,290 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]
2019-05-03 17:15:34,293 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:15:34,293 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = addPhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:15:34,300 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.addPhoneTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:15:34,330 DEBUG [StatisticsInitiator]  - Statistics initialized [enabled=false]
2019-05-03 17:15:34,331 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,331 DEBUG [TransactionImpl]  - begin
2019-05-03 17:15:34,332 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:15:34,434 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/1671007220@7e0b9178]
2019-05-03 17:15:34,434 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = addPhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@2617f816]; rollback [false]
2019-05-03 17:15:34,438 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,438 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,442 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,448 DEBUG [SequenceStructure]  - Sequence value obtained: 1
2019-05-03 17:15:34,448 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,448 DEBUG [AbstractSaveEventListener]  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,461 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,462 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,463 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:15:34,463 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,464 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,464 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=1}
2019-05-03 17:15:34,471 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,475 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,475 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,475 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,476 DEBUG [SequenceStructure]  - Sequence value obtained: 2
2019-05-03 17:15:34,476 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,476 DEBUG [AbstractSaveEventListener]  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,476 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,476 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,476 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:15:34,476 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,476 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,476 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=1}
2019-05-03 17:15:34,476 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=2}
2019-05-03 17:15:34,476 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,477 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#1], EntityKey[pl.tau.library.domain.Phone#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,477 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,477 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,478 DEBUG [SequenceStructure]  - Sequence value obtained: 3
2019-05-03 17:15:34,478 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,478 DEBUG [AbstractSaveEventListener]  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,478 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,478 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,478 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:15:34,478 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,478 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,479 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=3}
2019-05-03 17:15:34,479 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=1}
2019-05-03 17:15:34,479 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=2}
2019-05-03 17:15:34,479 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,480 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:15:34,481 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#3], EntityKey[pl.tau.library.domain.Phone#1], EntityKey[pl.tau.library.domain.Phone#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:15:34,481 DEBUG [TransactionImpl]  - committing
2019-05-03 17:15:34,481 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,481 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,481 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:15:34,481 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,481 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,481 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=3}
2019-05-03 17:15:34,481 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=1}
2019-05-03 17:15:34,481 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=2}
2019-05-03 17:15:34,483 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#3], EntityKey[pl.tau.library.domain.Phone#1], EntityKey[pl.tau.library.domain.Phone#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:15:34,483 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:15:34,484 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = addPhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:15:34,485 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = addPhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:15:34,485 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:34,485 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:34,486 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7ed9ae94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:15:34,486 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:15:34,486 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]
2019-05-03 17:15:34,488 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7ed9ae94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:15:34,488 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7ed9ae94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:15:34,489 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:15:34,489 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]
2019-05-03 17:15:34,489 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:15:34,489 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7ed9ae94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:15:34,489 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.deletePhoneTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:15:34,489 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,489 DEBUG [TransactionImpl]  - begin
2019-05-03 17:15:34,489 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:15:34,592 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/1671007220@66908383]
2019-05-03 17:15:34,593 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7ed9ae94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@2617f816]; rollback [false]
2019-05-03 17:15:34,593 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,593 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,593 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,594 DEBUG [SequenceStructure]  - Sequence value obtained: 4
2019-05-03 17:15:34,594 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,594 DEBUG [AbstractSaveEventListener]  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,594 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,594 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,594 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:15:34,594 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,594 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,594 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=4}
2019-05-03 17:15:34,594 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,595 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#4]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,595 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,596 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,596 DEBUG [SequenceStructure]  - Sequence value obtained: 5
2019-05-03 17:15:34,596 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,596 DEBUG [AbstractSaveEventListener]  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,597 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,597 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,597 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:15:34,597 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,597 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,597 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=4}
2019-05-03 17:15:34,597 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=5}
2019-05-03 17:15:34,597 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,598 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#4], EntityKey[pl.tau.library.domain.Phone#5]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,599 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,599 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,599 DEBUG [SequenceStructure]  - Sequence value obtained: 6
2019-05-03 17:15:34,599 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,600 DEBUG [AbstractSaveEventListener]  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,600 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,600 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,600 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:15:34,600 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,600 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,600 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=4}
2019-05-03 17:15:34,600 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=5}
2019-05-03 17:15:34,600 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=6}
2019-05-03 17:15:34,600 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,602 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#4], EntityKey[pl.tau.library.domain.Phone#5], EntityKey[pl.tau.library.domain.Phone#6]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,602 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,606 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,606 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,606 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:15:34,606 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,606 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,606 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=4}
2019-05-03 17:15:34,606 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=5}
2019-05-03 17:15:34,606 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=6}
2019-05-03 17:15:34,607 DEBUG [SQL]  - select phone0_.id as id1_0_, phone0_.model as model2_0_, phone0_.serialNumber as serialNu3_0_ from phone phone0_
2019-05-03 17:15:34,609 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:15:34,610 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#1]
2019-05-03 17:15:34,611 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:15:34,611 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#2]
2019-05-03 17:15:34,612 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:15:34,612 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#3]
2019-05-03 17:15:34,612 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:15:34,612 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#4]
2019-05-03 17:15:34,612 DEBUG [Loader]  - Result set row: 4
2019-05-03 17:15:34,612 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#5]
2019-05-03 17:15:34,612 DEBUG [Loader]  - Result set row: 5
2019-05-03 17:15:34,612 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#6]
2019-05-03 17:15:34,613 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#1]
2019-05-03 17:15:34,613 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#1]
2019-05-03 17:15:34,613 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#2]
2019-05-03 17:15:34,613 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#2]
2019-05-03 17:15:34,613 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#3]
2019-05-03 17:15:34,613 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#3]
2019-05-03 17:15:34,614 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#3], EntityKey[pl.tau.library.domain.Phone#4], EntityKey[pl.tau.library.domain.Phone#5], EntityKey[pl.tau.library.domain.Phone#6], EntityKey[pl.tau.library.domain.Phone#1], EntityKey[pl.tau.library.domain.Phone#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,614 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,616 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#3], EntityKey[pl.tau.library.domain.Phone#4], EntityKey[pl.tau.library.domain.Phone#5], EntityKey[pl.tau.library.domain.Phone#6], EntityKey[pl.tau.library.domain.Phone#1], EntityKey[pl.tau.library.domain.Phone#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,616 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,617 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#3], EntityKey[pl.tau.library.domain.Phone#4], EntityKey[pl.tau.library.domain.Phone#5], EntityKey[pl.tau.library.domain.Phone#6], EntityKey[pl.tau.library.domain.Phone#1], EntityKey[pl.tau.library.domain.Phone#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,617 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,617 DEBUG [DefaultLoadEventListener]  - Load request found matching entity in context, but it is scheduled for removal; returning null
2019-05-03 17:15:34,617 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#3], EntityKey[pl.tau.library.domain.Phone#4], EntityKey[pl.tau.library.domain.Phone#5], EntityKey[pl.tau.library.domain.Phone#6], EntityKey[pl.tau.library.domain.Phone#1], EntityKey[pl.tau.library.domain.Phone#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,617 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,617 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,617 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,618 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 1 deletions to 6 objects
2019-05-03 17:15:34,618 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,618 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,618 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=3}
2019-05-03 17:15:34,618 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=4}
2019-05-03 17:15:34,618 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=5}
2019-05-03 17:15:34,618 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=6}
2019-05-03 17:15:34,618 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=1}
2019-05-03 17:15:34,618 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=2}
2019-05-03 17:15:34,618 DEBUG [ActionQueue]  - Changes must be flushed to space: phone
2019-05-03 17:15:34,618 DEBUG [SQL]  - delete from phone where id=?
2019-05-03 17:15:34,621 DEBUG [SQL]  - select phone0_.id as id1_0_, phone0_.model as model2_0_, phone0_.serialNumber as serialNu3_0_ from phone phone0_
2019-05-03 17:15:34,622 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:15:34,622 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#1]
2019-05-03 17:15:34,622 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:15:34,622 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#2]
2019-05-03 17:15:34,622 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:15:34,622 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#3]
2019-05-03 17:15:34,622 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:15:34,622 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#5]
2019-05-03 17:15:34,622 DEBUG [Loader]  - Result set row: 4
2019-05-03 17:15:34,622 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#6]
2019-05-03 17:15:34,622 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:15:34,622 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#3], EntityKey[pl.tau.library.domain.Phone#5], EntityKey[pl.tau.library.domain.Phone#6], EntityKey[pl.tau.library.domain.Phone#1], EntityKey[pl.tau.library.domain.Phone#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:15:34,622 DEBUG [TransactionImpl]  - committing
2019-05-03 17:15:34,622 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,623 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,623 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
2019-05-03 17:15:34,623 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,623 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,623 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=3}
2019-05-03 17:15:34,623 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=5}
2019-05-03 17:15:34,623 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=6}
2019-05-03 17:15:34,623 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=1}
2019-05-03 17:15:34,623 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=2}
2019-05-03 17:15:34,624 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#3], EntityKey[pl.tau.library.domain.Phone#5], EntityKey[pl.tau.library.domain.Phone#6], EntityKey[pl.tau.library.domain.Phone#1], EntityKey[pl.tau.library.domain.Phone#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:15:34,624 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:15:34,624 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7ed9ae94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:15:34,624 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7ed9ae94, testMethod = deletePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:15:34,625 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:34,625 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:34,625 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@720653c2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:15:34,625 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:15:34,625 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1]
2019-05-03 17:15:34,625 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@720653c2, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:15:34,626 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@720653c2, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:15:34,626 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:15:34,626 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1]
2019-05-03 17:15:34,626 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:15:34,626 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@720653c2, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:15:34,627 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.updatePhoneTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:15:34,627 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,627 DEBUG [TransactionImpl]  - begin
2019-05-03 17:15:34,627 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:15:34,730 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/1671007220@45f24169]
2019-05-03 17:15:34,730 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@720653c2, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@2617f816]; rollback [false]
2019-05-03 17:15:34,730 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,730 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,730 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,731 DEBUG [SequenceStructure]  - Sequence value obtained: 7
2019-05-03 17:15:34,731 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,731 DEBUG [AbstractSaveEventListener]  - Generated identifier: 7, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,732 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,732 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,732 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:15:34,732 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,732 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,732 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=7}
2019-05-03 17:15:34,732 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,733 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#7]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,733 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,733 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,734 DEBUG [SequenceStructure]  - Sequence value obtained: 8
2019-05-03 17:15:34,734 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,734 DEBUG [AbstractSaveEventListener]  - Generated identifier: 8, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,734 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,734 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,734 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:15:34,734 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,734 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,734 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=7}
2019-05-03 17:15:34,734 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=8}
2019-05-03 17:15:34,734 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,735 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#7], EntityKey[pl.tau.library.domain.Phone#8]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,735 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,735 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,736 DEBUG [SequenceStructure]  - Sequence value obtained: 9
2019-05-03 17:15:34,736 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,736 DEBUG [AbstractSaveEventListener]  - Generated identifier: 9, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,736 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,736 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,737 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:15:34,737 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,737 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,737 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=7}
2019-05-03 17:15:34,737 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=8}
2019-05-03 17:15:34,737 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=9}
2019-05-03 17:15:34,737 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,738 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#7], EntityKey[pl.tau.library.domain.Phone#8], EntityKey[pl.tau.library.domain.Phone#9]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,738 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,738 DEBUG [SQL]  - select phone0_.id as id1_0_0_, phone0_.model as model2_0_0_, phone0_.serialNumber as serialNu3_0_0_ from phone phone0_ where phone0_.id=?
2019-05-03 17:15:34,741 DEBUG [ResultSetProcessorImpl]  - Starting ResultSet row #0
2019-05-03 17:15:34,741 DEBUG [EntityReferenceInitializerImpl]  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2019-05-03 17:15:34,742 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#1]
2019-05-03 17:15:34,742 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#1]
2019-05-03 17:15:34,742 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,742 DEBUG [AbstractLoadPlanBasedEntityLoader]  - Done entity load : pl.tau.library.domain.Phone#1
2019-05-03 17:15:34,743 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#7], EntityKey[pl.tau.library.domain.Phone#8], EntityKey[pl.tau.library.domain.Phone#9], EntityKey[pl.tau.library.domain.Phone#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,743 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,743 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#7], EntityKey[pl.tau.library.domain.Phone#8], EntityKey[pl.tau.library.domain.Phone#9], EntityKey[pl.tau.library.domain.Phone#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,743 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,743 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:15:34,743 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#7], EntityKey[pl.tau.library.domain.Phone#8], EntityKey[pl.tau.library.domain.Phone#9], EntityKey[pl.tau.library.domain.Phone#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:15:34,743 DEBUG [TransactionImpl]  - committing
2019-05-03 17:15:34,743 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,744 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,744 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2019-05-03 17:15:34,744 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,744 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,744 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=7}
2019-05-03 17:15:34,744 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=8}
2019-05-03 17:15:34,744 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=9}
2019-05-03 17:15:34,744 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Sony, id=1}
2019-05-03 17:15:34,744 DEBUG [SQL]  - update phone set model=?, serialNumber=? where id=?
2019-05-03 17:15:34,746 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#7], EntityKey[pl.tau.library.domain.Phone#8], EntityKey[pl.tau.library.domain.Phone#9], EntityKey[pl.tau.library.domain.Phone#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:15:34,746 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:15:34,747 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@720653c2, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:15:34,747 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@720653c2, testMethod = updatePhoneTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:15:34,747 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:34,747 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:34,748 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6ac97b84, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:15:34,748 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:15:34,748 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 6, missCount = 1]
2019-05-03 17:15:34,749 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6ac97b84, testMethod = findPhoneByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:15:34,750 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6ac97b84, testMethod = findPhoneByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:15:34,750 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:15:34,750 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 7, missCount = 1]
2019-05-03 17:15:34,750 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:15:34,750 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6ac97b84, testMethod = findPhoneByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:15:34,750 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.findPhoneByNameTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:15:34,750 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,750 DEBUG [TransactionImpl]  - begin
2019-05-03 17:15:34,750 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:15:34,853 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/1671007220@4917d36b]
2019-05-03 17:15:34,853 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6ac97b84, testMethod = findPhoneByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@2617f816]; rollback [false]
2019-05-03 17:15:34,853 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,853 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,853 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,854 DEBUG [SequenceStructure]  - Sequence value obtained: 10
2019-05-03 17:15:34,854 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,854 DEBUG [AbstractSaveEventListener]  - Generated identifier: 10, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,855 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,855 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,855 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:15:34,855 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,855 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,855 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=10}
2019-05-03 17:15:34,855 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,856 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,856 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,856 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,857 DEBUG [SequenceStructure]  - Sequence value obtained: 11
2019-05-03 17:15:34,857 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,857 DEBUG [AbstractSaveEventListener]  - Generated identifier: 11, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,857 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,857 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,857 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:15:34,857 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,857 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,857 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=11}
2019-05-03 17:15:34,857 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=10}
2019-05-03 17:15:34,857 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,859 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#11], EntityKey[pl.tau.library.domain.Phone#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,859 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,859 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,859 DEBUG [SequenceStructure]  - Sequence value obtained: 12
2019-05-03 17:15:34,859 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,860 DEBUG [AbstractSaveEventListener]  - Generated identifier: 12, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,860 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,860 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,860 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:15:34,860 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,860 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,860 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=11}
2019-05-03 17:15:34,860 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=12}
2019-05-03 17:15:34,860 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=10}
2019-05-03 17:15:34,860 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,862 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#11], EntityKey[pl.tau.library.domain.Phone#12], EntityKey[pl.tau.library.domain.Phone#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,862 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,863 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,863 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,863 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:15:34,863 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,863 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,863 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=11}
2019-05-03 17:15:34,863 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=12}
2019-05-03 17:15:34,863 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=10}
2019-05-03 17:15:34,863 DEBUG [SQL]  - select phone0_.id as id1_0_, phone0_.model as model2_0_, phone0_.serialNumber as serialNu3_0_ from phone phone0_ where phone0_.model like ?
2019-05-03 17:15:34,864 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:15:34,864 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#3]
2019-05-03 17:15:34,864 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:15:34,865 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#6]
2019-05-03 17:15:34,865 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:15:34,865 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#9]
2019-05-03 17:15:34,865 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:15:34,865 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#12]
2019-05-03 17:15:34,865 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#3]
2019-05-03 17:15:34,865 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#3]
2019-05-03 17:15:34,865 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#6]
2019-05-03 17:15:34,865 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#6]
2019-05-03 17:15:34,865 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#9]
2019-05-03 17:15:34,865 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#9]
2019-05-03 17:15:34,865 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:15:34,866 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#11], EntityKey[pl.tau.library.domain.Phone#3], EntityKey[pl.tau.library.domain.Phone#12], EntityKey[pl.tau.library.domain.Phone#6], EntityKey[pl.tau.library.domain.Phone#9], EntityKey[pl.tau.library.domain.Phone#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:15:34,866 DEBUG [TransactionImpl]  - committing
2019-05-03 17:15:34,866 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,866 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,866 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2019-05-03 17:15:34,866 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,866 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,866 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=11}
2019-05-03 17:15:34,866 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=3}
2019-05-03 17:15:34,866 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=12}
2019-05-03 17:15:34,866 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=6}
2019-05-03 17:15:34,866 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=9}
2019-05-03 17:15:34,866 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=10}
2019-05-03 17:15:34,867 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#11], EntityKey[pl.tau.library.domain.Phone#3], EntityKey[pl.tau.library.domain.Phone#12], EntityKey[pl.tau.library.domain.Phone#6], EntityKey[pl.tau.library.domain.Phone#9], EntityKey[pl.tau.library.domain.Phone#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:15:34,867 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:15:34,867 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6ac97b84, testMethod = findPhoneByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:15:34,868 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6ac97b84, testMethod = findPhoneByNameTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:15:34,868 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:34,868 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:15:34,868 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5cbb84b1, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:15:34,868 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:15:34,868 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 8, missCount = 1]
2019-05-03 17:15:34,870 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5cbb84b1, testMethod = getAllPhonesTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:15:34,870 DEBUG [TransactionalTestExecutionListener]  - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'] found for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5cbb84b1, testMethod = getAllPhonesTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:15:34,871 DEBUG [DefaultCacheAwareContextLoaderDelegate]  - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2019-05-03 17:15:34,871 DEBUG [cache]  - Spring test ApplicationContext cache statistics: [DefaultContextCache@3003697 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 9, missCount = 1]
2019-05-03 17:15:34,871 DEBUG [TransactionalTestExecutionListener]  - Retrieved default @Rollback(false) for test class [pl.tau.library.service.LibraryManagerTest].
2019-05-03 17:15:34,871 DEBUG [TransactionalTestExecutionListener]  - No method-level @Rollback override: using default rollback [false] for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5cbb84b1, testMethod = getAllPhonesTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]].
2019-05-03 17:15:34,871 DEBUG [HibernateTransactionManager]  - Creating new transaction with name [pl.tau.library.service.LibraryManagerTest.getAllPhonesTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'txManager'
2019-05-03 17:15:34,871 DEBUG [HibernateTransactionManager]  - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,871 DEBUG [TransactionImpl]  - begin
2019-05-03 17:15:34,871 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:15:34,973 DEBUG [HibernateTransactionManager]  - Exposing Hibernate transaction as JDBC [org.springframework.orm.hibernate5.HibernateTransactionManager$$Lambda$61/1671007220@2c779e5]
2019-05-03 17:15:34,973 INFO  [TransactionContext]  - Began transaction (1) for test context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5cbb84b1, testMethod = getAllPhonesTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@2617f816]; rollback [false]
2019-05-03 17:15:34,973 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,973 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,973 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,974 DEBUG [SequenceStructure]  - Sequence value obtained: 13
2019-05-03 17:15:34,974 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,974 DEBUG [AbstractSaveEventListener]  - Generated identifier: 13, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,974 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,974 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,974 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2019-05-03 17:15:34,974 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,974 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,974 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=13}
2019-05-03 17:15:34,974 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,975 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#13]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,975 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,975 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,976 DEBUG [SequenceStructure]  - Sequence value obtained: 14
2019-05-03 17:15:34,976 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,976 DEBUG [AbstractSaveEventListener]  - Generated identifier: 14, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,976 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,977 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,977 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2019-05-03 17:15:34,977 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,977 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,977 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=13}
2019-05-03 17:15:34,977 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=14}
2019-05-03 17:15:34,977 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,978 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#13], EntityKey[pl.tau.library.domain.Phone#14]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,978 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,978 DEBUG [SQL]  - call next value for hibernate_sequence
2019-05-03 17:15:34,978 DEBUG [SequenceStructure]  - Sequence value obtained: 15
2019-05-03 17:15:34,978 DEBUG [ResourceRegistryStandardImpl]  - HHH000387: ResultSet's statement was not registered
2019-05-03 17:15:34,979 DEBUG [AbstractSaveEventListener]  - Generated identifier: 15, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2019-05-03 17:15:34,979 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,979 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,979 DEBUG [AbstractFlushingEventListener]  - Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:15:34,979 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,979 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,979 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=13}
2019-05-03 17:15:34,979 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=14}
2019-05-03 17:15:34,979 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=15}
2019-05-03 17:15:34,979 DEBUG [SQL]  - insert into phone (model, serialNumber, id) values (?, ?, ?)
2019-05-03 17:15:34,980 DEBUG [HibernateTransactionManager]  - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#13], EntityKey[pl.tau.library.domain.Phone#14], EntityKey[pl.tau.library.domain.Phone#15]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2019-05-03 17:15:34,980 DEBUG [HibernateTransactionManager]  - Participating in existing transaction
2019-05-03 17:15:34,980 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,980 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,980 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2019-05-03 17:15:34,980 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,981 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,981 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=13}
2019-05-03 17:15:34,981 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=14}
2019-05-03 17:15:34,981 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=15}
2019-05-03 17:15:34,981 DEBUG [SQL]  - select phone0_.id as id1_0_, phone0_.model as model2_0_, phone0_.serialNumber as serialNu3_0_ from phone phone0_
2019-05-03 17:15:34,981 DEBUG [Loader]  - Result set row: 0
2019-05-03 17:15:34,981 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#1]
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result set row: 1
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#2]
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result set row: 2
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#3]
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result set row: 3
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#5]
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result set row: 4
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#6]
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result set row: 5
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#7]
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result set row: 6
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#8]
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result set row: 7
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#9]
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result set row: 8
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#10]
2019-05-03 17:15:34,982 DEBUG [Loader]  - Result set row: 9
2019-05-03 17:15:34,983 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#11]
2019-05-03 17:15:34,983 DEBUG [Loader]  - Result set row: 10
2019-05-03 17:15:34,983 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#12]
2019-05-03 17:15:34,983 DEBUG [Loader]  - Result set row: 11
2019-05-03 17:15:34,983 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#13]
2019-05-03 17:15:34,983 DEBUG [Loader]  - Result set row: 12
2019-05-03 17:15:34,983 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#14]
2019-05-03 17:15:34,983 DEBUG [Loader]  - Result set row: 13
2019-05-03 17:15:34,983 DEBUG [Loader]  - Result row: EntityKey[pl.tau.library.domain.Phone#15]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#1]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#1]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#2]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#2]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#3]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#3]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#5]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#5]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#6]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#6]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#7]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#7]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#8]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#8]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#9]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#9]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#10]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#10]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#11]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#11]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Resolving associations for [pl.tau.library.domain.Phone#12]
2019-05-03 17:15:34,983 DEBUG [TwoPhaseLoad]  - Done materializing entity [pl.tau.library.domain.Phone#12]
2019-05-03 17:15:34,984 DEBUG [HibernateTransactionManager]  - Initiating transaction commit
2019-05-03 17:15:34,984 DEBUG [HibernateTransactionManager]  - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#11], EntityKey[pl.tau.library.domain.Phone#12], EntityKey[pl.tau.library.domain.Phone#13], EntityKey[pl.tau.library.domain.Phone#14], EntityKey[pl.tau.library.domain.Phone#15], EntityKey[pl.tau.library.domain.Phone#1], EntityKey[pl.tau.library.domain.Phone#2], EntityKey[pl.tau.library.domain.Phone#3], EntityKey[pl.tau.library.domain.Phone#5], EntityKey[pl.tau.library.domain.Phone#6], EntityKey[pl.tau.library.domain.Phone#7], EntityKey[pl.tau.library.domain.Phone#8], EntityKey[pl.tau.library.domain.Phone#9], EntityKey[pl.tau.library.domain.Phone#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2019-05-03 17:15:34,984 DEBUG [TransactionImpl]  - committing
2019-05-03 17:15:34,984 DEBUG [AbstractFlushingEventListener]  - Processing flush-time cascades
2019-05-03 17:15:34,984 DEBUG [AbstractFlushingEventListener]  - Dirty checking collections
2019-05-03 17:15:34,984 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 insertions, 0 updates, 0 deletions to 14 objects
2019-05-03 17:15:34,984 DEBUG [AbstractFlushingEventListener]  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - Listing entities:
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=11}
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=12}
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=13}
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=14}
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=15}
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Sony, id=1}
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=2}
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=3}
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=5}
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=6}
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=7}
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=123456, model=iPhone, id=8}
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=99999, model=Nokia, id=9}
2019-05-03 17:15:34,984 DEBUG [EntityPrinter]  - pl.tau.library.domain.Phone{serialNumber=456, model=Motorolla, id=10}
2019-05-03 17:15:34,985 DEBUG [HibernateTransactionManager]  - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[pl.tau.library.domain.Phone#11], EntityKey[pl.tau.library.domain.Phone#12], EntityKey[pl.tau.library.domain.Phone#13], EntityKey[pl.tau.library.domain.Phone#14], EntityKey[pl.tau.library.domain.Phone#15], EntityKey[pl.tau.library.domain.Phone#1], EntityKey[pl.tau.library.domain.Phone#2], EntityKey[pl.tau.library.domain.Phone#3], EntityKey[pl.tau.library.domain.Phone#5], EntityKey[pl.tau.library.domain.Phone#6], EntityKey[pl.tau.library.domain.Phone#7], EntityKey[pl.tau.library.domain.Phone#8], EntityKey[pl.tau.library.domain.Phone#9], EntityKey[pl.tau.library.domain.Phone#10]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2019-05-03 17:15:34,985 DEBUG [JdbcCoordinatorImpl]  - HHH000420: Closing un-released batch
2019-05-03 17:15:34,985 INFO  [TransactionContext]  - Committed transaction for test: [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5cbb84b1, testMethod = getAllPhonesTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]
2019-05-03 17:15:34,986 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test method: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5cbb84b1, testMethod = getAllPhonesTest@LibraryManagerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:15:34,986 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:15:34,987 DEBUG [GenericApplicationContext]  - Closing org.springframework.context.support.GenericApplicationContext@711f39f9, started on Fri May 03 17:15:32 CEST 2019
2019-05-03 17:15:34,988 DEBUG [SessionFactoryImpl]  - HHH000031: Closing
2019-05-03 17:15:34,988 DEBUG [AbstractServiceRegistryImpl]  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2019-05-03 17:15:34,988 DEBUG [BootstrapServiceRegistryImpl]  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2019-05-03 17:41:14,766 DEBUG [SpringJUnit4ClassRunner]  - SpringJUnit4ClassRunner constructor called with [class pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:14,775 DEBUG [BootstrapUtils]  - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2019-05-03 17:41:14,784 DEBUG [BootstrapUtils]  - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2019-05-03 17:41:14,808 DEBUG [BootstrapUtils]  - Instantiating TestContextBootstrapper for test class [pl.tau.library.service.LibraryManagerTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2019-05-03 17:41:14,832 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@55f3ddb1 declaringClass = 'pl.tau.library.service.LibraryManagerTest', classes = '{}', locations = '{classpath:/beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2019-05-03 17:41:14,849 DEBUG [ActiveProfilesUtils]  - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:14,849 DEBUG [DefaultTestContextBootstrapper]  - @TestExecutionListeners is not present for class [pl.tau.library.service.LibraryManagerTest]: using defaults.
2019-05-03 17:41:14,850 INFO  [DefaultTestContextBootstrapper]  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-05-03 17:41:14,853 DEBUG [DefaultTestContextBootstrapper]  - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
2019-05-03 17:41:14,859 INFO  [DefaultTestContextBootstrapper]  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c]
2019-05-03 17:41:14,861 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:14,861 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:14,870 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:14,870 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:14,871 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:14,872 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:14,872 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:14,872 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:14,874 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:41:14,874 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:14,874 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:14,875 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:41:14,876 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:41:14,876 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:41:14,913 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:41:15,070 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:41:15,089 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:41:15,089 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@711f39f9
2019-05-03 17:41:15,109 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:41:15,174 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:41:15,238 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:15,238 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:15,238 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:15,238 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:15,238 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:41:15,239 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:41:15,240 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:41:15,242 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:41:15,242 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:41:15,245 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:41:15,245 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:41:15,267 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:41:15,294 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:41:15,298 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:41:15,307 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:41:15,308 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:41:15,309 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:41:15,372 DEBUG [logging]  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-05-03 17:41:15,379 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:41:15,380 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:41:15,382 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:41:15,441 INFO  [Version]  - HHH000412: Hibernate Core {5.1.6.Final}
2019-05-03 17:41:15,442 INFO  [Environment]  - HHH000206: hibernate.properties not found
2019-05-03 17:41:15,443 INFO  [Environment]  - HHH000021: Bytecode provider name : javassist
2019-05-03 17:41:15,456 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:41:15,467 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:41:15,467 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:41:15,483 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:41:15,489 INFO  [Version]  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-05-03 17:41:15,503 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:15,503 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:15,503 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:15,504 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:41:15,505 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:41:15,505 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:41:15,506 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:15,506 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:15,506 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:15,507 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:15,507 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:15,507 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:15,508 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:15,508 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:15,509 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:15,510 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:15,510 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:15,510 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:15,511 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:15,511 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:15,511 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:15,514 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:15,514 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:15,514 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:15,515 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:15,515 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:15,515 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:15,516 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:15,516 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:15,519 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:15,519 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:15,520 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:15,520 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:15,520 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:41:15,521 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:41:15,521 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:15,522 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:15,523 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:15,523 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:15,524 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:15,524 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:15,525 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:15,525 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:15,525 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:15,527 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:41:15,527 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:15,527 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:15,528 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:15,528 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:41:15,529 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:15,529 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:15,529 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:15,529 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:15,530 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:15,530 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:15,531 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:15,531 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:15,532 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:15,532 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:15,532 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:41:15,534 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:15,534 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:15,534 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:15,535 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:15,535 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:15,535 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:15,536 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:41:15,537 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:41:15,537 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:15,537 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:15,537 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:15,538 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:15,538 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:15,538 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:15,539 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:41:15,539 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:41:15,541 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:15,541 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:15,541 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:41:15,544 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:15,544 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:15,547 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:15,547 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:15,547 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:41:15,547 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:41:15,548 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:41:15,550 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:15,550 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:15,551 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bec854f
2019-05-03 17:41:15,551 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31edaa7d
2019-05-03 17:41:15,551 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26adfd2d
2019-05-03 17:41:15,551 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336e6b6
2019-05-03 17:41:15,551 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c3fdb62
2019-05-03 17:41:15,551 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205d38da
2019-05-03 17:41:15,551 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6950ed69
2019-05-03 17:41:15,551 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dd7b5a3
2019-05-03 17:41:15,559 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:15,706 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:15,707 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:15,707 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:41:15,715 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:41:15,738 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:41:15,817 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:41:15,817 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:41:15,818 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:15,818 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:15,818 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:41:15,819 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:41:15,819 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:41:15,820 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:15,821 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:41:15,821 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:41:15,821 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:41:15,822 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:41:15,822 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:15,822 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:41:15,868 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:41:15,885 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:41:15,897 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:41:15,897 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:41:15,903 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:41:15,907 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:41:15,909 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:41:15,923 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:15,925 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:41:15,926 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:41:15,927 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:41:15,928 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:41:15,930 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:15,930 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:41:15,931 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:41:15,931 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:41:15,931 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:41:15,931 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:15,931 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:41:15,931 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:41:15,931 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:41:15,931 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:41:15,932 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:41:15,932 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:41:15,932 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:41:15,933 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:41:15,952 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:41:15,953 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:41:15,953 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:41:15,953 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:41:15,954 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:41:15,954 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:41:15,954 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:41:15,954 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:41:15,954 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:41:15,954 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:41:15,954 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:41:15,954 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:41:15,954 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:41:15,954 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:41:15,954 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:41:15,954 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:41:15,955 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:41:15,981 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:41:15,982 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4264b240, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:41:15,988 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:41:16,008 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:16,008 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:16,017 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:16,017 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:16,056 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:41:16,056 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:41:16,056 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:41:16,056 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:41:16,056 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:41:16,056 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:41:16,073 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ed0ff3]
2019-05-03 17:41:16,074 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,074 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,074 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,084 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,086 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,088 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,088 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7f2382]
2019-05-03 17:41:16,088 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,088 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,088 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,088 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,088 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,088 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,088 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6815c5f2]
2019-05-03 17:41:16,088 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,088 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,088 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,089 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,089 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,089 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,089 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60094a13]
2019-05-03 17:41:16,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,089 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,089 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,089 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,089 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,089 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c32886a]
2019-05-03 17:41:16,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,089 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,089 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,089 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,089 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,089 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b892d5]
2019-05-03 17:41:16,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,089 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,089 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,090 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,090 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,090 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,090 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3546d80f]
2019-05-03 17:41:16,090 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,090 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,090 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,090 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,090 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,090 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,090 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3670f00]
2019-05-03 17:41:16,090 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,090 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,090 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,090 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,090 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,090 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,090 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ab18da]
2019-05-03 17:41:16,090 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,091 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,091 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,091 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,091 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,091 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,091 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42257bdd]
2019-05-03 17:41:16,091 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,091 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,091 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,091 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,091 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,091 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,091 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687a762c]
2019-05-03 17:41:16,091 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,091 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,091 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,091 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,091 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,091 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,102 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,102 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,102 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:41:16,117 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:16,240 DEBUG [SQL]  - create table Book (id bigint not null, title varchar(255), year integer, primary key (id))
2019-05-03 17:41:16,244 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:41:16,245 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:41:16,247 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:41:16,248 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:41:16,248 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:41:16,252 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:41:16,252 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:41:16,280 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:41:16,288 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:41:16,288 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:16,304 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:16,313 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:16,313 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:16,320 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:41:16,321 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:16,322 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:41:16,322 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:16,323 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:41:16,323 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:16,323 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:16,324 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:41:16,329 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:16,329 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:16,329 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:41:16,329 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:41:16,330 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:16,330 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:41:16,330 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:16,330 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:16,330 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:16,331 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:16,331 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:16,331 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:41:16,331 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:16,331 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:16,331 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:41:16,331 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:16,336 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:16,336 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:41:16,336 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:16,339 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:41:16,339 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:16,340 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:41:16,343 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@5b87ed94]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:41:16,351 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:16,351 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:16,351 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@632aa1a3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:41:16,351 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:41:16,351 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:41:16,351 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:41:16,376 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:41:16,377 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:41:16,377 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@20765ed5
2019-05-03 17:41:16,378 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:41:16,383 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:41:16,384 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:16,385 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:16,385 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:16,385 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:16,385 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:41:16,385 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:41:16,385 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:41:16,386 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:41:16,386 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:41:16,386 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:41:16,386 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:41:16,388 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:41:16,389 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:41:16,389 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:41:16,390 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:41:16,390 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:41:16,391 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:41:16,393 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:41:16,393 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:41:16,394 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:41:16,396 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:41:16,399 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:41:16,399 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:41:16,401 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:41:16,402 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:16,402 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:16,402 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:16,403 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44d70181
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6aa648b9
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@23c650a3
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@742d4e15
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@88a8218
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50b1f030
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4163f1cd
2019-05-03 17:41:16,404 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5fa05212
2019-05-03 17:41:16,405 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:16,506 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:16,506 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:16,506 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:41:16,506 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:41:16,508 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:41:16,510 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:41:16,511 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:41:16,511 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:16,511 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:16,511 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:41:16,511 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:41:16,511 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:41:16,511 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:16,511 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:41:16,511 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:41:16,511 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:41:16,511 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:41:16,511 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:16,511 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:41:16,511 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:41:16,511 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:41:16,511 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:41:16,511 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:41:16,511 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:41:16,511 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:41:16,511 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:41:16,512 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:16,512 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:41:16,512 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:41:16,512 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:41:16,512 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:41:16,512 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:16,512 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:41:16,512 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:41:16,512 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:41:16,512 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:41:16,512 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:16,512 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:41:16,512 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:41:16,512 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:41:16,512 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:41:16,512 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:41:16,512 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:41:16,512 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:41:16,512 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:41:16,513 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:41:16,513 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:41:16,513 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:41:16,513 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:41:16,513 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:41:16,513 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:41:16,513 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:41:16,513 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:41:16,513 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:41:16,513 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:41:16,513 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:41:16,513 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:41:16,513 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:41:16,513 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:41:16,513 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:41:16,513 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:41:16,514 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:41:16,514 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@219f4597, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@17f460bb, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:41:16,514 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:41:16,514 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:16,514 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:16,515 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:16,515 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:16,515 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:41:16,515 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:41:16,515 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:41:16,515 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:41:16,515 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:41:16,515 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:41:16,515 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b989dc7]
2019-05-03 17:41:16,515 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,515 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,515 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,515 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,515 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,515 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,516 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42561fba]
2019-05-03 17:41:16,516 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,516 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,516 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,516 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,516 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,516 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,516 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46b695ec]
2019-05-03 17:41:16,516 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,516 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,516 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,516 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,516 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,516 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,516 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@325f7fa9]
2019-05-03 17:41:16,516 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,516 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,516 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,517 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,517 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,517 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,517 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a5d002]
2019-05-03 17:41:16,517 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,517 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,517 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,517 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,517 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,517 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,517 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aa6202e]
2019-05-03 17:41:16,517 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,517 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,517 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,517 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,517 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,517 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,517 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@771158fb]
2019-05-03 17:41:16,517 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,517 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,517 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,517 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,517 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,517 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,518 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62d0ac62]
2019-05-03 17:41:16,518 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,518 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,518 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,518 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,518 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,518 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,518 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6826c41e]
2019-05-03 17:41:16,518 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,518 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,518 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,518 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,518 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,518 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,518 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64d43929]
2019-05-03 17:41:16,518 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,518 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,518 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,518 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,518 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,518 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,518 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@437ebf59]
2019-05-03 17:41:16,518 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,519 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,519 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,519 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,519 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,519 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,519 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,519 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,519 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:41:16,519 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:16,629 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:41:16,629 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:41:16,629 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:41:16,630 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:41:16,630 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:41:16,630 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:41:16,630 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:41:16,630 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:41:16,631 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:41:16,631 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:41:16,631 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:16,631 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:16,632 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:16,632 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:16,633 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:41:16,633 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:16,633 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:41:16,633 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:16,634 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:41:16,634 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:16,634 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:16,634 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:41:16,634 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:16,634 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:16,635 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:41:16,635 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:41:16,635 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:16,635 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:41:16,635 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:16,635 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:16,636 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:16,636 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:16,636 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:16,636 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:41:16,636 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:16,636 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:16,636 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:41:16,636 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:16,636 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:16,636 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:41:16,636 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:16,636 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:41:16,636 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:16,637 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:41:16,637 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@632aa1a3]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:41:16,639 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:16,639 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:16,639 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6bfdb014, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:41:16,639 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:41:16,639 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:41:16,639 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:41:16,660 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:41:16,661 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:41:16,661 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@72889280
2019-05-03 17:41:16,662 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:41:16,672 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:41:16,673 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:16,673 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:16,673 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:16,673 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:16,673 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:41:16,673 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:41:16,674 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:41:16,674 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:41:16,674 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:41:16,674 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:41:16,674 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:41:16,676 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:41:16,677 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:41:16,677 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:41:16,678 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:41:16,678 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:41:16,679 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:41:16,681 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:41:16,681 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:41:16,681 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:41:16,683 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:41:16,683 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:41:16,683 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:41:16,684 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:41:16,684 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:16,685 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@46044faa
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1358b28e
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a78dacd
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19f9d595
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7de4a01f
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bfeb1ef
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@778ca8ef
2019-05-03 17:41:16,686 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@208e9ef6
2019-05-03 17:41:16,686 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:16,788 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:16,788 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:16,788 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:41:16,788 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:41:16,790 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:41:16,792 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:41:16,792 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:41:16,792 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:16,792 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:16,792 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:41:16,792 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:41:16,792 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:41:16,792 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:16,792 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:41:16,792 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:41:16,792 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:41:16,793 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:41:16,793 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:16,793 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:41:16,793 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:41:16,793 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:41:16,793 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:41:16,793 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:41:16,793 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:41:16,793 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:41:16,793 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:41:16,793 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:16,794 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:41:16,794 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:41:16,794 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:41:16,794 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:41:16,794 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:16,794 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:41:16,794 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:41:16,794 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:41:16,794 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:41:16,794 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:16,794 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:41:16,794 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:41:16,794 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:41:16,794 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:41:16,794 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:41:16,794 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:41:16,794 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:41:16,794 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:41:16,795 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:41:16,795 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:41:16,795 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:41:16,795 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:41:16,795 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:41:16,795 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:41:16,795 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:41:16,795 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:41:16,795 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:41:16,795 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:41:16,795 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:41:16,795 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:41:16,795 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:41:16,795 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:41:16,795 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:41:16,795 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:41:16,796 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:41:16,796 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@111610e6, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@5bdaf2ce, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:41:16,796 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:41:16,796 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:16,796 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:16,796 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:16,796 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:16,797 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:41:16,797 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:41:16,797 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:41:16,797 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:41:16,797 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:41:16,797 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:41:16,797 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fcc529]
2019-05-03 17:41:16,797 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,797 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,797 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,797 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,797 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,797 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,797 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4beddc56]
2019-05-03 17:41:16,797 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,797 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,797 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,797 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,798 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,798 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,798 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b812421]
2019-05-03 17:41:16,798 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,798 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,798 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,798 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,798 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,798 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,798 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7882c44a]
2019-05-03 17:41:16,798 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,798 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,798 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,798 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,798 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,798 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,798 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20d11153]
2019-05-03 17:41:16,798 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,798 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,798 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,798 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,798 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,798 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,798 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5649ec46]
2019-05-03 17:41:16,798 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,798 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,798 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,798 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,799 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,799 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,799 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502f8b57]
2019-05-03 17:41:16,799 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,799 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,799 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,799 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,799 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,799 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,799 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fe01805]
2019-05-03 17:41:16,799 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,799 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,799 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,799 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,799 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,799 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,799 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@794b435f]
2019-05-03 17:41:16,799 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,799 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,799 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,799 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,799 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,799 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:16,799 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@779dfe55]
2019-05-03 17:41:16,799 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,799 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,800 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,800 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,800 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,800 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,800 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1144a55a]
2019-05-03 17:41:16,800 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:16,800 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:16,800 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:16,800 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:16,800 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:16,800 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,800 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,800 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:16,800 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:41:16,800 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:16,911 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:41:16,911 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:41:16,911 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:41:16,913 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:41:16,913 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:41:16,913 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:41:16,913 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:41:16,913 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:41:16,913 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:41:16,914 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:41:16,914 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:16,914 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:16,914 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:16,914 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:16,915 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:41:16,915 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:16,915 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:41:16,915 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:16,915 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:41:16,915 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:16,916 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:16,916 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:41:16,916 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:16,916 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:16,916 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:41:16,916 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:41:16,916 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:16,917 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:41:16,917 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:16,917 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:16,917 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:16,917 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:16,917 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:16,917 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:41:16,917 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:16,918 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:16,918 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:41:16,918 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:16,918 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:16,918 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:41:16,918 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:16,918 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:41:16,918 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:16,918 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:41:16,919 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@6bfdb014]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:41:16,921 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:16,921 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:16,921 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@547c04c4, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:41:16,921 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:41:16,922 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:41:16,922 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:41:16,941 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:41:16,942 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:41:16,942 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@30e92cb9
2019-05-03 17:41:16,942 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:41:16,946 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:41:16,947 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:16,947 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:16,947 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:16,947 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:16,948 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:41:16,948 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:41:16,948 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:41:16,948 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:41:16,949 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:41:16,949 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:41:16,949 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:41:16,951 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:41:16,951 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:41:16,952 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:41:16,952 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:41:16,952 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:41:16,953 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:41:16,955 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:41:16,955 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:41:16,955 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:41:16,957 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:41:16,958 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:41:16,958 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:41:16,958 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:16,958 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3c5a54b7
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61f2c3f0
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@291120f4
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@417ad4f3
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f6bcf87
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@58f174d9
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@78c7f9b3
2019-05-03 17:41:16,959 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6f8d7714
2019-05-03 17:41:16,959 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:17,062 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:17,062 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:17,062 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:41:17,062 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:41:17,064 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:17,066 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:41:17,066 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:41:17,066 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:41:17,066 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:41:17,066 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:41:17,066 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:41:17,066 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:41:17,067 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:41:17,067 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:17,067 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:41:17,067 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:41:17,067 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:41:17,067 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:41:17,067 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:17,067 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:41:17,067 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:41:17,067 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:41:17,067 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:41:17,067 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:17,067 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:41:17,067 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:41:17,067 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:41:17,067 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:41:17,068 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:41:17,068 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:41:17,068 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:41:17,068 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:41:17,068 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:41:17,068 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:41:17,068 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:41:17,068 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:41:17,068 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:41:17,068 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:41:17,068 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:41:17,068 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:41:17,068 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:41:17,068 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:41:17,068 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:41:17,069 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:41:17,069 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:41:17,069 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:41:17,069 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:41:17,069 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:41:17,069 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:41:17,069 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:41:17,069 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:41:17,069 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:41:17,069 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:41:17,069 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:41:17,069 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:41:17,069 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@e8fadb0, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@89c65d5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:41:17,070 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:41:17,070 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:17,070 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:17,070 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:17,070 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:17,070 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:41:17,070 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:41:17,070 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:41:17,070 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:41:17,070 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:41:17,070 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:41:17,070 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d3e6d34]
2019-05-03 17:41:17,070 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,070 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,070 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,070 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,071 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,071 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:17,071 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a94fa5]
2019-05-03 17:41:17,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,071 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,071 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,071 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,071 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:17,071 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2873d672]
2019-05-03 17:41:17,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,071 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,071 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,071 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,071 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,071 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@577f9109]
2019-05-03 17:41:17,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,071 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,071 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,071 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,071 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,071 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757529a4]
2019-05-03 17:41:17,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,071 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,071 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,071 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,072 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,072 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,072 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
2019-05-03 17:41:17,072 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,072 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,072 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,072 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,072 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,072 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,072 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec77191]
2019-05-03 17:41:17,072 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,072 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,072 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,072 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,072 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,072 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,072 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450078a]
2019-05-03 17:41:17,072 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,072 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,072 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,072 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,072 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,072 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,072 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
2019-05-03 17:41:17,072 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,072 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,072 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,072 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,072 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,072 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,072 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1792e7]
2019-05-03 17:41:17,072 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,072 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,073 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,073 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,073 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,073 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:17,073 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eb631b8]
2019-05-03 17:41:17,073 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,073 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,073 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,073 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,073 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,073 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:17,073 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:17,073 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:17,073 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:41:17,073 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:17,184 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:41:17,184 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:41:17,184 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:41:17,185 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:41:17,185 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:41:17,185 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:41:17,186 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:41:17,186 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:41:17,186 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:41:17,187 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:41:17,187 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:17,187 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:17,187 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:17,187 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:17,187 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:41:17,188 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:17,188 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:41:17,188 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:17,188 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:41:17,188 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:17,188 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:17,188 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:41:17,188 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:17,189 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:17,189 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:41:17,189 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:41:17,189 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:17,189 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:41:17,189 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:17,189 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:17,189 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:17,189 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:17,190 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:17,190 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:41:17,190 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:17,190 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:17,190 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:41:17,190 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:17,190 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:17,190 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:41:17,190 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:17,190 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:41:17,190 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:17,190 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:41:17,190 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@547c04c4]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:41:17,193 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:17,193 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:17,193 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7ed9ae94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:41:17,193 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:41:17,193 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:41:17,193 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:41:17,214 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:41:17,215 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:41:17,216 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@66908383
2019-05-03 17:41:17,216 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:41:17,221 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:41:17,222 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:17,222 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:17,222 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:17,222 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:17,222 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:41:17,222 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:41:17,222 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:41:17,223 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:41:17,223 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:41:17,223 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:41:17,223 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:41:17,224 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:41:17,225 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:41:17,225 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:41:17,226 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:41:17,226 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:41:17,226 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:41:17,228 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:41:17,228 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:41:17,228 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:41:17,230 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:41:17,231 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:41:17,231 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:41:17,231 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:17,231 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@72458efc
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@36bc415e
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a74d228
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349d0836
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6a714237
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e134896
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72ba28ee
2019-05-03 17:41:17,232 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e3a5237
2019-05-03 17:41:17,232 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:17,335 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:17,335 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:17,335 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:41:17,335 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:41:17,337 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:17,339 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:41:17,339 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:41:17,339 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:41:17,339 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:41:17,339 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:41:17,339 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:41:17,339 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:41:17,339 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:41:17,340 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:17,340 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:41:17,340 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:41:17,340 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:41:17,340 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:41:17,340 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:17,340 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:41:17,340 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:41:17,340 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:41:17,340 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:41:17,340 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:17,340 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:41:17,340 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:41:17,340 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:41:17,340 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:41:17,340 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:41:17,340 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:41:17,340 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:41:17,341 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:41:17,341 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:41:17,341 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:41:17,341 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:41:17,341 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:41:17,341 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:41:17,341 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:41:17,341 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:41:17,341 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:41:17,341 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:41:17,341 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:41:17,341 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:41:17,341 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:41:17,341 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:41:17,341 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:41:17,341 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:41:17,341 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:41:17,342 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:41:17,342 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@332f25c8, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@2d7e1102, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:41:17,342 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:41:17,342 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:17,342 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:17,342 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:17,342 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:17,343 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:41:17,343 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:41:17,343 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:41:17,343 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:41:17,343 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:41:17,343 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:41:17,343 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61d01788]
2019-05-03 17:41:17,343 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,343 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,343 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,343 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,343 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,343 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:17,343 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@264c5d07]
2019-05-03 17:41:17,343 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,343 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,343 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,343 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,343 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,343 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:17,344 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69cac930]
2019-05-03 17:41:17,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,344 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,344 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,344 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,344 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,344 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d39f2d8]
2019-05-03 17:41:17,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,344 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,344 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,344 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,344 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,344 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55ea2d70]
2019-05-03 17:41:17,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,344 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,344 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,344 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,344 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,344 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@175acfb2]
2019-05-03 17:41:17,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,344 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,344 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,344 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,344 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,344 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e868ef5]
2019-05-03 17:41:17,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,344 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,344 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,344 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,345 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,345 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,345 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30af7377]
2019-05-03 17:41:17,345 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,345 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,345 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,345 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,345 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,345 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,345 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dab9dd6]
2019-05-03 17:41:17,345 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,345 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,345 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,345 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,345 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,345 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:17,345 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f099cef]
2019-05-03 17:41:17,345 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,345 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,345 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,345 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,345 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,345 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:17,345 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bff2185]
2019-05-03 17:41:17,345 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:17,345 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:17,345 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:17,345 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:17,345 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:17,345 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:17,346 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:17,346 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:17,346 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:41:17,346 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:17,456 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:41:17,457 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:41:17,457 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:41:17,458 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:41:17,458 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:41:17,458 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:41:17,458 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:41:17,458 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:41:17,458 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:41:17,459 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:41:17,459 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:17,459 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:17,459 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:17,459 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:17,460 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:41:17,460 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:17,460 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:41:17,460 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:17,460 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:41:17,460 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:17,461 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:17,461 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:41:17,461 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:17,461 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:17,461 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:41:17,461 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:41:17,461 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:17,462 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:41:17,462 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:17,462 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:17,462 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:17,462 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:17,462 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:17,462 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:41:17,462 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:17,462 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:17,462 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:41:17,462 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:17,462 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:17,462 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:41:17,462 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:17,462 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:41:17,462 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:17,462 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:41:17,463 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@7ed9ae94]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:41:17,465 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:41:49,163 DEBUG [SpringJUnit4ClassRunner]  - SpringJUnit4ClassRunner constructor called with [class pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:49,171 DEBUG [BootstrapUtils]  - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2019-05-03 17:41:49,177 DEBUG [BootstrapUtils]  - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2019-05-03 17:41:49,185 DEBUG [BootstrapUtils]  - Instantiating TestContextBootstrapper for test class [pl.tau.library.service.LibraryManagerTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2019-05-03 17:41:49,208 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@55f3ddb1 declaringClass = 'pl.tau.library.service.LibraryManagerTest', classes = '{}', locations = '{classpath:/beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2019-05-03 17:41:49,227 DEBUG [ActiveProfilesUtils]  - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:49,228 DEBUG [DefaultTestContextBootstrapper]  - @TestExecutionListeners is not present for class [pl.tau.library.service.LibraryManagerTest]: using defaults.
2019-05-03 17:41:49,229 INFO  [DefaultTestContextBootstrapper]  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-05-03 17:41:49,233 DEBUG [DefaultTestContextBootstrapper]  - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
2019-05-03 17:41:49,240 INFO  [DefaultTestContextBootstrapper]  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c]
2019-05-03 17:41:49,242 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:49,242 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:49,251 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:49,251 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:49,252 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:49,252 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:49,253 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:49,253 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:49,255 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:41:49,255 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:49,255 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:49,256 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:41:49,257 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:41:49,258 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:41:49,296 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:41:49,445 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:41:49,466 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:41:49,466 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@711f39f9
2019-05-03 17:41:49,499 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:41:49,564 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:41:49,605 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:49,605 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:49,606 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:49,606 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:49,606 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:41:49,610 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:41:49,610 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:41:49,613 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:41:49,614 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:41:49,617 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:41:49,617 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:41:49,642 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:41:49,671 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:41:49,675 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:41:49,689 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:41:49,690 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:41:49,691 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:41:49,733 DEBUG [logging]  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-05-03 17:41:49,740 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:41:49,742 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:41:49,743 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:41:49,835 INFO  [Version]  - HHH000412: Hibernate Core {5.1.6.Final}
2019-05-03 17:41:49,837 INFO  [Environment]  - HHH000206: hibernate.properties not found
2019-05-03 17:41:49,838 INFO  [Environment]  - HHH000021: Bytecode provider name : javassist
2019-05-03 17:41:49,850 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:41:49,856 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:41:49,856 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:41:49,865 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:41:49,871 INFO  [Version]  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-05-03 17:41:49,884 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:49,884 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:49,884 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:49,884 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:41:49,885 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:41:49,885 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:41:49,886 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:49,886 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:49,886 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:49,887 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:49,887 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:49,887 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:49,888 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:49,888 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:49,888 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:49,888 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:49,888 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:49,888 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:49,889 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:49,889 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:49,889 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:49,890 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:49,890 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:49,890 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:49,891 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:49,891 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:49,891 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:49,892 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:49,892 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:49,893 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:49,893 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:49,893 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:49,893 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:49,894 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:41:49,894 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:41:49,895 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:49,895 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:49,896 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:49,896 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:49,897 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:49,897 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:49,898 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:49,898 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:49,898 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:49,899 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:41:49,900 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:49,900 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:49,900 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:49,900 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:41:49,901 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:49,901 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:49,901 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:49,901 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:49,902 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:49,902 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:49,902 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:49,902 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:49,903 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:49,903 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:49,903 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:41:49,904 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:49,904 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:49,904 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:49,905 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:49,905 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:49,905 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:49,905 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:41:49,906 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:41:49,906 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:49,906 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:49,906 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:49,907 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:49,907 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:49,907 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:49,908 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:41:49,908 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:41:49,910 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:49,911 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:49,911 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:41:49,913 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:49,913 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:49,915 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:49,915 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:49,915 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:41:49,915 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:41:49,916 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:41:49,918 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:49,918 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:49,918 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bec854f
2019-05-03 17:41:49,918 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31edaa7d
2019-05-03 17:41:49,918 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26adfd2d
2019-05-03 17:41:49,918 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336e6b6
2019-05-03 17:41:49,918 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c3fdb62
2019-05-03 17:41:49,918 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205d38da
2019-05-03 17:41:49,918 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6950ed69
2019-05-03 17:41:49,918 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dd7b5a3
2019-05-03 17:41:49,926 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:50,068 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:50,068 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:50,068 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:41:50,077 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:41:50,099 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:41:50,185 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:41:50,185 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:41:50,185 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:50,185 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:50,185 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:41:50,187 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:41:50,187 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:41:50,188 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:50,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:41:50,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:41:50,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:41:50,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:41:50,190 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:50,190 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:41:50,236 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:41:50,253 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:41:50,265 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:41:50,265 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:41:50,270 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:41:50,274 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:41:50,276 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:41:50,290 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:50,292 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:41:50,293 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:41:50,294 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:41:50,296 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:41:50,298 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:50,298 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:41:50,298 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:41:50,299 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:41:50,299 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:41:50,299 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:50,299 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:41:50,299 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:41:50,299 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:41:50,299 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:41:50,300 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:41:50,300 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:41:50,300 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:41:50,301 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:41:50,321 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:41:50,322 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:41:50,322 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:41:50,322 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:41:50,322 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:41:50,322 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:41:50,322 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:41:50,322 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:41:50,322 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:41:50,322 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:41:50,322 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:41:50,322 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:41:50,323 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:41:50,323 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:41:50,323 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:41:50,323 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:41:50,323 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:41:50,323 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:41:50,323 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:41:50,323 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:41:50,323 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:41:50,323 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:41:50,352 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:41:50,352 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4264b240, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:41:50,359 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:41:50,377 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:50,377 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:50,386 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:50,386 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:50,425 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:41:50,425 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:41:50,425 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:41:50,425 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:41:50,425 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:41:50,425 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:41:50,442 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ed0ff3]
2019-05-03 17:41:50,443 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,443 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,444 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,453 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,456 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,457 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:50,457 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7f2382]
2019-05-03 17:41:50,457 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,457 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,457 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,457 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,458 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,458 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:50,458 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6815c5f2]
2019-05-03 17:41:50,458 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,458 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,458 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,458 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,458 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,458 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,458 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60094a13]
2019-05-03 17:41:50,458 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,458 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,458 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,458 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,458 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,459 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,459 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c32886a]
2019-05-03 17:41:50,459 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,459 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,459 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,459 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,459 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,459 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,459 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b892d5]
2019-05-03 17:41:50,459 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,459 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,459 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,459 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,459 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,459 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,459 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3546d80f]
2019-05-03 17:41:50,459 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,459 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,459 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,459 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,460 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,460 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,460 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3670f00]
2019-05-03 17:41:50,460 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,460 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,460 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,460 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,460 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,460 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,460 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ab18da]
2019-05-03 17:41:50,460 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,460 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,460 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,460 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,460 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,460 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,460 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42257bdd]
2019-05-03 17:41:50,461 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,461 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,461 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,461 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,461 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,461 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:50,461 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687a762c]
2019-05-03 17:41:50,461 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,461 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,461 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,461 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,461 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,461 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:50,472 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:50,472 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:50,472 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:41:50,487 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:50,614 DEBUG [SQL]  - create table Book (id bigint not null, title varchar(255), year integer, primary key (id))
2019-05-03 17:41:50,618 DEBUG [SQL]  - create sequence hibernate_sequence start with 1 increment by 1
2019-05-03 17:41:50,619 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:41:50,619 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:41:50,621 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:41:50,622 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:41:50,622 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:41:50,625 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3113a37
2019-05-03 17:41:50,625 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:41:50,645 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:41:50,649 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:41:50,649 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:50,664 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:50,673 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:50,673 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:50,677 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:41:50,678 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:50,680 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:41:50,680 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:50,680 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:41:50,680 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:50,681 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:50,681 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:41:50,686 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:50,686 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:50,686 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:41:50,687 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:41:50,687 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:50,687 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:41:50,687 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:50,687 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:50,688 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:50,688 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:50,688 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:50,688 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:41:50,688 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:50,688 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:50,688 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:41:50,688 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:50,693 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:50,693 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:41:50,693 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:50,696 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:41:50,696 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:50,698 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:41:50,700 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@5b87ed94]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:41:50,712 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:50,713 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:50,713 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@44ea608c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:41:50,713 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:41:50,713 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:41:50,713 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:41:50,742 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:41:50,743 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:41:50,743 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@50cf5a23
2019-05-03 17:41:50,744 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:41:50,749 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:41:50,750 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:50,750 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:50,750 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:50,750 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:50,750 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:41:50,751 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:41:50,751 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:41:50,751 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:41:50,751 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:41:50,751 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:41:50,752 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:41:50,757 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:41:50,758 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:41:50,758 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:41:50,759 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:41:50,759 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:41:50,759 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:41:50,762 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:41:50,762 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:41:50,762 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:41:50,765 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:41:50,765 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:41:50,765 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:41:50,765 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:50,766 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:41:50,767 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@678040b3
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@17f460bb
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@64a1923a
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7d2a6eac
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18ca3c62
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2c0f7678
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@44d70181
2019-05-03 17:41:50,768 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6aa648b9
2019-05-03 17:41:50,768 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:50,871 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:50,871 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:50,871 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:41:50,871 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:41:50,873 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:50,875 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:41:50,875 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:41:50,875 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:41:50,876 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:41:50,876 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:41:50,876 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:41:50,876 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:41:50,877 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:41:50,877 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:50,877 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:41:50,877 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:41:50,877 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:41:50,877 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:41:50,878 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:50,878 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:41:50,878 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:41:50,878 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:41:50,878 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:41:50,878 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:50,878 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:41:50,878 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:41:50,878 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:41:50,878 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:41:50,878 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:41:50,878 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:41:50,878 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:41:50,878 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:41:50,879 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:41:50,879 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:41:50,879 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:41:50,879 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:41:50,879 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:41:50,879 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:41:50,879 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:41:50,879 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:41:50,879 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:41:50,879 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:41:50,879 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:41:50,879 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:41:50,879 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:41:50,879 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:41:50,879 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:41:50,879 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:41:50,880 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:41:50,880 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6034e75d, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@15b986cd, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:41:50,880 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:41:50,880 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:50,880 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:50,881 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:50,881 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:50,881 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:41:50,881 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:41:50,881 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:41:50,881 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:41:50,881 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:41:50,881 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:41:50,881 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@456abb66]
2019-05-03 17:41:50,881 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,881 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,881 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,881 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,882 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,882 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:50,882 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7da10b5b]
2019-05-03 17:41:50,882 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,882 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,882 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,882 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,882 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,882 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:50,882 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31be6b49]
2019-05-03 17:41:50,882 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,882 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,882 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,883 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,883 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,883 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,883 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b989dc7]
2019-05-03 17:41:50,883 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,883 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,883 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,883 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,883 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,883 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,883 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42561fba]
2019-05-03 17:41:50,883 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,883 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,883 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,883 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,883 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,883 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,883 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46b695ec]
2019-05-03 17:41:50,883 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,883 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,883 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,883 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,884 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,884 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,884 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@325f7fa9]
2019-05-03 17:41:50,884 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,884 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,884 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,884 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,884 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,884 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,884 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a5d002]
2019-05-03 17:41:50,884 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,884 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,884 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,884 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,884 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,884 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,884 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aa6202e]
2019-05-03 17:41:50,884 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,884 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,884 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,884 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,884 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,884 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:50,884 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@771158fb]
2019-05-03 17:41:50,884 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,884 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,884 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,885 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,885 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,885 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:50,885 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62d0ac62]
2019-05-03 17:41:50,885 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:50,885 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:50,885 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:50,885 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:50,885 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:50,885 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:50,885 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:50,885 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:50,885 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:41:50,885 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:51,001 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:41:51,002 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:41:51,002 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:41:51,003 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:41:51,003 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:41:51,003 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:41:51,003 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3113a37
2019-05-03 17:41:51,003 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:41:51,003 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:41:51,004 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:41:51,004 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,004 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:51,005 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:51,005 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:51,008 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:41:51,008 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,009 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:41:51,009 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,009 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:41:51,009 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,009 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:51,009 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:41:51,010 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:51,010 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:51,010 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:41:51,010 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:41:51,011 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:51,013 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:41:51,013 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,013 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:51,014 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:51,014 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:51,014 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:51,014 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:41:51,014 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:51,014 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:51,014 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:41:51,014 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,014 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:51,014 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:41:51,014 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,014 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:41:51,014 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,016 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:41:51,016 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@44ea608c]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:41:51,020 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:51,021 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:51,021 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6bfdb014, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:41:51,021 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:41:51,021 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:41:51,021 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:41:51,066 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:41:51,074 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:41:51,074 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@72889280
2019-05-03 17:41:51,074 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:41:51,084 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:41:51,085 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:51,085 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:51,085 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:51,085 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:51,085 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:41:51,085 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:41:51,085 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:41:51,085 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:41:51,086 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:41:51,086 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:41:51,086 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:41:51,087 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:41:51,088 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:41:51,089 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:41:51,089 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:41:51,090 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:41:51,090 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:41:51,092 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:41:51,092 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:41:51,092 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:41:51,094 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:41:51,095 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:41:51,095 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:41:51,095 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:51,095 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@46044faa
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1358b28e
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a78dacd
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19f9d595
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7de4a01f
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bfeb1ef
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@778ca8ef
2019-05-03 17:41:51,096 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@208e9ef6
2019-05-03 17:41:51,097 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:51,200 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:51,200 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:51,200 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:41:51,200 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:41:51,202 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:51,204 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:41:51,204 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:41:51,204 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:41:51,205 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:41:51,205 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:41:51,205 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:41:51,205 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:41:51,205 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:41:51,205 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:51,205 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:41:51,205 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:41:51,205 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:41:51,205 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:41:51,205 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:51,205 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:41:51,205 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:41:51,205 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:41:51,205 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:41:51,206 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:51,206 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:41:51,206 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:41:51,206 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:41:51,206 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:41:51,206 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:41:51,206 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:41:51,206 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:41:51,206 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:41:51,206 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:41:51,206 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:41:51,206 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:41:51,206 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:41:51,206 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:41:51,207 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:41:51,207 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:41:51,207 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:41:51,207 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:41:51,207 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:41:51,207 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:41:51,207 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:41:51,207 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:41:51,207 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:41:51,207 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:41:51,207 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:41:51,207 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:41:51,207 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:41:51,207 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:41:51,207 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@111610e6, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@5bdaf2ce, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:41:51,208 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:41:51,208 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:51,208 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:51,208 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:51,208 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:51,208 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:41:51,208 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:41:51,208 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:41:51,208 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:41:51,208 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:41:51,208 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:41:51,208 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fcc529]
2019-05-03 17:41:51,208 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,208 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,208 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,208 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,209 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,209 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,209 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4beddc56]
2019-05-03 17:41:51,209 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,209 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,209 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,209 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,209 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,209 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,209 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b812421]
2019-05-03 17:41:51,209 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,209 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,209 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,209 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,209 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,209 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,209 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7882c44a]
2019-05-03 17:41:51,209 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,209 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,209 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,209 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,209 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,209 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,209 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20d11153]
2019-05-03 17:41:51,209 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,209 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,209 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,209 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,210 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,210 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,210 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5649ec46]
2019-05-03 17:41:51,210 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,210 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,210 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,210 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,210 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,210 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,210 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502f8b57]
2019-05-03 17:41:51,210 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,210 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,210 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,210 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,210 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,210 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,210 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fe01805]
2019-05-03 17:41:51,210 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,210 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,210 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,210 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,210 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,210 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,210 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@794b435f]
2019-05-03 17:41:51,210 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,210 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,210 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,210 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,211 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,211 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,211 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@779dfe55]
2019-05-03 17:41:51,211 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,211 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,211 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,211 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,211 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,211 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,211 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1144a55a]
2019-05-03 17:41:51,211 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,211 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,211 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,211 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,211 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,211 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,211 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,211 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,211 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:41:51,211 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:51,323 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:41:51,323 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:41:51,323 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:41:51,324 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:41:51,324 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:41:51,324 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:41:51,324 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3113a37
2019-05-03 17:41:51,324 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:41:51,324 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:41:51,325 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:41:51,325 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,325 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:51,326 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:51,326 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:51,326 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:41:51,326 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,327 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:41:51,327 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,327 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:41:51,327 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,327 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:51,327 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:41:51,328 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:51,328 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:51,328 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:41:51,328 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:41:51,328 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:51,329 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:41:51,329 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,329 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:51,330 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:51,330 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:51,330 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:51,330 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:41:51,330 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:51,330 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:51,330 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:41:51,330 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,330 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:51,330 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:41:51,330 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,330 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:41:51,330 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,331 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:41:51,331 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@6bfdb014]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:41:51,334 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:51,334 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:51,334 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@547c04c4, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:41:51,335 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:41:51,335 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:41:51,335 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:41:51,353 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:41:51,354 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:41:51,354 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@30e92cb9
2019-05-03 17:41:51,355 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:41:51,360 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:41:51,361 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:51,361 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:51,361 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:51,361 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:51,361 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:41:51,361 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:41:51,361 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:41:51,361 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:41:51,362 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:41:51,362 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:41:51,362 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:41:51,363 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:41:51,364 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:41:51,364 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:41:51,366 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:41:51,366 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:41:51,366 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:41:51,368 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:41:51,368 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:41:51,368 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:41:51,370 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:41:51,371 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:41:51,371 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:41:51,371 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:51,371 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3c5a54b7
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61f2c3f0
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@291120f4
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@417ad4f3
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f6bcf87
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@58f174d9
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@78c7f9b3
2019-05-03 17:41:51,372 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6f8d7714
2019-05-03 17:41:51,372 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:51,478 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:51,478 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:51,478 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:41:51,478 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:41:51,480 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:51,483 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:41:51,483 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:41:51,483 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:41:51,484 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:41:51,484 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:41:51,484 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:41:51,484 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:41:51,484 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:41:51,484 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:51,484 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:41:51,484 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:41:51,484 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:41:51,484 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:41:51,485 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:51,485 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:41:51,485 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:41:51,485 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:41:51,485 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:41:51,485 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:51,485 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:41:51,485 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:41:51,485 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:41:51,485 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:41:51,485 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:41:51,485 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:41:51,485 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:41:51,485 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:41:51,486 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:41:51,486 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:41:51,486 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:41:51,486 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:41:51,486 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:41:51,486 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:41:51,486 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:41:51,486 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:41:51,486 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:41:51,486 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:41:51,486 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:41:51,486 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:41:51,486 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:41:51,486 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:41:51,486 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:41:51,486 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:41:51,487 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:41:51,487 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@e8fadb0, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@89c65d5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:41:51,488 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:41:51,489 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:51,489 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:51,489 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:51,489 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:51,489 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:41:51,490 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:41:51,490 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:41:51,490 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:41:51,490 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:41:51,490 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:41:51,490 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d3e6d34]
2019-05-03 17:41:51,490 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,490 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,490 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,490 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,490 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,490 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,490 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a94fa5]
2019-05-03 17:41:51,490 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,490 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,490 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,490 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,490 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,490 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,490 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2873d672]
2019-05-03 17:41:51,490 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,490 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,490 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,490 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,490 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,491 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,491 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@577f9109]
2019-05-03 17:41:51,491 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,491 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,491 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,491 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,491 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,491 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,491 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757529a4]
2019-05-03 17:41:51,491 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,491 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,491 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,491 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,491 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,491 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,492 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
2019-05-03 17:41:51,492 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,492 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,492 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,492 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,492 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,492 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,492 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec77191]
2019-05-03 17:41:51,492 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,492 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,492 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,492 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,492 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,492 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,492 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450078a]
2019-05-03 17:41:51,492 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,492 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,492 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,492 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,492 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,492 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,492 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
2019-05-03 17:41:51,492 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,492 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,492 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,492 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,493 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,493 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,493 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1792e7]
2019-05-03 17:41:51,493 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,493 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,493 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,493 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,493 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,493 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,493 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eb631b8]
2019-05-03 17:41:51,493 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,493 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,493 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,493 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,493 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,493 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,493 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,493 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,493 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:41:51,493 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:51,603 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:41:51,604 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:41:51,604 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:41:51,605 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:41:51,605 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:41:51,605 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:41:51,605 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3113a37
2019-05-03 17:41:51,605 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:41:51,605 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:41:51,605 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:41:51,606 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,606 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:51,606 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:51,606 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:51,606 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:41:51,606 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,607 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:41:51,607 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,607 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:41:51,607 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,607 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:51,607 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:41:51,607 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:51,607 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:51,607 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:41:51,607 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:41:51,607 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:51,608 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:41:51,608 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,608 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:51,608 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:51,608 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:51,608 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:51,608 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:41:51,608 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:51,608 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:51,608 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:41:51,608 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,608 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:51,608 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:41:51,608 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,608 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:41:51,609 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,609 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:41:51,609 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@547c04c4]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:41:51,611 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:51,611 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:41:51,611 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7ed9ae94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:41:51,611 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:41:51,611 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:41:51,611 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:41:51,628 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:41:51,629 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:41:51,629 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@66908383
2019-05-03 17:41:51,630 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:41:51,633 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:41:51,635 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:51,635 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:51,635 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:51,635 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:41:51,635 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:41:51,635 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:41:51,635 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:41:51,635 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:41:51,636 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:41:51,636 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:41:51,636 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:41:51,637 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:41:51,638 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:41:51,638 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:41:51,639 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:41:51,639 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:41:51,639 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:41:51,641 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:41:51,641 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:41:51,641 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:41:51,643 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:41:51,643 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:41:51,643 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:41:51,643 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:41:51,643 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:51,643 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:51,643 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:41:51,643 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:41:51,643 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:41:51,643 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:41:51,643 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:51,643 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:51,643 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@72458efc
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@36bc415e
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a74d228
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349d0836
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6a714237
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e134896
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72ba28ee
2019-05-03 17:41:51,644 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e3a5237
2019-05-03 17:41:51,644 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:51,746 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:51,747 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:41:51,747 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:41:51,747 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:41:51,749 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:41:51,751 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:41:51,751 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:41:51,751 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:41:51,752 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:41:51,752 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:41:51,752 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:41:51,752 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:41:51,752 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:41:51,752 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:51,752 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:41:51,752 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:41:51,752 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:41:51,752 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:41:51,752 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:51,752 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:41:51,753 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:41:51,753 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:41:51,753 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:41:51,753 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:41:51,753 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:41:51,753 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:41:51,753 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:41:51,753 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:41:51,753 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:41:51,753 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:41:51,753 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:41:51,753 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:41:51,754 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:41:51,754 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:41:51,754 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:41:51,754 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:41:51,754 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:41:51,754 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:41:51,754 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:41:51,754 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:41:51,754 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:41:51,754 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:41:51,754 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:41:51,754 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:41:51,754 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:41:51,754 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:41:51,754 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:41:51,754 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:41:51,754 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:41:51,754 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@332f25c8, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@2d7e1102, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:41:51,755 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:41:51,755 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:51,755 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:51,755 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:41:51,755 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:41:51,755 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:41:51,755 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:41:51,755 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:41:51,755 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:41:51,755 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:41:51,755 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:41:51,755 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61d01788]
2019-05-03 17:41:51,755 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,755 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,756 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,756 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,756 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,756 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,756 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@264c5d07]
2019-05-03 17:41:51,756 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,756 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,756 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,756 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,756 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,756 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,756 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69cac930]
2019-05-03 17:41:51,756 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,756 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,756 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,756 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,756 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,756 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,756 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d39f2d8]
2019-05-03 17:41:51,757 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,757 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,757 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,757 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,757 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,757 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,757 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55ea2d70]
2019-05-03 17:41:51,757 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,757 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,757 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,757 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,757 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,757 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,757 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@175acfb2]
2019-05-03 17:41:51,757 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,757 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,757 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,757 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,757 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,757 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,757 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e868ef5]
2019-05-03 17:41:51,757 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,757 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,757 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,757 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,757 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,757 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,757 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30af7377]
2019-05-03 17:41:51,757 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,757 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,757 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,757 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,757 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,758 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,758 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dab9dd6]
2019-05-03 17:41:51,758 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,758 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,758 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,758 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,758 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,758 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:41:51,758 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f099cef]
2019-05-03 17:41:51,758 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,758 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,758 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,758 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,758 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,758 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,758 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bff2185]
2019-05-03 17:41:51,758 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:41:51,758 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:41:51,758 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:41:51,758 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:41:51,758 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:41:51,758 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,759 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,759 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:41:51,759 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:41:51,759 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:41:51,873 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:41:51,873 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:41:51,873 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:41:51,874 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:41:51,874 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:41:51,874 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:41:51,874 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3113a37
2019-05-03 17:41:51,874 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:41:51,875 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:41:51,876 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:41:51,876 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,876 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:51,876 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:51,876 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:51,877 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:41:51,877 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,877 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:41:51,877 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,877 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:41:51,877 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,877 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:51,877 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:41:51,877 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:51,877 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:51,878 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:41:51,878 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:41:51,878 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:51,878 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:41:51,878 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,878 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:41:51,878 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:41:51,878 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:41:51,878 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:41:51,878 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:41:51,879 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:41:51,879 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:41:51,879 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:41:51,879 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,879 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:41:51,879 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:41:51,879 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:41:51,879 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:41:51,879 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:41:51,879 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:41:51,879 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@7ed9ae94]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:41:51,881 DEBUG [AbstractDirtiesContextTestExecutionListener]  - After test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:45:41,098 DEBUG [SpringJUnit4ClassRunner]  - SpringJUnit4ClassRunner constructor called with [class pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:41,106 DEBUG [BootstrapUtils]  - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2019-05-03 17:45:41,113 DEBUG [BootstrapUtils]  - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2019-05-03 17:45:41,122 DEBUG [BootstrapUtils]  - Instantiating TestContextBootstrapper for test class [pl.tau.library.service.LibraryManagerTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2019-05-03 17:45:41,144 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@55f3ddb1 declaringClass = 'pl.tau.library.service.LibraryManagerTest', classes = '{}', locations = '{classpath:/beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2019-05-03 17:45:41,160 DEBUG [ActiveProfilesUtils]  - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:41,161 DEBUG [DefaultTestContextBootstrapper]  - @TestExecutionListeners is not present for class [pl.tau.library.service.LibraryManagerTest]: using defaults.
2019-05-03 17:45:41,161 INFO  [DefaultTestContextBootstrapper]  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-05-03 17:45:41,167 DEBUG [DefaultTestContextBootstrapper]  - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
2019-05-03 17:45:41,174 INFO  [DefaultTestContextBootstrapper]  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c]
2019-05-03 17:45:41,175 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:41,175 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:41,190 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:41,190 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:41,191 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:41,192 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:41,192 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:41,192 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:41,194 DEBUG [AbstractDirtiesContextTestExecutionListener]  - Before test class: context [DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
2019-05-03 17:45:41,194 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:41,194 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:41,195 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@5b87ed94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:45:41,196 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:45:41,197 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:45:41,236 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:45:41,395 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:45:41,418 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:45:41,418 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@711f39f9
2019-05-03 17:45:41,443 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:45:41,500 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:45:41,556 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:41,556 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:41,556 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:41,556 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:41,557 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:45:41,558 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:45:41,558 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:45:41,560 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:45:41,560 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:45:41,563 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:45:41,563 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:45:41,590 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:45:41,616 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:45:41,620 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:45:41,630 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:45:41,630 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:45:41,632 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:45:41,678 DEBUG [logging]  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-05-03 17:45:41,688 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:45:41,694 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:45:41,697 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:45:41,769 INFO  [Version]  - HHH000412: Hibernate Core {5.1.6.Final}
2019-05-03 17:45:41,772 INFO  [Environment]  - HHH000206: hibernate.properties not found
2019-05-03 17:45:41,773 INFO  [Environment]  - HHH000021: Bytecode provider name : javassist
2019-05-03 17:45:41,788 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:45:41,793 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:45:41,793 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:45:41,802 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:45:41,808 INFO  [Version]  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-05-03 17:45:41,825 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:41,826 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:41,826 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:41,826 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:45:41,827 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:45:41,828 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:45:41,829 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:41,829 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:41,829 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:41,830 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:41,830 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:41,830 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:41,832 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:41,832 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:41,832 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:41,832 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:41,832 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:41,832 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:41,833 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:41,833 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:41,834 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:41,834 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:41,835 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:41,835 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:41,836 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:41,836 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:41,836 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:41,837 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:45:41,837 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:45:41,838 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:45:41,838 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:45:41,839 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:45:41,839 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:45:41,839 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:45:41,840 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:45:41,840 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:45:41,840 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:45:41,842 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:45:41,842 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:45:41,843 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:45:41,844 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:45:41,845 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:41,845 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:41,845 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:41,846 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:45:41,846 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:41,846 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:41,846 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:41,847 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:45:41,847 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:45:41,848 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:45:41,848 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:45:41,848 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:45:41,849 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:45:41,849 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:45:41,849 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:45:41,849 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:45:41,850 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:45:41,850 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:45:41,850 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:45:41,851 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:41,851 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:41,851 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:41,852 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:41,852 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:41,852 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:41,852 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:45:41,853 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:45:41,854 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:41,854 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:41,854 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:41,854 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:41,855 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:41,855 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:41,855 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:45:41,856 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:45:41,858 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:45:41,858 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:45:41,859 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:45:41,861 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:45:41,861 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:45:41,863 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:45:41,863 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:45:41,863 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:45:41,863 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:45:41,864 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:45:41,866 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:45:41,866 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:45:41,866 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bec854f
2019-05-03 17:45:41,866 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31edaa7d
2019-05-03 17:45:41,866 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26adfd2d
2019-05-03 17:45:41,866 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336e6b6
2019-05-03 17:45:41,866 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c3fdb62
2019-05-03 17:45:41,866 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205d38da
2019-05-03 17:45:41,866 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6950ed69
2019-05-03 17:45:41,866 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dd7b5a3
2019-05-03 17:45:41,874 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:45:42,018 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:45:42,018 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:45:42,018 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:45:42,027 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:45:42,048 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:45:42,138 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:45:42,138 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:45:42,139 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:45:42,139 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:45:42,139 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:45:42,140 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:45:42,140 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:45:42,141 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:45:42,142 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:45:42,142 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:45:42,142 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:45:42,142 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:45:42,142 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:45:42,143 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:45:42,192 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:45:42,210 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:45:42,223 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:45:42,223 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:45:42,229 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:45:42,234 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:45:42,236 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:45:42,252 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:42,254 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:45:42,255 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:45:42,256 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:45:42,258 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:45:42,260 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:42,260 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:45:42,260 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:45:42,260 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:45:42,260 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:45:42,260 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:42,260 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:45:42,260 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:45:42,260 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:45:42,260 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:45:42,261 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:45:42,261 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:45:42,261 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:45:42,262 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:45:42,283 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:45:42,283 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:45:42,284 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:45:42,284 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:45:42,284 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:45:42,284 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:45:42,284 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:45:42,284 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:45:42,284 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:45:42,284 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:45:42,284 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:45:42,284 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:45:42,284 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:45:42,285 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:45:42,285 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:45:42,285 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:45:42,285 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:45:42,285 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:45:42,285 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:45:42,285 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:45:42,285 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:45:42,315 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:45:42,315 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4264b240, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3bd82cf5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:45:42,322 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:45:42,347 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:45:42,347 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:45:42,357 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:45:42,357 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:45:42,403 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:45:42,403 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:45:42,403 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:45:42,403 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:45:42,403 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:45:42,403 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:45:42,422 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ed0ff3]
2019-05-03 17:45:42,424 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,424 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,424 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,434 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,437 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,439 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:42,439 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7f2382]
2019-05-03 17:45:42,439 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,439 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,439 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,439 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,440 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,440 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:42,440 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6815c5f2]
2019-05-03 17:45:42,440 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,440 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,440 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,440 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,440 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,440 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,440 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60094a13]
2019-05-03 17:45:42,440 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,440 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,440 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,440 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,440 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,440 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,440 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c32886a]
2019-05-03 17:45:42,440 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,440 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,440 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,441 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,441 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,441 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,441 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b892d5]
2019-05-03 17:45:42,441 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,441 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,441 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,441 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,441 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,441 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,441 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3546d80f]
2019-05-03 17:45:42,441 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,441 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,441 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,441 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,442 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,442 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,442 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3670f00]
2019-05-03 17:45:42,442 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,442 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,442 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,442 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,442 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,442 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,442 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ab18da]
2019-05-03 17:45:42,442 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,442 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,442 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,442 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,442 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,442 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,442 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42257bdd]
2019-05-03 17:45:42,442 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,443 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,443 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,443 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,443 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,443 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:42,443 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687a762c]
2019-05-03 17:45:42,443 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,443 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,443 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,443 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,443 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,443 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:42,454 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:42,454 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:42,454 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:45:42,470 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:45:42,587 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:45:42,590 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:45:42,590 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:45:42,592 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:45:42,593 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:45:42,593 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:45:42,596 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:45:42,596 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:45:42,616 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:45:42,620 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:45:42,620 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:42,636 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:45:42,646 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:45:42,647 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:45:42,651 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:45:42,651 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:42,654 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:45:42,654 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:42,655 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:45:42,655 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:42,655 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:45:42,655 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:45:42,661 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:45:42,661 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:45:42,661 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:45:42,661 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:45:42,661 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:45:42,662 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:45:42,662 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:42,662 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:45:42,662 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:45:42,662 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:45:42,662 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:45:42,662 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:45:42,663 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:45:42,663 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:45:42,663 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:45:42,663 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:42,668 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:45:42,668 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:45:42,668 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:42,671 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:45:42,671 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:42,672 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:45:42,675 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@5b87ed94]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:45:42,685 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:42,686 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:42,686 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@632aa1a3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:45:42,686 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:45:42,686 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:45:42,686 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:45:42,712 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:45:42,713 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:45:42,713 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@20765ed5
2019-05-03 17:45:42,714 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:45:42,720 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:45:42,721 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:42,721 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:42,721 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:42,722 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:42,722 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:45:42,722 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:45:42,722 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:45:42,723 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:45:42,723 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:45:42,723 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:45:42,723 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:45:42,725 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:45:42,726 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:45:42,727 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:45:42,732 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:45:42,735 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:45:42,735 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:45:42,738 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:45:42,738 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:45:42,738 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:45:42,741 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:45:42,741 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:45:42,742 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:45:42,742 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:42,742 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:42,743 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44d70181
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6aa648b9
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@23c650a3
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@742d4e15
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@88a8218
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50b1f030
2019-05-03 17:45:42,744 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4163f1cd
2019-05-03 17:45:42,745 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5fa05212
2019-05-03 17:45:42,745 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:45:42,848 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:45:42,848 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:45:42,848 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:45:42,848 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:45:42,850 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:45:42,852 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:45:42,853 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:45:42,853 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:45:42,853 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:45:42,853 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:45:42,853 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:45:42,853 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:45:42,853 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:45:42,853 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:42,853 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:45:42,853 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:45:42,853 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:45:42,853 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:45:42,854 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:42,854 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:45:42,854 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:45:42,854 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:45:42,854 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:45:42,854 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:42,854 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:45:42,854 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:45:42,854 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:45:42,854 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:45:42,854 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:45:42,854 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:45:42,854 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:45:42,854 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:45:42,855 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:45:42,855 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:45:42,855 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:45:42,855 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:45:42,855 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:45:42,855 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:45:42,855 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:45:42,855 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:45:42,855 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:45:42,855 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:45:42,855 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:45:42,855 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:45:42,855 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:45:42,855 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:45:42,855 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:45:42,855 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:45:42,856 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:45:42,856 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@219f4597, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@17f460bb, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:45:42,856 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:45:42,856 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:45:42,856 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:45:42,856 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:45:42,856 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:45:42,857 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:45:42,857 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:45:42,857 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:45:42,857 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:45:42,857 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:45:42,857 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:45:42,857 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b989dc7]
2019-05-03 17:45:42,857 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,857 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,857 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,857 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,857 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,857 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:42,857 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42561fba]
2019-05-03 17:45:42,857 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,857 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,858 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,858 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,858 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,858 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:42,858 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46b695ec]
2019-05-03 17:45:42,858 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,858 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,858 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,858 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,858 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,858 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,858 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@325f7fa9]
2019-05-03 17:45:42,858 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,858 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,858 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,859 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,859 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,859 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,859 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a5d002]
2019-05-03 17:45:42,859 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,859 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,859 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,859 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,859 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,859 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,859 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aa6202e]
2019-05-03 17:45:42,859 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,859 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,859 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,859 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,859 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,859 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,859 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@771158fb]
2019-05-03 17:45:42,859 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,859 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,859 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,859 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,859 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,859 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,859 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62d0ac62]
2019-05-03 17:45:42,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,860 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,860 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,860 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,860 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,860 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6826c41e]
2019-05-03 17:45:42,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,860 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,860 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,860 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,860 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:42,860 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64d43929]
2019-05-03 17:45:42,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,860 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,860 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,860 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,860 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:42,860 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@437ebf59]
2019-05-03 17:45:42,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:42,860 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:42,861 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:42,861 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:42,861 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:42,861 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:42,861 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:42,861 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:42,861 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:45:42,861 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:45:42,970 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:45:42,970 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:45:42,970 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:45:42,971 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:45:42,972 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:45:42,973 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:45:42,973 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:45:42,973 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:45:42,973 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:45:42,974 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:45:42,974 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:42,974 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:45:42,975 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:45:42,975 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:45:42,976 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:45:42,976 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:42,979 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:45:42,979 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:42,979 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:45:42,979 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:42,980 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:45:42,980 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:45:42,980 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:45:42,980 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:45:42,981 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:45:42,981 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:45:42,981 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:45:42,983 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:45:42,983 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:42,984 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:45:42,985 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:45:42,985 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:45:42,985 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:45:42,985 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:45:42,986 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:45:42,986 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:45:42,986 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:45:42,986 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:42,986 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:45:42,986 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:45:42,986 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:42,986 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:45:42,986 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:42,987 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:45:42,988 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@632aa1a3]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:45:42,991 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:42,992 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:42,992 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@6bfdb014, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:45:42,992 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:45:42,992 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:45:42,992 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:45:43,017 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:45:43,019 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:45:43,019 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@72889280
2019-05-03 17:45:43,019 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:45:43,029 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:45:43,035 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:43,035 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:43,036 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:43,036 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:43,037 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:45:43,037 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:45:43,037 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:45:43,039 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:45:43,040 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:45:43,040 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:45:43,043 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:45:43,053 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:45:43,053 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:45:43,054 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:45:43,055 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:45:43,055 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:45:43,056 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:45:43,060 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:45:43,060 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:45:43,060 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:45:43,067 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:45:43,067 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:45:43,067 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:45:43,067 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:43,068 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:43,069 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:43,070 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@46044faa
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1358b28e
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a78dacd
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19f9d595
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7de4a01f
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bfeb1ef
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@778ca8ef
2019-05-03 17:45:43,071 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@208e9ef6
2019-05-03 17:45:43,072 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:45:43,184 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:45:43,184 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:45:43,184 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:45:43,184 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:45:43,186 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:45:43,188 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:45:43,188 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:45:43,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:45:43,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:45:43,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:45:43,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:45:43,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:45:43,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:45:43,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:45:43,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:45:43,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:45:43,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:45:43,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:45:43,189 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:45:43,189 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:45:43,189 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:45:43,189 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:45:43,189 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:45:43,189 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:45:43,189 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:45:43,189 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:45:43,190 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:43,190 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:45:43,190 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:45:43,190 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:45:43,190 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:45:43,190 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:43,190 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:45:43,190 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:45:43,190 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:45:43,190 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:45:43,190 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:43,190 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:45:43,190 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:45:43,190 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:45:43,190 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:45:43,191 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:45:43,191 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:45:43,191 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:45:43,191 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:45:43,191 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:45:43,191 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:45:43,191 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:45:43,191 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:45:43,191 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:45:43,191 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:45:43,191 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:45:43,191 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:45:43,191 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:45:43,191 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:45:43,191 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:45:43,191 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:45:43,191 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:45:43,191 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:45:43,191 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:45:43,192 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:45:43,192 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:45:43,192 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:45:43,192 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:45:43,192 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:45:43,192 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:45:43,192 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:45:43,192 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:45:43,193 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:45:43,193 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@111610e6, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@5bdaf2ce, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:45:43,193 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:45:43,194 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:45:43,194 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:45:43,194 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:45:43,194 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:45:43,195 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:45:43,195 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:45:43,195 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:45:43,195 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:45:43,195 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:45:43,195 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:45:43,195 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fcc529]
2019-05-03 17:45:43,195 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,195 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,195 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,195 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,195 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,195 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,195 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4beddc56]
2019-05-03 17:45:43,195 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,195 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,195 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,195 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,195 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,195 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,195 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b812421]
2019-05-03 17:45:43,195 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,195 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,195 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,195 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,195 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,195 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,195 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7882c44a]
2019-05-03 17:45:43,195 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,196 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,196 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,196 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,196 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,196 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,196 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20d11153]
2019-05-03 17:45:43,196 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,196 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,196 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,196 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,196 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,196 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,196 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5649ec46]
2019-05-03 17:45:43,196 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,196 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,196 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,196 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,196 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,196 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,196 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502f8b57]
2019-05-03 17:45:43,196 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,196 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,196 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,197 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,197 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,197 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,197 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fe01805]
2019-05-03 17:45:43,197 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,197 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,197 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,197 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,197 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,197 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,197 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@794b435f]
2019-05-03 17:45:43,197 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,197 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,197 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,197 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,197 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,197 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,197 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@779dfe55]
2019-05-03 17:45:43,197 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,197 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,197 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,197 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,197 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,197 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,197 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1144a55a]
2019-05-03 17:45:43,197 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,197 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,198 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,198 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,198 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,198 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,198 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,198 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,198 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:45:43,198 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:45:43,307 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:45:43,308 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:45:43,308 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:45:43,309 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:45:43,309 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:45:43,309 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:45:43,309 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:45:43,309 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:45:43,309 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:45:43,311 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:45:43,311 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:43,311 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:45:43,312 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:45:43,312 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:45:43,312 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:45:43,312 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:43,313 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:45:43,313 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:43,313 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:45:43,313 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:43,314 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:45:43,314 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:45:43,314 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:45:43,314 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:45:43,314 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:45:43,314 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:45:43,314 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:45:43,315 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:45:43,315 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:43,315 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:45:43,315 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:45:43,315 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:45:43,315 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:45:43,315 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:45:43,315 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:45:43,315 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:45:43,315 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:45:43,315 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:43,315 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:45:43,316 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:45:43,316 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:43,316 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:45:43,316 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:43,316 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:45:43,317 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@6bfdb014]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:45:43,321 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:43,321 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:43,321 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@547c04c4, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:45:43,322 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:45:43,322 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:45:43,322 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:45:43,354 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:45:43,356 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:45:43,356 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@30e92cb9
2019-05-03 17:45:43,356 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:45:43,360 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:45:43,361 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:43,361 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:43,361 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:43,361 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:43,362 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:45:43,362 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:45:43,362 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:45:43,362 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:45:43,363 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:45:43,363 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:45:43,363 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:45:43,364 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:45:43,364 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:45:43,367 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:45:43,368 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:45:43,371 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:45:43,373 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:45:43,383 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:45:43,383 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:45:43,383 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:45:43,385 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:45:43,386 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:45:43,386 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:45:43,386 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:45:43,387 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3c5a54b7
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61f2c3f0
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@291120f4
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@417ad4f3
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f6bcf87
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@58f174d9
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@78c7f9b3
2019-05-03 17:45:43,388 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6f8d7714
2019-05-03 17:45:43,388 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:45:43,497 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:45:43,497 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:45:43,497 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:45:43,497 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:45:43,499 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:45:43,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:45:43,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:45:43,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:45:43,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:45:43,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:45:43,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:45:43,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:45:43,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:45:43,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:45:43,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:45:43,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:45:43,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:45:43,501 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:45:43,502 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:45:43,502 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:45:43,502 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:45:43,502 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:45:43,502 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:45:43,502 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:45:43,502 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:45:43,502 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:45:43,503 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:43,503 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:45:43,503 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:45:43,503 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:45:43,503 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:45:43,503 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:43,503 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:45:43,503 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:45:43,503 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:45:43,503 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:45:43,503 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:43,503 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:45:43,503 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:45:43,503 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:45:43,503 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:45:43,504 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:45:43,504 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:45:43,504 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:45:43,504 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:45:43,504 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:45:43,504 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:45:43,504 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:45:43,504 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:45:43,504 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:45:43,504 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:45:43,504 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:45:43,504 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:45:43,504 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:45:43,504 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:45:43,504 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:45:43,504 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:45:43,504 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:45:43,505 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:45:43,505 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:45:43,505 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:45:43,505 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:45:43,505 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:45:43,505 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:45:43,505 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:45:43,505 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:45:43,505 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:45:43,505 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@e8fadb0, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@89c65d5, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2019-05-03 17:45:43,505 DEBUG [JaccIntegrator]  - Skipping JACC integration as it was not enabled
2019-05-03 17:45:43,505 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:45:43,505 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:45:43,506 DEBUG [ClassLoaderAccessImpl]  - Not known whether passed class name [pl.tau.library.domain.Book] is safe
2019-05-03 17:45:43,506 DEBUG [ClassLoaderAccessImpl]  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pl.tau.library.domain.Book
2019-05-03 17:45:43,506 DEBUG [AbstractEntityPersister]  - Static SQL for entity: pl.tau.library.domain.Book
2019-05-03 17:45:43,506 DEBUG [AbstractEntityPersister]  -  Version select: select id from Book where id =?
2019-05-03 17:45:43,506 DEBUG [AbstractEntityPersister]  -  Snapshot select: select book_.id, book_.title as title2_0_, book_.year as year3_0_ from Book book_ where book_.id=?
2019-05-03 17:45:43,506 DEBUG [AbstractEntityPersister]  -  Insert 0: insert into Book (title, year, id) values (?, ?, ?)
2019-05-03 17:45:43,506 DEBUG [AbstractEntityPersister]  -  Update 0: update Book set title=?, year=? where id=?
2019-05-03 17:45:43,506 DEBUG [AbstractEntityPersister]  -  Delete 0: delete from Book where id=?
2019-05-03 17:45:43,506 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d3e6d34]
2019-05-03 17:45:43,506 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,506 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,506 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,506 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,507 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,507 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [NONE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,507 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a94fa5]
2019-05-03 17:45:43,507 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,507 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,507 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,507 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,507 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,507 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,507 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2873d672]
2019-05-03 17:45:43,507 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,507 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,507 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,507 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,507 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,507 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,507 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@577f9109]
2019-05-03 17:45:43,507 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,507 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,507 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,507 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,507 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,507 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,507 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757529a4]
2019-05-03 17:45:43,507 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,507 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,507 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,507 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,507 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,508 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,508 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
2019-05-03 17:45:43,508 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,508 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,508 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,508 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,508 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,508 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [FORCE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,508 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec77191]
2019-05-03 17:45:43,508 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,508 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,508 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,508 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,508 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,508 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,508 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450078a]
2019-05-03 17:45:43,508 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,508 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,508 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,508 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,508 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,508 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,508 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
2019-05-03 17:45:43,508 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,508 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,508 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,508 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,508 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,509 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=? for update
2019-05-03 17:45:43,509 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1792e7]
2019-05-03 17:45:43,509 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,509 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,509 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,509 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,509 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,509 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,509 DEBUG [QuerySpacesImpl]  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eb631b8]
2019-05-03 17:45:43,509 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : title
2019-05-03 17:45:43,509 DEBUG [MetamodelGraphWalker]  - Visiting attribute path : year
2019-05-03 17:45:43,509 DEBUG [FetchStyleLoadPlanBuildingAssociationVisitationStrategy]  - Building LoadPlan...
2019-05-03 17:45:43,509 DEBUG [LoadQueryJoinAndFetchProcessor]  - processing queryspace <gen:0>
2019-05-03 17:45:43,509 DEBUG [LoadPlanTreePrinter]  - LoadPlan(entity=pl.tau.library.domain.Book)
    - Returns
       - EntityReturnImpl(entity=pl.tau.library.domain.Book, querySpaceUid=<gen:0>, path=pl.tau.library.domain.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=pl.tau.library.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-05-03 17:45:43,509 DEBUG [EntityLoader]  - Static select for entity pl.tau.library.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,509 DEBUG [Loader]  - Static select for action ACTION_MERGE on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,509 DEBUG [Loader]  - Static select for action ACTION_REFRESH on entity pl.tau.library.domain.Book: select book0_.id as id1_0_0_, book0_.title as title2_0_0_, book0_.year as year3_0_0_ from Book book0_ where book0_.id=?
2019-05-03 17:45:43,509 DEBUG [SessionFactoryImpl]  - Instantiated session factory
2019-05-03 17:45:43,509 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:45:43,617 DEBUG [Table]  - No alter strings for table : Book
2019-05-03 17:45:43,617 DEBUG [JtaPlatformInitiator]  - No JtaPlatform was specified, checking resolver
2019-05-03 17:45:43,617 DEBUG [JtaPlatformResolverInitiator]  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-05-03 17:45:43,618 DEBUG [StandardJtaPlatformResolver]  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-05-03 17:45:43,618 DEBUG [NamedQueryRepository]  - Checking 2 named HQL queries
2019-05-03 17:45:43,618 DEBUG [NamedQueryRepository]  - Checking named query: book.findBook
2019-05-03 17:45:43,618 DEBUG [QueryTranslatorFactoryInitiator]  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c41709a
2019-05-03 17:45:43,618 INFO  [QueryTranslatorFactoryInitiator]  - HHH000397: Using ASTQueryTranslatorFactory
2019-05-03 17:45:43,619 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment
2019-05-03 17:45:43,620 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'pl'
    |  |     |  |  |  |  \-[IDENT] Node: 'tau'
    |  |     |  |  |  \-[IDENT] Node: 'library'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'model'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'modelNameFragment'

2019-05-03 17:45:43,620 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:43,620 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:45:43,620 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:45:43,620 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:45:43,620 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
2019-05-03 17:45:43,620 ERROR [ErrorCounter]  -  Invalid path: 'c.model'
 Invalid path: 'c.model'
	at org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(LiteralProcessor.java:114)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:214)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1048)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1286)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4699)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:43,621 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
2019-05-03 17:45:43,621 ERROR [ErrorCounter]  - <AST>:0:0: unexpected end of subtree
<AST>:0:0: unexpected end of subtree
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1386)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4316)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:43,621 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
2019-05-03 17:45:43,621 ERROR [ErrorCounter]  -  left-hand operand of a binary operator was null
 left-hand operand of a binary operator was null
	at org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:40)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1404)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4643)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2134)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:813)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:607)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:311)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:259)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:43,622 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:45:43,622 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where like ) )
2019-05-03 17:45:43,622 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:45:43,622 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:45:43,622 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'

2019-05-03 17:45:43,622 DEBUG [NamedQueryRepository]  - Checking named query: book.all
2019-05-03 17:45:43,622 DEBUG [QueryTranslatorImpl]  - parse() - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:45:43,623 DEBUG [QueryTranslatorImpl]  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'pl'
       |     |  |  |  |  \-[IDENT] Node: 'tau'
       |     |  |  |  \-[IDENT] Node: 'library'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'b'

2019-05-03 17:45:43,623 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:43,623 DEBUG [HqlSqlBaseWalker]  - select << begin [level=1, statement=select]
2019-05-03 17:45:43,623 DEBUG [FromElement]  - FromClause{level=1} : pl.tau.library.domain.Book (b) -> book0_
2019-05-03 17:45:43,623 DEBUG [FromReferenceNode]  - Resolved : b -> book0_.id
2019-05-03 17:45:43,623 DEBUG [HqlSqlBaseWalker]  - select : finishing up [level=1, statement=select]
2019-05-03 17:45:43,623 DEBUG [HqlSqlWalker]  - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) )
2019-05-03 17:45:43,624 DEBUG [JoinProcessor]  - Using FROM fragment [Book book0_]
2019-05-03 17:45:43,624 DEBUG [HqlSqlBaseWalker]  - select >> end [level=1, statement=select]
2019-05-03 17:45:43,624 DEBUG [QueryTranslatorImpl]  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_0_' {alias=b, className=pl.tau.library.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.title as title2_0_, book0_.year as year3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=pl.tau.library.domain.Book}}

2019-05-03 17:45:43,624 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:43,624 DEBUG [QueryTranslatorImpl]  - HQL: Select b from pl.tau.library.domain.Book b
2019-05-03 17:45:43,624 DEBUG [QueryTranslatorImpl]  - SQL: select book0_.id as id1_0_, book0_.title as title2_0_, book0_.year as year3_0_ from Book book0_
2019-05-03 17:45:43,624 DEBUG [ErrorCounter]  - throwQueryException() : no errors
2019-05-03 17:45:43,624 DEBUG [NamedQueryRepository]  - Checking 0 named SQL queries
2019-05-03 17:45:43,624 ERROR [SessionFactoryImpl]  - HHH000177: Error in named query: book.findBook
org.hibernate.hql.internal.ast.QuerySyntaxException: Invalid path: 'c.model' [Select b from pl.tau.library.domain.Book b where c.model like :modelNameFragment]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74)
	at org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:268)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:765)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:475)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2019-05-03 17:45:43,624 WARN  [GenericApplicationContext]  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
2019-05-03 17:45:43,625 ERROR [TestContextManager]  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61] to prepare test instance [pl.tau.library.service.LibraryManagerTest@547c04c4]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookManagerHibernateImpl': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateSessionFactory' defined in class path resource [beans.xml]: Invocation of init method failed; nested exception is org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 42 more
Caused by: org.hibernate.HibernateException: Errors in named queries: book.findBook
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:484)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:465)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:711)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:615)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 52 more
2019-05-03 17:45:43,627 DEBUG [ProfileValueUtils]  - Retrieved @ProfileValueSourceConfiguration [null] for test class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:43,627 DEBUG [ProfileValueUtils]  - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [pl.tau.library.service.LibraryManagerTest]
2019-05-03 17:45:43,627 DEBUG [DependencyInjectionTestExecutionListener]  - Performing dependency injection for test context [[DefaultTestContext@6325a3ee testClass = LibraryManagerTest, testInstance = pl.tau.library.service.LibraryManagerTest@7ed9ae94, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
2019-05-03 17:45:43,627 DEBUG [AbstractDelegatingSmartContextLoader]  - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2019-05-03 17:45:43,627 DEBUG [AbstractGenericContextLoader]  - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d16f93d testClass = LibraryManagerTest, locations = '{classpath:/beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2019-05-03 17:45:43,628 DEBUG [StandardEnvironment]  - Activating profiles []
2019-05-03 17:45:43,644 DEBUG [ClassPathBeanDefinitionScanner]  - Identified candidate component class: file [G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes\pl\tau\library\service\BookManagerHibernateImpl.class]
2019-05-03 17:45:43,648 DEBUG [XmlBeanDefinitionReader]  - Loaded 16 bean definitions from class path resource [beans.xml]
2019-05-03 17:45:43,648 DEBUG [GenericApplicationContext]  - Refreshing org.springframework.context.support.GenericApplicationContext@66908383
2019-05-03 17:45:43,648 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2019-05-03 17:45:43,658 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
2019-05-03 17:45:43,659 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.driverClassName' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:43,659 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.url' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:43,659 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.username' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:43,659 DEBUG [PropertySourcesPropertyResolver]  - Found key 'jdbc.password' in PropertySource 'localProperties' with value of type String
2019-05-03 17:45:43,659 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2019-05-03 17:45:43,659 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2019-05-03 17:45:43,659 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2019-05-03 17:45:43,659 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2019-05-03 17:45:43,660 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2019-05-03 17:45:43,660 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2019-05-03 17:45:43,660 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2019-05-03 17:45:43,661 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'bookManagerHibernateImpl'
2019-05-03 17:45:43,662 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'hibernateSessionFactory'
2019-05-03 17:45:43,662 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'dataSource'
2019-05-03 17:45:43,663 DEBUG [DriverManagerDataSource]  - Loaded JDBC driver: org.hsqldb.jdbcDriver
2019-05-03 17:45:43,663 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2019-05-03 17:45:43,663 DEBUG [DefaultListableBeanFactory]  - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2019-05-03 17:45:43,665 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-05-03 17:45:43,665 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-05-03 17:45:43,665 DEBUG [IntegratorServiceImpl]  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-05-03 17:45:43,667 DEBUG [Configuration]  - Building session factory using internal StandardServiceRegistryBuilder
2019-05-03 17:45:43,667 DEBUG [ServiceBinding]  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-05-03 17:45:43,667 DEBUG [Configuration]  - Building session factory using provided StandardServiceRegistry
2019-05-03 17:45:43,668 DEBUG [RegionFactoryInitiator]  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25df00a0
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60f00693
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a5a729f
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b09fb41
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@821330f
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration char -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7857fe2
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2657d4dd
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration int -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@387a8303
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c86a017
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dfd3c81
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@169bb4dd
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dafbe45
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d2de489
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration string -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.String -> org.hibernate.type.StringType@41330d4f
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@508dec2b
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1df8da7a
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration url -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efa40fe
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f58853c
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13d73f29
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@311bf055
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78452606
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4470fbd6
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2235eaab
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20bd8be5
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:45:43,668 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@461ad730
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e78b6a5
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e2055d6
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50f6ac94
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration binary -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration [B -> org.hibernate.type.BinaryType@5038d0b5
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45efd90f
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a07d605
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration image -> org.hibernate.type.ImageType@68746f22
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration characters -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration [C -> org.hibernate.type.CharArrayType@2eea88a1
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16612a51
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration text -> org.hibernate.type.TextType@4e0ae11f
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration ntext -> org.hibernate.type.NTextType@9cb8225
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c5ae43b
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b74c5c
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b50df34
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration nclob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b2c5e02
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bc222e
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b5fad2d
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration serializable -> org.hibernate.type.SerializableType@74f6c5d8
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1890516e
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@72458efc
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@36bc415e
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a74d228
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349d0836
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6a714237
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e134896
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72ba28ee
2019-05-03 17:45:43,669 DEBUG [BasicTypeRegistry]  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e3a5237
2019-05-03 17:45:43,669 DEBUG [DriverManagerDataSource]  - Creating new JDBC DriverManager Connection to [jdbc:hsqldb:hsql://localhost/workdb]
2019-05-03 17:45:43,772 DEBUG [JdbcEnvironmentInitiator]  - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:45:43,772 DEBUG [JdbcEnvironmentInitiator]  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
2019-05-03 17:45:43,772 DEBUG [JdbcEnvironmentInitiator]  - JDBC version : 4.0
2019-05-03 17:45:43,772 INFO  [Dialect]  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2019-05-03 17:45:43,774 DEBUG [IdentifierHelperBuilder]  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2019-05-03 17:45:43,775 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-05-03 17:45:43,775 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-05-03 17:45:43,775 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:45:43,775 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-05-03 17:45:43,775 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-05-03 17:45:43,775 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-05-03 17:45:43,776 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-05-03 17:45:43,776 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:45:43,776 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-05-03 17:45:43,776 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-05-03 17:45:43,776 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-05-03 17:45:43,776 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-05-03 17:45:43,776 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-05-03 17:45:43,776 DEBUG [DefaultIdentifierGeneratorFactory]  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-05-03 17:45:43,776 DEBUG [Namespace]  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-05-03 17:45:43,776 DEBUG [AnnotationBinder]  - Binding entity from annotated class: pl.tau.library.domain.Book
2019-05-03 17:45:43,776 DEBUG [QueryBinder]  - Binding named query: book.all => Select b from Book b
2019-05-03 17:45:43,776 DEBUG [QueryBinder]  - Binding named query: book.findBook => Select b from Book b where c.model like :modelNameFragment
2019-05-03 17:45:43,776 DEBUG [Ejb3Column]  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-05-03 17:45:43,776 DEBUG [EntityBinder]  - Import with entity name Book
2019-05-03 17:45:43,776 DEBUG [EntityBinder]  - Bind entity pl.tau.library.domain.Book on table Book
2019-05-03 17:45:43,776 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:43,776 DEBUG [PropertyBinder]  - MetadataSourceProcessor property id with lazy=false
2019-05-03 17:45:43,776 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:id]
2019-05-03 17:45:43,776 DEBUG [SimpleValueBinder]  - building SimpleValue for id
2019-05-03 17:45:43,777 DEBUG [PropertyBinder]  - Building property id
2019-05-03 17:45:43,777 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:43,777 DEBUG [PropertyBinder]  - MetadataSourceProcessor property title with lazy=false
2019-05-03 17:45:43,777 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:title]
2019-05-03 17:45:43,777 DEBUG [SimpleValueBinder]  - building SimpleValue for title
2019-05-03 17:45:43,777 DEBUG [PropertyBinder]  - Building property title
2019-05-03 17:45:43,777 DEBUG [Ejb3Column]  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2019-05-03 17:45:43,777 DEBUG [PropertyBinder]  - MetadataSourceProcessor property year with lazy=false
2019-05-03 17:45:43,777 DEBUG [AbstractPropertyHolder]  - Attempting to locate auto-apply AttributeConverter for property [pl.tau.library.domain.Book:year]
2019-05-03 17:45:43,777 DEBUG [SimpleValueBinder]  - building SimpleValue for year
2019-05-03 17:45:43,777 DEBUG [PropertyBinder]  - Building property year
2019-05-03 17:45:43,777 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for id
2019-05-03 17:45:43,777 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for title
2019-05-03 17:45:43,777 DEBUG [SimpleValueBinder]  - Starting fillSimpleValue for year
2019-05-03 17:45:43,777 DEBUG [PrimaryKey]  - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2019-05-03 17:45:43,778 DEBUG [SessionFactoryImpl]  - Building session factory
2019-05-03 17:45:43,778 DEBUG [Settings]  - SessionFactory name : null
2019-05-03 17:45:43,778 DEBUG [Settings]  - Automatic flush during beforeCompletion(): disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Automatic session close at end of transaction: disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Statistics: disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Deleted entity synthetic identifier rollback: disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Default entity-mode: pojo
2019-05-03 17:45:43,778 DEBUG [Settings]  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Allow initialization of lazy state outside session : disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Using BatchFetchStyle : LEGACY
2019-05-03 17:45:43,778 DEBUG [Settings]  - Default batch fetch size: -1
2019-05-03 17:45:43,778 DEBUG [Settings]  - Maximum outer join fetch depth: null
2019-05-03 17:45:43,778 DEBUG [Settings]  - Default null ordering: NONE
2019-05-03 17:45:43,778 DEBUG [Settings]  - Order SQL updates by primary key: disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Order SQL inserts for batching: disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - multi-tenancy strategy : NONE
2019-05-03 17:45:43,778 DEBUG [Settings]  - JTA Track by Thread: enabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Query language substitutions: {}
2019-05-03 17:45:43,778 DEBUG [Settings]  - JPA query language strict compliance: disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Named query checking : enabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Second-level cache: enabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Second-level query cache: disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@60a2630a
2019-05-03 17:45:43,778 DEBUG [Settings]  - Second-level cache region prefix: null
2019-05-03 17:45:43,778 DEBUG [Settings]  - Optimize second-level cache for minimal puts: disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Structured second-level cache entries: disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Second-level cache direct-reference entries: disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Automatic eviction of collection cache: disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - JDBC batch size: 15
2019-05-03 17:45:43,778 DEBUG [Settings]  - JDBC batch updates for versioned data: enabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Scrollable result sets: enabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - Wrap result sets: disabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - JDBC3 getGeneratedKeys(): enabled
2019-05-03 17:45:43,778 DEBUG [Settings]  - JDBC result set fetch size: null
2019-05-03 17:45:43,778 DEBUG [Settings]  - Connection release mode: ON_CLOSE
2019-05-03 17:45:43,778 DEBUG [Settings]  - Generate SQL with comments: disabled
2019-05-03 17:45:43,778 DEBUG [SessionFactoryImpl]  - Session factory constructed with filter configurations : {}
2019-05-03 17:45:43,779 DEBUG [SessionFactoryImpl]  - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.201-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@332f25c8, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@18b4aac2], java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\Programy\IntelliJ\Tau\07_Library_Spring, java.runtime.version=1.8.0_201-b09, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.io.tmpdir=C:\Users\JDRZEJ~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@2d7e1102, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;G:\Programy\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Users\Jędrzej\AppData\Local\Microsoft\WindowsApps;;., java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Jędrzej, user.timezone=Europe/Belgrade, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=ON_CLOSE, file.encoding=UTF-8, java.specification.version=1.8, user.name=Jędrzej, java.class.path=G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit-rt.jar;G:\Programy\IntelliJ IDEA 2018.3.5\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\test-classes;G:\Programy\IntelliJ\Tau\07_Library_Spring\target\classes;C:\Users\Jędrzej\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Jędrzej\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Jędrzej\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-core\5.1.6.RELEASE\spring-core-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jcl\5.1.6.RELEASE\spring-jcl-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-expression\5.1.6.RELEASE\spring-expression-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-beans\5.1.6.RELEASE\spring-beans-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-aop\5.1.6.RELEASE\spring-aop-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context\5.1.6.RELEASE\spring-context-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-context-support\5.1.6.RELEASE\spring-context-support-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-tx\5.1.6.RELEASE\spring-tx-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-jdbc\5.1.6.RELEASE\spring-jdbc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-orm\5.1.6.RELEASE\spring-orm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-oxm\5.1.6.RELEASE\spring-oxm-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-web\5.1.6.RELEASE\spring-web-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc\5.1.6.RELEASE\spring-webmvc-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-webmvc-portlet\4.3.23.RELEASE\spring-webmvc-portlet-4.3.23.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\springframework\spring-test\5.1.6.RELEASE\spring-test-5.1.6.RELEASE.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\hibernate-core\5.1.6.Final\hibernate-core-5.1.6.Final.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Jędrzej\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Jędrzej\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jędrzej\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Jędrzej\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Jędrzej\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Jędrzej\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Jędrzej\.m2\repository\jboss\javassist\3.7.ga\javassist-3.7.ga.jar;C:\Users\Jędrzej\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Jędrzej\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Jędrzej\.m2\repository\javax\xml\bind\jaxb-api\2.2.11\jaxb-api-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.11\jaxb-core-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.11\jaxb-impl-2.2.11.jar;C:\Users\Jędrzej\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\Jędrzej\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;G:\Programy\IntelliJ IDEA 2018.3.5\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 pl.tau.library.service.LibraryManagerTest, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, hibernate.dialect=org.hibernate.dialect.HSQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_201, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, idea.test.cyclic.buffer.size=1048576, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
